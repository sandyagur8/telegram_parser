{
 "name": "EAS Builders",
 "type": "private_supergroup",
 "id": 1923082540,
 "messages": [
  {
   "id": 3855,
   "type": "message",
   "date": "2024-05-30T14:22:53",
   "date_unixtime": "1717059173",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "This is interesting. Thank you.\n\nI'm still not sure about it as a data exchange format. If there was a selfie in here then the receiver of the proof would not know how to decode the bytes. Potentially, I'd have to either ABI-encode a struct which contains a contentType field and a data field, or I'd have to include the contentType as a leaf node.\n\nI'd prefer the JSON was immediately understandable by a human, so a developer could look at the JSON and write the code to prove it with only the knowledge of how a Merkle tree works and the obviousness of the JSON itself.\n\nOr even, present the JSON to an LLM and have the LLM understand it and write the code to deserialize it and prove it.\n\nIf we want to build blockchain apps that attract ALL the world's developers, we need to focus on developer experience and less esoteric concepts.\n\nAnyway, you've been very helpful, thank you!!",
   "text_entities": [
    {
     "type": "plain",
     "text": "This is interesting. Thank you.\n\nI'm still not sure about it as a data exchange format. If there was a selfie in here then the receiver of the proof would not know how to decode the bytes. Potentially, I'd have to either ABI-encode a struct which contains a contentType field and a data field, or I'd have to include the contentType as a leaf node.\n\nI'd prefer the JSON was immediately understandable by a human, so a developer could look at the JSON and write the code to prove it with only the knowledge of how a Merkle tree works and the obviousness of the JSON itself.\n\nOr even, present the JSON to an LLM and have the LLM understand it and write the code to deserialize it and prove it.\n\nIf we want to build blockchain apps that attract ALL the world's developers, we need to focus on developer experience and less esoteric concepts.\n\nAnyway, you've been very helpful, thank you!!"
    }
   ]
  },
  {
   "id": 3856,
   "type": "message",
   "date": "2024-05-30T14:39:05",
   "date_unixtime": "1717060145",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 3855,
   "text": "OpenZeppelin MT dump is already in json and it comes with leafEncoding afaik",
   "text_entities": [
    {
     "type": "plain",
     "text": "OpenZeppelin MT dump is already in json and it comes with leafEncoding afaik"
    }
   ]
  },
  {
   "id": 3857,
   "type": "message",
   "date": "2024-05-30T14:40:31",
   "date_unixtime": "1717060231",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 2,
   "text": [
    "You can read more about the implementation of OZ Standard MT here:\n",
    {
     "type": "link",
     "text": "https://github.com/OpenZeppelin/merkle-tree?tab=readme-ov-file#standard-merkle-trees"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "You can read more about the implementation of OZ Standard MT here:\n"
    },
    {
     "type": "link",
     "text": "https://github.com/OpenZeppelin/merkle-tree?tab=readme-ov-file#standard-merkle-trees"
    }
   ]
  },
  {
   "id": 3858,
   "type": "message",
   "date": "2024-05-30T15:24:11",
   "date_unixtime": "1717062851",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "I might bring the topic up on their GitHub and see what they think. Cheers, sir!",
   "text_entities": [
    {
     "type": "plain",
     "text": "I might bring the topic up on their GitHub and see what they think. Cheers, sir!"
    }
   ]
  },
  {
   "id": 3859,
   "type": "message",
   "date": "2024-05-30T15:56:31",
   "date_unixtime": "1717064791",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 239,
   "height": 224,
   "text": [
    "Here's my issue, FYI: ",
    {
     "type": "link",
     "text": "https://github.com/OpenZeppelin/merkle-tree/issues/48"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Here's my issue, FYI: "
    },
    {
     "type": "link",
     "text": "https://github.com/OpenZeppelin/merkle-tree/issues/48"
    }
   ]
  },
  {
   "id": 3860,
   "type": "message",
   "date": "2024-05-30T17:26:46",
   "date_unixtime": "1717070206",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3847,
   "text": "Happy to do a call to walk you through this. We have a custom object that includes all the salted leaves and proofs that we use for the private data attestations in our explorer",
   "text_entities": [
    {
     "type": "plain",
     "text": "Happy to do a call to walk you through this. We have a custom object that includes all the salted leaves and proofs that we use for the private data attestations in our explorer"
    }
   ]
  },
  {
   "id": 3861,
   "type": "message",
   "date": "2024-05-30T18:01:59",
   "date_unixtime": "1717072319",
   "edited": "2024-05-31T02:50:48",
   "edited_unixtime": "1717104048",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "Thank you kindly, Steve. It's really that I'm looking to see if anyone has a canonical JSON example we can all point to, or wants to propose one.\n\nAnd that the JSON (or whatever) must contain all the information needed for data exchange.\n\nThe \"big rock first\", I think, is the ability to encode a photo into a leaf node such that the reader of the JSON has all the information to be able to decode and present the photo in a UI, or to be able tell that some base-64 is actually an ANSI/NIST-ITL biometric data file.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you kindly, Steve. It's really that I'm looking to see if anyone has a canonical JSON example we can all point to, or wants to propose one.\n\nAnd that the JSON (or whatever) must contain all the information needed for data exchange.\n\nThe \"big rock first\", I think, is the ability to encode a photo into a leaf node such that the reader of the JSON has all the information to be able to decode and present the photo in a UI, or to be able tell that some base-64 is actually an ANSI/NIST-ITL biometric data file."
    }
   ]
  },
  {
   "id": 3862,
   "type": "message",
   "date": "2024-05-30T18:04:17",
   "date_unixtime": "1717072457",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 2,
   "text": "A photo should be a leaf with bytes type, right? Lemme try to make a demo tomorrow. Afk right now",
   "text_entities": [
    {
     "type": "plain",
     "text": "A photo should be a leaf with bytes type, right? Lemme try to make a demo tomorrow. Afk right now"
    }
   ]
  },
  {
   "id": 3863,
   "type": "message",
   "date": "2024-05-30T18:06:32",
   "date_unixtime": "1717072592",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "Yup, it's bytes but there'll need to be a field next to it to say this is image/jpeg or application/pdf for a PDF.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yup, it's bytes but there'll need to be a field next to it to say this is image/jpeg or application/pdf for a PDF."
    }
   ]
  },
  {
   "id": 3864,
   "type": "message",
   "date": "2024-05-30T18:13:23",
   "date_unixtime": "1717073003",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 2,
   "text": "Understood now.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Understood now."
    }
   ]
  },
  {
   "id": 3865,
   "type": "message",
   "date": "2024-05-30T20:32:41",
   "date_unixtime": "1717081361",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "link",
     "text": "https://github.com/OpenZeppelin/merkle-tree/issues/48"
    },
    "\n\nGot nowhere with OZ."
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://github.com/OpenZeppelin/merkle-tree/issues/48"
    },
    {
     "type": "plain",
     "text": "\n\nGot nowhere with OZ."
    }
   ]
  },
  {
   "id": 3866,
   "type": "message",
   "date": "2024-05-30T20:35:00",
   "date_unixtime": "1717081500",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3861,
   "text": "{\"leaves\":[{\"type\":\"string\",\"name\":\"country\",\"value\":\"USA\",\"salt\":\"0x4c1d319fccf69e25b25678705657dc7c68cc56c7b87398ee3dc20cdf4cf2bf5b\"},{\"type\":\"string\",\"name\":\"name\",\"value\":\"Steve Dakh\",\"salt\":\"0x8e6f32011afd00d16505cac29c970abf5b5f650344334c15b7614c80f65827d2\"}],\"proof\":[\"0x98799b9e83f20b52bb4616ed3f81ed884bbb31ba3983d85ca7b15cf7345f73f2\"],\"proofFlags\":[false,true]}",
   "text_entities": [
    {
     "type": "plain",
     "text": "{\"leaves\":[{\"type\":\"string\",\"name\":\"country\",\"value\":\"USA\",\"salt\":\"0x4c1d319fccf69e25b25678705657dc7c68cc56c7b87398ee3dc20cdf4cf2bf5b\"},{\"type\":\"string\",\"name\":\"name\",\"value\":\"Steve Dakh\",\"salt\":\"0x8e6f32011afd00d16505cac29c970abf5b5f650344334c15b7614c80f65827d2\"}],\"proof\":[\"0x98799b9e83f20b52bb4616ed3f81ed884bbb31ba3983d85ca7b15cf7345f73f2\"],\"proofFlags\":[false,true]}"
    }
   ]
  },
  {
   "id": 3867,
   "type": "message",
   "date": "2024-05-30T20:35:35",
   "date_unixtime": "1717081535",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3861,
   "text": "You can convert a file to bytes and then encode that in a leaf",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can convert a file to bytes and then encode that in a leaf"
    }
   ]
  },
  {
   "id": 3868,
   "type": "message",
   "date": "2024-05-30T20:38:53",
   "date_unixtime": "1717081733",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 3863,
   "text": "How about two leaves. One for the content, one for the mime type?",
   "text_entities": [
    {
     "type": "plain",
     "text": "How about two leaves. One for the content, one for the mime type?"
    }
   ]
  },
  {
   "id": 3869,
   "type": "message",
   "date": "2024-05-30T20:44:15",
   "date_unixtime": "1717082055",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "Yeah I did think of that, but's making what's essentially metadata a first-class peice of data. And if you had two photos, then you'd need two mime type leaves and some way to know which other leaf they refer to.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yeah I did think of that, but's making what's essentially metadata a first-class peice of data. And if you had two photos, then you'd need two mime type leaves and some way to know which other leaf they refer to."
    }
   ]
  },
  {
   "id": 3870,
   "type": "message",
   "date": "2024-05-31T02:03:30",
   "date_unixtime": "1717101210",
   "edited": "2024-05-31T16:28:17",
   "edited_unixtime": "1717153097",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "link",
     "text": "https://gist.github.com/lukepuplett/a0793be0b7765539173df8cabc6b2c06"
    },
    "\n\nOkay, so I don't spam this chat, I've posted a gist. Don't worry too much about it, I don't want to confuse people and waste anyone's time.\n\n I'm off to bed 🙂 gn"
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://gist.github.com/lukepuplett/a0793be0b7765539173df8cabc6b2c06"
    },
    {
     "type": "plain",
     "text": "\n\nOkay, so I don't spam this chat, I've posted a gist. Don't worry too much about it, I don't want to confuse people and waste anyone's time.\n\n I'm off to bed 🙂 gn"
    }
   ]
  },
  {
   "id": 3871,
   "type": "service",
   "date": "2024-05-31T23:03:10",
   "date_unixtime": "1717176790",
   "actor": "Alex Poon | CharmVerse",
   "actor_id": "user5038078184",
   "action": "invite_members",
   "members": [
    "Matt"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 3872,
   "type": "message",
   "date": "2024-05-31T23:05:19",
   "date_unixtime": "1717176919",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "The OᑎᑕᕼᗩIᑎ ᔑᑌᗰᗰEᖇ ᗷᑌIᒪᗪᗩTᕼOᑎ kicks off today! Have you registered yet? ",
    {
     "type": "link",
     "text": "https://onchain-summer.devfolio.co/"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "The OᑎᑕᕼᗩIᑎ ᔑᑌᗰᗰEᖇ ᗷᑌIᒪᗪᗩTᕼOᑎ kicks off today! Have you registered yet? "
    },
    {
     "type": "link",
     "text": "https://onchain-summer.devfolio.co/"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 3873,
   "type": "message",
   "date": "2024-05-31T23:06:50",
   "date_unixtime": "1717177010",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 3872,
   "text": [
    "Kickoff ceremony is here:\n",
    {
     "type": "link",
     "text": "https://x.com/base/status/1796587985263264245"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Kickoff ceremony is here:\n"
    },
    {
     "type": "link",
     "text": "https://x.com/base/status/1796587985263264245"
    }
   ]
  },
  {
   "id": 3874,
   "type": "message",
   "date": "2024-05-31T23:15:58",
   "date_unixtime": "1717177558",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 3872,
   "text": "Still available? I missed this",
   "text_entities": [
    {
     "type": "plain",
     "text": "Still available? I missed this"
    }
   ]
  },
  {
   "id": 3875,
   "type": "message",
   "date": "2024-05-31T23:17:42",
   "date_unixtime": "1717177662",
   "edited": "2024-05-31T23:24:11",
   "edited_unixtime": "1717178051",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 3874,
   "text": "Yep, you can still register on Devfolio's website! Submissions are due June 30th.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yep, you can still register on Devfolio's website! Submissions are due June 30th."
    }
   ]
  },
  {
   "id": 3876,
   "type": "message",
   "date": "2024-05-31T23:24:22",
   "date_unixtime": "1717178062",
   "from": null,
   "from_id": "user319932362",
   "text": "Thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks!"
    }
   ]
  },
  {
   "id": 3877,
   "type": "message",
   "date": "2024-06-01T01:42:00",
   "date_unixtime": "1717186320",
   "edited": "2024-06-01T11:11:11",
   "edited_unixtime": "1717220471",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 3796,
   "text": [
    "Excited to share that EAS is contributing 10k USDC to the top 5 teams that use attestations in a unique and impactful way during Onchain Summer.\n\n",
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1796632476988936640"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Excited to share that EAS is contributing 10k USDC to the top 5 teams that use attestations in a unique and impactful way during Onchain Summer.\n\n"
    },
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1796632476988936640"
    }
   ]
  },
  {
   "id": 3878,
   "type": "service",
   "date": "2024-06-01T20:09:05",
   "date_unixtime": "1717252745",
   "actor": "Stanly Brodeur",
   "actor_id": "user6696565769",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3879,
   "type": "service",
   "date": "2024-06-03T02:52:01",
   "date_unixtime": "1717363321",
   "actor": "Tantodefi.eth",
   "actor_id": "user6688616177",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3880,
   "type": "message",
   "date": "2024-06-03T17:46:49",
   "date_unixtime": "1717417009",
   "from": "Xenon",
   "from_id": "user495217792",
   "reply_to_message_id": 2,
   "text": "Is this the correct way to generate the schema ID using ethers.js?\n\"const abiCoder = new ethers.AbiCoder()\n    const hash = ethers.keccak256(abiCoder.encode(\n        ['string', 'address', 'bool'],\n        [schemaRecord.schema, schemaRecord.resolver, schemaRecord.revocable]\n    ))\"",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is this the correct way to generate the schema ID using ethers.js?\n\"const abiCoder = new ethers.AbiCoder()\n    const hash = ethers.keccak256(abiCoder.encode(\n        ['string', 'address', 'bool'],\n        [schemaRecord.schema, schemaRecord.resolver, schemaRecord.revocable]\n    ))\""
    }
   ]
  },
  {
   "id": 3881,
   "type": "message",
   "date": "2024-06-03T17:47:26",
   "date_unixtime": "1717417046",
   "from": "Xenon",
   "from_id": "user495217792",
   "reply_to_message_id": 2,
   "text": "The hashes I generate that way don't match the hashes Solidity creates in the EAS contracts",
   "text_entities": [
    {
     "type": "plain",
     "text": "The hashes I generate that way don't match the hashes Solidity creates in the EAS contracts"
    }
   ]
  },
  {
   "id": 3882,
   "type": "message",
   "date": "2024-06-03T18:15:16",
   "date_unixtime": "1717418716",
   "from": "Xenon",
   "from_id": "user495217792",
   "reply_to_message_id": 2,
   "text": "OK found it, it is this one: ethers.solidityPackedKeccak256",
   "text_entities": [
    {
     "type": "plain",
     "text": "OK found it, it is this one: ethers.solidityPackedKeccak256"
    }
   ]
  },
  {
   "id": 3883,
   "type": "message",
   "date": "2024-06-03T19:41:01",
   "date_unixtime": "1717423861",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3882,
   "text": "Yup this is it!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yup this is it!"
    }
   ]
  },
  {
   "id": 3884,
   "type": "service",
   "date": "2024-06-03T21:34:27",
   "date_unixtime": "1717430667",
   "actor": "Adam",
   "actor_id": "user985506665",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3885,
   "type": "service",
   "date": "2024-06-04T02:24:23",
   "date_unixtime": "1717448063",
   "actor": "Shobhit",
   "actor_id": "user619702239",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3886,
   "type": "service",
   "date": "2024-06-04T04:20:35",
   "date_unixtime": "1717455035",
   "actor": "JL i₿ercrypto .◬👁⃤ᛤ @AxelarNetwork_ES @Axelar_BR #ONEforALL @Cosmos_Network_ES",
   "actor_id": "user203675396",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3887,
   "type": "message",
   "date": "2024-06-04T04:21:30",
   "date_unixtime": "1717455090",
   "from": "JL i₿ercrypto .◬👁⃤ᛤ @AxelarNetwork_ES @Axelar_BR #ONEforALL @Cosmos_Network_ES",
   "from_id": "user203675396",
   "text": "Hello fam I need to verify my account on BASE via schema, can you assist me a bit please",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello fam I need to verify my account on BASE via schema, can you assist me a bit please"
    }
   ]
  },
  {
   "id": 3888,
   "type": "message",
   "date": "2024-06-04T04:24:01",
   "date_unixtime": "1717455241",
   "from": "JL i₿ercrypto .◬👁⃤ᛤ @AxelarNetwork_ES @Axelar_BR #ONEforALL @Cosmos_Network_ES",
   "from_id": "user203675396",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 619,
   "text": "What I need to select here?",
   "text_entities": [
    {
     "type": "plain",
     "text": "What I need to select here?"
    }
   ]
  },
  {
   "id": 3890,
   "type": "message",
   "date": "2024-06-04T11:03:13",
   "date_unixtime": "1717479193",
   "edited": "2024-06-04T11:03:23",
   "edited_unixtime": "1717479203",
   "from": "Matt",
   "from_id": "user5035238164",
   "reply_to_message_id": 2,
   "text": "Hi, I am interested in using attestations inside of Solidity contracts. For example, I want to write a contract that knows if the sender's wallet has received an attestation. Is there any way to do that without knowing the uid of the attestation beforehand?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi, I am interested in using attestations inside of Solidity contracts. For example, I want to write a contract that knows if the sender's wallet has received an attestation. Is there any way to do that without knowing the uid of the attestation beforehand?"
    }
   ]
  },
  {
   "id": 3891,
   "type": "message",
   "date": "2024-06-04T11:05:08",
   "date_unixtime": "1717479308",
   "from": "Matt",
   "from_id": "user5035238164",
   "reply_to_message_id": 2,
   "text": "Another example: be able to allocate tokens to users based on onchain attestations. Would I need some sort of oracle? One idea I have is to use a resolver contract that keeps its own records and is called as part of an attestation, but this has to be deployed along with the schema.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Another example: be able to allocate tokens to users based on onchain attestations. Would I need some sort of oracle? One idea I have is to use a resolver contract that keeps its own records and is called as part of an attestation, but this has to be deployed along with the schema."
    }
   ]
  },
  {
   "id": 3892,
   "type": "service",
   "date": "2024-06-04T17:24:00",
   "date_unixtime": "1717502040",
   "actor": "Gavin Stein",
   "actor_id": "user7084989601",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3893,
   "type": "message",
   "date": "2024-06-05T01:14:12",
   "date_unixtime": "1717530252",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "gm gm",
   "text_entities": [
    {
     "type": "plain",
     "text": "gm gm"
    }
   ]
  },
  {
   "id": 3894,
   "type": "message",
   "date": "2024-06-05T01:15:06",
   "date_unixtime": "1717530306",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "are there any significant changes between base sepolia v1.2 and v1.3 deployments? deploying with addresses",
   "text_entities": [
    {
     "type": "plain",
     "text": "are there any significant changes between base sepolia v1.2 and v1.3 deployments? deploying with addresses"
    }
   ]
  },
  {
   "id": 3895,
   "type": "message",
   "date": "2024-06-05T01:15:44",
   "date_unixtime": "1717530344",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": [
    "wondering which to use for testnest deployment ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/quick--start/contracts#base-sepolia"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "wondering which to use for testnest deployment "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/quick--start/contracts#base-sepolia"
    }
   ]
  },
  {
   "id": 3896,
   "type": "message",
   "date": "2024-06-05T01:22:28",
   "date_unixtime": "1717530748",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "There weren't significant changes, but lots of small tweaks and some backward incompatible stuff",
   "text_entities": [
    {
     "type": "plain",
     "text": "There weren't significant changes, but lots of small tweaks and some backward incompatible stuff"
    }
   ]
  },
  {
   "id": 3897,
   "type": "message",
   "date": "2024-06-05T02:42:02",
   "date_unixtime": "1717535522",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "mention",
     "text": "@lbeder"
    },
    " anywhere i can read more to know what version to use?"
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@lbeder"
    },
    {
     "type": "plain",
     "text": " anywhere i can read more to know what version to use?"
    }
   ]
  },
  {
   "id": 3898,
   "type": "message",
   "date": "2024-06-05T02:43:08",
   "date_unixtime": "1717535588",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "if all resolver stuff works the exact same i think lastest should work",
   "text_entities": [
    {
     "type": "plain",
     "text": "if all resolver stuff works the exact same i think lastest should work"
    }
   ]
  },
  {
   "id": 3899,
   "type": "message",
   "date": "2024-06-05T02:44:11",
   "date_unixtime": "1717535651",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 3898,
   "text": "It does, yeah",
   "text_entities": [
    {
     "type": "plain",
     "text": "It does, yeah"
    }
   ]
  },
  {
   "id": 3900,
   "type": "message",
   "date": "2024-06-05T02:44:20",
   "date_unixtime": "1717535660",
   "edited": "2024-06-05T02:44:25",
   "edited_unixtime": "1717535665",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "It’s better to use the latest version",
   "text_entities": [
    {
     "type": "plain",
     "text": "It’s better to use the latest version"
    }
   ]
  },
  {
   "id": 3901,
   "type": "message",
   "date": "2024-06-05T02:44:39",
   "date_unixtime": "1717535679",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "v1.3.0 is the most popular development today",
   "text_entities": [
    {
     "type": "plain",
     "text": "v1.3.0 is the most popular development today"
    }
   ]
  },
  {
   "id": 3902,
   "type": "message",
   "date": "2024-06-05T06:42:19",
   "date_unixtime": "1717549939",
   "from": "Gavin Stein",
   "from_id": "user7084989601",
   "reply_to_message_id": 2,
   "text": "good morning all, I am building a ticketing service using EAS. I have a few questions and I would love your opinions. \n1. For schema design, should I have 1 schema for all events, or 1 schema for each event - i.e. event organisers define schemas for their own events?\n2. How can you prevent event imitations? i.e. I can create a coachella event and sell tickets to that but I'm no treally the coachella organiser... (is the best answer to use a reputation mechanism)\n3. With regards to event information (like location, time, dates) what should be stored on chain and what should be stored off-chain? My thinking is that if it possibly change, then it should be off-chain otherwise it is immutable.",
   "text_entities": [
    {
     "type": "plain",
     "text": "good morning all, I am building a ticketing service using EAS. I have a few questions and I would love your opinions. \n1. For schema design, should I have 1 schema for all events, or 1 schema for each event - i.e. event organisers define schemas for their own events?\n2. How can you prevent event imitations? i.e. I can create a coachella event and sell tickets to that but I'm no treally the coachella organiser... (is the best answer to use a reputation mechanism)\n3. With regards to event information (like location, time, dates) what should be stored on chain and what should be stored off-chain? My thinking is that if it possibly change, then it should be off-chain otherwise it is immutable."
    }
   ]
  },
  {
   "id": 3903,
   "type": "message",
   "date": "2024-06-05T16:27:08",
   "date_unixtime": "1717585028",
   "edited": "2024-06-06T15:07:03",
   "edited_unixtime": "1717666623",
   "from": "Moonid",
   "from_id": "user1821288440",
   "reply_to_message_id": 2,
   "text": "May I propose:\n\n1. A single schema for the events. I.e. date, start time, location (latitude/longitude), venue name, end time, bool updatesEvent,  re-entry rules bool, website url, contact info, and a custom info/notes string (this will let organizers add any info they want), ... Maybe I missed something here but you can add other things to the schema that you think might be useful. \n\n2.  The organizer address who registers an event in the schema, should be the same address who is also attesting to tickets.  So if Coachella.eth attested in the schema to create the event, only ticket attestations from Coachella.eth will be valid to enter the venue.  \n\nYou could also have the Coachella website in the schema, and on the website there could be a big notice that says only tickets issued by Coachella.eth are valid. \n\n3.  Even if it is on chain, you can still update the event by attesting to a new event, and using refUID to reference the previous event attestation on the event schema.  This way everyone can see that a reference UID was used from a new attestation that updates the old one.    You could also have a updatesEvent variable in the schema so when people want to attest and update events they will set the updatesEvent variable to the UID of the previous event attestation for extra clarity",
   "text_entities": [
    {
     "type": "plain",
     "text": "May I propose:\n\n1. A single schema for the events. I.e. date, start time, location (latitude/longitude), venue name, end time, bool updatesEvent,  re-entry rules bool, website url, contact info, and a custom info/notes string (this will let organizers add any info they want), ... Maybe I missed something here but you can add other things to the schema that you think might be useful. \n\n2.  The organizer address who registers an event in the schema, should be the same address who is also attesting to tickets.  So if Coachella.eth attested in the schema to create the event, only ticket attestations from Coachella.eth will be valid to enter the venue.  \n\nYou could also have the Coachella website in the schema, and on the website there could be a big notice that says only tickets issued by Coachella.eth are valid. \n\n3.  Even if it is on chain, you can still update the event by attesting to a new event, and using refUID to reference the previous event attestation on the event schema.  This way everyone can see that a reference UID was used from a new attestation that updates the old one.    You could also have a updatesEvent variable in the schema so when people want to attest and update events they will set the updatesEvent variable to the UID of the previous event attestation for extra clarity"
    }
   ]
  },
  {
   "id": 3904,
   "type": "message",
   "date": "2024-06-05T16:28:58",
   "date_unixtime": "1717585138",
   "from": "Moonid",
   "from_id": "user1821288440",
   "reply_to_message_id": 2,
   "text": "Ticketing with EAS is a really cool idea!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ticketing with EAS is a really cool idea!"
    }
   ]
  },
  {
   "id": 3905,
   "type": "message",
   "date": "2024-06-05T16:43:23",
   "date_unixtime": "1717586003",
   "from": "griff.eth | In Toronto",
   "from_id": "user476767117",
   "text": "Does anyone maintain an EAS schema for delegates on Optimism?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Does anyone maintain an EAS schema for delegates on Optimism?"
    }
   ]
  },
  {
   "id": 3906,
   "type": "service",
   "date": "2024-06-05T17:32:42",
   "date_unixtime": "1717588962",
   "actor": null,
   "actor_id": "user6185139477",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3907,
   "type": "message",
   "date": "2024-06-05T17:33:30",
   "date_unixtime": "1717589010",
   "from": null,
   "from_id": "user6185139477",
   "text": "Hi, I tied gitcoin with my coinbase account. eas shows waiting for proof. How long do I have to wait? Is there an administrator?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi, I tied gitcoin with my coinbase account. eas shows waiting for proof. How long do I have to wait? Is there an administrator?"
    }
   ]
  },
  {
   "id": 3908,
   "type": "message",
   "date": "2024-06-05T17:33:51",
   "date_unixtime": "1717589031",
   "from": null,
   "from_id": "user6185139477",
   "text": [
    {
     "type": "mention",
     "text": "@brycealan"
    }
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@brycealan"
    }
   ]
  },
  {
   "id": 3909,
   "type": "message",
   "date": "2024-06-05T18:01:07",
   "date_unixtime": "1717590667",
   "from": null,
   "from_id": "user6185139477",
   "reply_to_message_id": 2,
   "text": "Hi, I tied gitcoin with my coinbase account. eas shows waiting for proof. How long do I have to wait? Is there an administrator?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi, I tied gitcoin with my coinbase account. eas shows waiting for proof. How long do I have to wait? Is there an administrator?"
    }
   ]
  },
  {
   "id": 3910,
   "type": "service",
   "date": "2024-06-05T18:04:43",
   "date_unixtime": "1717590883",
   "actor": "Ricardo",
   "actor_id": "user5014190364",
   "action": "invite_members",
   "members": [
    "Lepar"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 3911,
   "type": "message",
   "date": "2024-06-05T20:32:46",
   "date_unixtime": "1717599766",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Hey guys, I'm having problems with the basics from the documentation \nUsing all the out of the box GitHub contracts (schema register, EAS and payingResolver) \nI'm using the SDK to create an attestation (after creating a schema in the register function of the SchemaRegistry contract)\nHowever, I'm getting a gas estimate error. I've tried sepolia and local ganache. \nThe error is \"missing revert data\" and action=estimateGas.\nVersions:\n ethers:  6.13.0\nGanache: 7.9.2\nSepolia testnet \nNode: 18.20.1\nNpm: 10.5.0\n\nAny help would be appreciated",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys, I'm having problems with the basics from the documentation \nUsing all the out of the box GitHub contracts (schema register, EAS and payingResolver) \nI'm using the SDK to create an attestation (after creating a schema in the register function of the SchemaRegistry contract)\nHowever, I'm getting a gas estimate error. I've tried sepolia and local ganache. \nThe error is \"missing revert data\" and action=estimateGas.\nVersions:\n ethers:  6.13.0\nGanache: 7.9.2\nSepolia testnet \nNode: 18.20.1\nNpm: 10.5.0\n\nAny help would be appreciated"
    }
   ]
  },
  {
   "id": 3912,
   "type": "message",
   "date": "2024-06-05T20:54:22",
   "date_unixtime": "1717601062",
   "edited": "2024-06-05T21:03:36",
   "edited_unixtime": "1717601616",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3909,
   "text": "This should be fixed now. There was a pause with the indexer api. Attestations were still onchain.",
   "text_entities": [
    {
     "type": "plain",
     "text": "This should be fixed now. There was a pause with the indexer api. Attestations were still onchain."
    }
   ]
  },
  {
   "id": 3913,
   "type": "message",
   "date": "2024-06-05T20:54:55",
   "date_unixtime": "1717601095",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3911,
   "text": "Can you please share your code? Perhaps a GitHub repo with example?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can you please share your code? Perhaps a GitHub repo with example?"
    }
   ]
  },
  {
   "id": 3914,
   "type": "message",
   "date": "2024-06-05T21:00:48",
   "date_unixtime": "1717601448",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3887,
   "text": "Are you still having issues with this? What is the problem you are having?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Are you still having issues with this? What is the problem you are having?"
    }
   ]
  },
  {
   "id": 3915,
   "type": "message",
   "date": "2024-06-05T21:42:46",
   "date_unixtime": "1717603966",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 3913,
   "text": "I just copied and pasted the example code from the Make an Attestation section, in the \"Example O chain Attestation with the SDK\"\n\nI deployed the 3 contracts on ganache locally through remix\nCopied the SDK code and just changed the EAS address and schemaUID to the deployed ones\n\nThe only difference is the Signer I'm using a private key but I don't think that's the issue \n\nI also tried calling the function from remix and I also get a Gas error",
   "text_entities": [
    {
     "type": "plain",
     "text": "I just copied and pasted the example code from the Make an Attestation section, in the \"Example O chain Attestation with the SDK\"\n\nI deployed the 3 contracts on ganache locally through remix\nCopied the SDK code and just changed the EAS address and schemaUID to the deployed ones\n\nThe only difference is the Signer I'm using a private key but I don't think that's the issue \n\nI also tried calling the function from remix and I also get a Gas error"
    }
   ]
  },
  {
   "id": 3916,
   "type": "message",
   "date": "2024-06-05T21:43:55",
   "date_unixtime": "1717604035",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3915,
   "text": "Ah. You shouldn’t need to deploy any contracts",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ah. You shouldn’t need to deploy any contracts"
    }
   ]
  },
  {
   "id": 3917,
   "type": "message",
   "date": "2024-06-05T21:44:19",
   "date_unixtime": "1717604059",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "I want to test them locally \nYou think it has to do with versioning?",
   "text_entities": [
    {
     "type": "plain",
     "text": "I want to test them locally \nYou think it has to do with versioning?"
    }
   ]
  },
  {
   "id": 3918,
   "type": "message",
   "date": "2024-06-05T21:44:29",
   "date_unixtime": "1717604069",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "You should use the EAS contracts that have already been deployed",
   "text_entities": [
    {
     "type": "plain",
     "text": "You should use the EAS contracts that have already been deployed"
    }
   ]
  },
  {
   "id": 3919,
   "type": "message",
   "date": "2024-06-05T21:45:28",
   "date_unixtime": "1717604128",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Ah. If you need to test and can’t use testnet you should still be able to deploy. Perhaps some configuration is wrong. There’s no actual error description?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ah. If you need to test and can’t use testnet you should still be able to deploy. Perhaps some configuration is wrong. There’s no actual error description?"
    }
   ]
  },
  {
   "id": 3920,
   "type": "service",
   "date": "2024-06-05T21:45:47",
   "date_unixtime": "1717604147",
   "actor": "1999 Luke",
   "actor_id": "user687470671",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3921,
   "type": "message",
   "date": "2024-06-05T21:46:06",
   "date_unixtime": "1717604166",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Yeah that's what I thought too, but for some reason getting gas error locally",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yeah that's what I thought too, but for some reason getting gas error locally"
    }
   ]
  },
  {
   "id": 3922,
   "type": "message",
   "date": "2024-06-05T21:46:18",
   "date_unixtime": "1717604178",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 720,
   "text": "",
   "text_entities": []
  },
  {
   "id": 3923,
   "type": "message",
   "date": "2024-06-05T21:46:41",
   "date_unixtime": "1717604201",
   "from": "1999 Luke",
   "from_id": "user687470671",
   "reply_to_message_id": 2,
   "text": "Do we have plans to build on non-EVM chains?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Do we have plans to build on non-EVM chains?"
    }
   ]
  },
  {
   "id": 3924,
   "type": "message",
   "date": "2024-06-05T21:46:45",
   "date_unixtime": "1717604205",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "This is running ganache",
   "text_entities": [
    {
     "type": "plain",
     "text": "This is running ganache"
    }
   ]
  },
  {
   "id": 3925,
   "type": "message",
   "date": "2024-06-05T21:47:40",
   "date_unixtime": "1717604260",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "I also deployed the contracts to Sepolia (for testing without using the deployed ones) and also got the same error there",
   "text_entities": [
    {
     "type": "plain",
     "text": "I also deployed the contracts to Sepolia (for testing without using the deployed ones) and also got the same error there"
    }
   ]
  },
  {
   "id": 3926,
   "type": "message",
   "date": "2024-06-05T21:48:24",
   "date_unixtime": "1717604304",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Did you try making a regular attestation with a schema with no resolver?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Did you try making a regular attestation with a schema with no resolver?"
    }
   ]
  },
  {
   "id": 3928,
   "type": "message",
   "date": "2024-06-05T21:50:37",
   "date_unixtime": "1717604437",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Just did, it worked",
   "text_entities": [
    {
     "type": "plain",
     "text": "Just did, it worked"
    }
   ]
  },
  {
   "id": 3929,
   "type": "message",
   "date": "2024-06-05T21:50:48",
   "date_unixtime": "1717604448",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "I guess it has something to do with the resolver",
   "text_entities": [
    {
     "type": "plain",
     "text": "I guess it has something to do with the resolver"
    }
   ]
  },
  {
   "id": 3930,
   "type": "message",
   "date": "2024-06-05T21:51:06",
   "date_unixtime": "1717604466",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Okay then most likely the resolver you made isn’t returning true from its onAttest function",
   "text_entities": [
    {
     "type": "plain",
     "text": "Okay then most likely the resolver you made isn’t returning true from its onAttest function"
    }
   ]
  },
  {
   "id": 3931,
   "type": "message",
   "date": "2024-06-05T21:51:49",
   "date_unixtime": "1717604509",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "I deployed the PayingResolver, but I'm guessing I'm not sending any balance to pay with, with this example code",
   "text_entities": [
    {
     "type": "plain",
     "text": "I deployed the PayingResolver, but I'm guessing I'm not sending any balance to pay with, with this example code"
    }
   ]
  },
  {
   "id": 3932,
   "type": "message",
   "date": "2024-06-05T21:53:07",
   "date_unixtime": "1717604587",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Idk maybe, I'm gonna investigate. Just working without it is a huge win, thanks man",
   "text_entities": [
    {
     "type": "plain",
     "text": "Idk maybe, I'm gonna investigate. Just working without it is a huge win, thanks man"
    }
   ]
  },
  {
   "id": 3933,
   "type": "message",
   "date": "2024-06-05T21:53:50",
   "date_unixtime": "1717604630",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "What did you set the incentive to when you deployed the payingresolver?",
   "text_entities": [
    {
     "type": "plain",
     "text": "What did you set the incentive to when you deployed the payingresolver?"
    }
   ]
  },
  {
   "id": 3934,
   "type": "message",
   "date": "2024-06-05T21:53:56",
   "date_unixtime": "1717604636",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "I put 1",
   "text_entities": [
    {
     "type": "plain",
     "text": "I put 1"
    }
   ]
  },
  {
   "id": 3935,
   "type": "message",
   "date": "2024-06-05T21:54:49",
   "date_unixtime": "1717604689",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "FYI, Don’t use a resolver unless you need one",
   "text_entities": [
    {
     "type": "plain",
     "text": "FYI, Don’t use a resolver unless you need one"
    }
   ]
  },
  {
   "id": 3936,
   "type": "message",
   "date": "2024-06-05T21:55:17",
   "date_unixtime": "1717604717",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "You have to ensure you don’t send any value",
   "text_entities": [
    {
     "type": "plain",
     "text": "You have to ensure you don’t send any value"
    }
   ]
  },
  {
   "id": 3937,
   "type": "message",
   "date": "2024-06-05T21:55:21",
   "date_unixtime": "1717604721",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "With the paying resolver",
   "text_entities": [
    {
     "type": "plain",
     "text": "With the paying resolver"
    }
   ]
  },
  {
   "id": 3938,
   "type": "message",
   "date": "2024-06-05T21:55:33",
   "date_unixtime": "1717604733",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "It should automatically make payment",
   "text_entities": [
    {
     "type": "plain",
     "text": "It should automatically make payment"
    }
   ]
  },
  {
   "id": 3939,
   "type": "message",
   "date": "2024-06-05T21:55:46",
   "date_unixtime": "1717604746",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "It's many use cases I'm gonna need resolvers",
   "text_entities": [
    {
     "type": "plain",
     "text": "It's many use cases I'm gonna need resolvers"
    }
   ]
  },
  {
   "id": 3940,
   "type": "message",
   "date": "2024-06-05T21:55:51",
   "date_unixtime": "1717604751",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Oh ok, then that's not it",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh ok, then that's not it"
    }
   ]
  },
  {
   "id": 3941,
   "type": "message",
   "date": "2024-06-05T21:56:57",
   "date_unixtime": "1717604817",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Ah this resolver pays attesters",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ah this resolver pays attesters"
    }
   ]
  },
  {
   "id": 3942,
   "type": "message",
   "date": "2024-06-05T21:57:03",
   "date_unixtime": "1717604823",
   "edited": "2024-06-05T21:57:17",
   "edited_unixtime": "1717604837",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Not attester pays resolver",
   "text_entities": [
    {
     "type": "plain",
     "text": "Not attester pays resolver"
    }
   ]
  },
  {
   "id": 3943,
   "type": "message",
   "date": "2024-06-05T21:57:08",
   "date_unixtime": "1717604828",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Resolver needs a balance",
   "text_entities": [
    {
     "type": "plain",
     "text": "Resolver needs a balance"
    }
   ]
  },
  {
   "id": 3944,
   "type": "message",
   "date": "2024-06-05T21:57:30",
   "date_unixtime": "1717604850",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Ohhh ok, gotta transfer some balance then",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ohhh ok, gotta transfer some balance then"
    }
   ]
  },
  {
   "id": 3945,
   "type": "message",
   "date": "2024-06-05T21:57:34",
   "date_unixtime": "1717604854",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Yup",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yup"
    }
   ]
  },
  {
   "id": 3946,
   "type": "message",
   "date": "2024-06-05T21:58:39",
   "date_unixtime": "1717604919",
   "edited": "2024-06-05T21:58:47",
   "edited_unixtime": "1717604927",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "That was it! Perfect, thanks man",
   "text_entities": [
    {
     "type": "plain",
     "text": "That was it! Perfect, thanks man"
    }
   ]
  },
  {
   "id": 3947,
   "type": "message",
   "date": "2024-06-05T21:58:55",
   "date_unixtime": "1717604935",
   "edited": "2024-06-05T21:59:40",
   "edited_unixtime": "1717604980",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Glad I could be of service",
   "text_entities": [
    {
     "type": "plain",
     "text": "Glad I could be of service"
    }
   ]
  },
  {
   "id": 3948,
   "type": "message",
   "date": "2024-06-05T21:58:57",
   "date_unixtime": "1717604937",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Just started on this yesterday, still getting the hang of things",
   "text_entities": [
    {
     "type": "plain",
     "text": "Just started on this yesterday, still getting the hang of things"
    }
   ]
  },
  {
   "id": 3949,
   "type": "message",
   "date": "2024-06-05T22:00:26",
   "date_unixtime": "1717605026",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Let us know if you run into anything other issues",
   "text_entities": [
    {
     "type": "plain",
     "text": "Let us know if you run into anything other issues"
    }
   ]
  },
  {
   "id": 3950,
   "type": "message",
   "date": "2024-06-06T14:55:41",
   "date_unixtime": "1717665941",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "reply_to_message_id": 2,
   "text": [
    "Hey folks, anyone has yet integrated Coinbase' smart wallets and paymasters for sponsored tx? ",
    {
     "type": "link",
     "text": "https://www.smartwallet.dev/guides/paymasters"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey folks, anyone has yet integrated Coinbase' smart wallets and paymasters for sponsored tx? "
    },
    {
     "type": "link",
     "text": "https://www.smartwallet.dev/guides/paymasters"
    }
   ]
  },
  {
   "id": 3951,
   "type": "message",
   "date": "2024-06-06T14:56:02",
   "date_unixtime": "1717665962",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "reply_to_message_id": 2,
   "text": [
    "Would love to have delegated attestations but not too sure how to proceed - there isn't much doc: ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/delegated-attestations"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Would love to have delegated attestations but not too sure how to proceed - there isn't much doc: "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/delegated-attestations"
    }
   ]
  },
  {
   "id": 3952,
   "type": "message",
   "date": "2024-06-06T15:08:33",
   "date_unixtime": "1717666713",
   "edited": "2024-06-06T17:27:58",
   "edited_unixtime": "1717675078",
   "from": "Gavin Stein",
   "from_id": "user7084989601",
   "reply_to_message_id": 3903,
   "text": [
    "Hey ",
    {
     "type": "mention",
     "text": "@Moonid232"
    },
    " thanks so much for the response. I like your thinking. You've really given me a jumpstart on this project"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey "
    },
    {
     "type": "mention",
     "text": "@Moonid232"
    },
    {
     "type": "plain",
     "text": " thanks so much for the response. I like your thinking. You've really given me a jumpstart on this project"
    }
   ]
  },
  {
   "id": 3953,
   "type": "message",
   "date": "2024-06-06T21:09:04",
   "date_unixtime": "1717688344",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 2,
   "text": [
    "Hey I am currently integrating EAS with Privy but getting error signing offchain att, any idea or sample to check about this error: \n\n",
    {
     "type": "pre",
     "text": "\nUncaught (in promise) TypeError: signer.signTypedData is not a function\n    at _Offchain.signTypedDataRequest (@ethereum-attestation-service_eas-sdk.js?v=9275b0ae:38490:43)\n    at _Offchain.signOffchainAttestation (@ethereum-attestation-service_eas-sdk.js?v=9275b0ae:39047:42)",
     "language": ""
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey I am currently integrating EAS with Privy but getting error signing offchain att, any idea or sample to check about this error: \n\n"
    },
    {
     "type": "pre",
     "text": "\nUncaught (in promise) TypeError: signer.signTypedData is not a function\n    at _Offchain.signTypedDataRequest (@ethereum-attestation-service_eas-sdk.js?v=9275b0ae:38490:43)\n    at _Offchain.signOffchainAttestation (@ethereum-attestation-service_eas-sdk.js?v=9275b0ae:39047:42)",
     "language": ""
    }
   ]
  },
  {
   "id": 3954,
   "type": "message",
   "date": "2024-06-06T21:17:08",
   "date_unixtime": "1717688828",
   "edited": "2024-06-06T21:17:20",
   "edited_unixtime": "1717688840",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "It means that the signer that you are providing isn’t capable of signing EIP712 messages required for delegated and offchain attestations. I’m not familiar with Privy, so don’t know how to help you",
   "text_entities": [
    {
     "type": "plain",
     "text": "It means that the signer that you are providing isn’t capable of signing EIP712 messages required for delegated and offchain attestations. I’m not familiar with Privy, so don’t know how to help you"
    }
   ]
  },
  {
   "id": 3955,
   "type": "message",
   "date": "2024-06-06T21:17:35",
   "date_unixtime": "1717688855",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Perhaps the team or their docs will have more info",
   "text_entities": [
    {
     "type": "plain",
     "text": "Perhaps the team or their docs will have more info"
    }
   ]
  },
  {
   "id": 3956,
   "type": "message",
   "date": "2024-06-06T21:20:00",
   "date_unixtime": "1717689000",
   "edited": "2024-06-06T21:20:48",
   "edited_unixtime": "1717689048",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 2,
   "text": [
    "Thank you for your prompt reply ",
    {
     "type": "mention",
     "text": "@lbeder"
    },
    ", yes I thought you may had some sample from other projects. I am waiting on their reply also 🙏"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you for your prompt reply "
    },
    {
     "type": "mention",
     "text": "@lbeder"
    },
    {
     "type": "plain",
     "text": ", yes I thought you may had some sample from other projects. I am waiting on their reply also 🙏"
    }
   ]
  },
  {
   "id": 3957,
   "type": "message",
   "date": "2024-06-06T21:21:40",
   "date_unixtime": "1717689100",
   "edited": "2024-06-06T21:22:02",
   "edited_unixtime": "1717689122",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 3956,
   "text": "There are many wallets and providers that might not support many things. We don’t have much to do about it. I hope that there might be another way of getting a more capable provider from them, but no idea.",
   "text_entities": [
    {
     "type": "plain",
     "text": "There are many wallets and providers that might not support many things. We don’t have much to do about it. I hope that there might be another way of getting a more capable provider from them, but no idea."
    }
   ]
  },
  {
   "id": 3958,
   "type": "message",
   "date": "2024-06-07T03:01:13",
   "date_unixtime": "1717709473",
   "from": "seanwbren.eth",
   "from_id": "user491613332",
   "reply_to_message_id": 2,
   "text": "Can a resolver address take an action when an attestation is revoked?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can a resolver address take an action when an attestation is revoked?"
    }
   ]
  },
  {
   "id": 3959,
   "type": "message",
   "date": "2024-06-07T14:59:43",
   "date_unixtime": "1717752583",
   "from": "Sharfy",
   "from_id": "user1504218422",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 811,
   "text": [
    "Hey guys, is the ",
    {
     "type": "link",
     "text": "easscan.org"
    },
    "'s website's down? Getting a DNS error"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys, is the "
    },
    {
     "type": "link",
     "text": "easscan.org"
    },
    {
     "type": "plain",
     "text": "'s website's down? Getting a DNS error"
    }
   ]
  },
  {
   "id": 3960,
   "type": "message",
   "date": "2024-06-07T15:04:44",
   "date_unixtime": "1717752884",
   "from": "Preet Parekh",
   "from_id": "user545669912",
   "reply_to_message_id": 3959,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 791,
   "text": "Working fine here (India)",
   "text_entities": [
    {
     "type": "plain",
     "text": "Working fine here (India)"
    }
   ]
  },
  {
   "id": 3961,
   "type": "message",
   "date": "2024-06-07T15:06:43",
   "date_unixtime": "1717753003",
   "edited": "2024-06-08T01:36:25",
   "edited_unixtime": "1717790785",
   "from": "Preet Parekh",
   "from_id": "user545669912",
   "reply_to_message_id": 3958,
   "text": [
    "Yes there is a ",
    {
     "type": "code",
     "text": "onRevoke"
    },
    " function that you could add to your schema resolver\n\n",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts/blob/62536759886d4a0f3d4ab01710eaa23031459e0b/contracts/resolver/examples/TokenResolver.sol#L35-L37"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes there is a "
    },
    {
     "type": "code",
     "text": "onRevoke"
    },
    {
     "type": "plain",
     "text": " function that you could add to your schema resolver\n\n"
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts/blob/62536759886d4a0f3d4ab01710eaa23031459e0b/contracts/resolver/examples/TokenResolver.sol#L35-L37"
    }
   ]
  },
  {
   "id": 3962,
   "type": "message",
   "date": "2024-06-07T15:29:10",
   "date_unixtime": "1717754350",
   "from": "Sharfy",
   "from_id": "user1504218422",
   "reply_to_message_id": 3960,
   "text": "Works again now, thanks for checking",
   "text_entities": [
    {
     "type": "plain",
     "text": "Works again now, thanks for checking"
    }
   ]
  },
  {
   "id": 3963,
   "type": "message",
   "date": "2024-06-08T16:47:38",
   "date_unixtime": "1717845458",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 3954,
   "text": "would it be possible for EAS SDK 2.x to use Ethers v5 ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "would it be possible for EAS SDK 2.x to use Ethers v5 ?"
    }
   ]
  },
  {
   "id": 3964,
   "type": "message",
   "date": "2024-06-08T17:44:56",
   "date_unixtime": "1717848896",
   "edited": "2024-06-09T21:47:15",
   "edited_unixtime": "1717949835",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 3963,
   "text": "It’s not recommended and mostly untested, but you can try using wagmi’s wrapper",
   "text_entities": [
    {
     "type": "plain",
     "text": "It’s not recommended and mostly untested, but you can try using wagmi’s wrapper"
    }
   ]
  },
  {
   "id": 3965,
   "type": "message",
   "date": "2024-06-08T17:45:28",
   "date_unixtime": "1717848928",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "link",
     "text": "https://wagmi.sh/react/guides/ethers"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://wagmi.sh/react/guides/ethers"
    }
   ]
  },
  {
   "id": 3966,
   "type": "message",
   "date": "2024-06-09T21:47:58",
   "date_unixtime": "1717949878",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 3964,
   "text": [
    "I'll give it a try thanks ",
    {
     "type": "mention",
     "text": "@lbeder"
    },
    " 🙏🏻"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I'll give it a try thanks "
    },
    {
     "type": "mention",
     "text": "@lbeder"
    },
    {
     "type": "plain",
     "text": " 🙏🏻"
    }
   ]
  },
  {
   "id": 3967,
   "type": "message",
   "date": "2024-06-10T03:58:24",
   "date_unixtime": "1717972104",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 3953,
   "text": [
    "did you figure this out? ",
    {
     "type": "mention",
     "text": "@phoeni0x"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "did you figure this out? "
    },
    {
     "type": "mention",
     "text": "@phoeni0x"
    }
   ]
  },
  {
   "id": 3968,
   "type": "message",
   "date": "2024-06-10T03:59:19",
   "date_unixtime": "1717972159",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "does it work for onchain attestations?",
   "text_entities": [
    {
     "type": "plain",
     "text": "does it work for onchain attestations?"
    }
   ]
  },
  {
   "id": 3969,
   "type": "service",
   "date": "2024-06-10T14:16:34",
   "date_unixtime": "1718009194",
   "actor": null,
   "actor_id": "user319932362",
   "action": "invite_members",
   "members": [
    "Vu Tri Hien"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 3970,
   "type": "message",
   "date": "2024-06-10T15:46:36",
   "date_unixtime": "1718014596",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 3967,
   "text": "not a PROD ready solution, but works during dev until both (Privy-EAS) match versions on any signer available",
   "text_entities": [
    {
     "type": "plain",
     "text": "not a PROD ready solution, but works during dev until both (Privy-EAS) match versions on any signer available"
    }
   ]
  },
  {
   "id": 3971,
   "type": "message",
   "date": "2024-06-10T15:48:36",
   "date_unixtime": "1718014716",
   "edited": "2024-06-10T15:49:32",
   "edited_unixtime": "1718014772",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 2,
   "file": "(File not included. Change data exporting settings to download.)",
   "file_name": "tg_image_1783028143.jpeg",
   "thumbnail": "(File not included. Change data exporting settings to download.)",
   "mime_type": "image/jpeg",
   "width": 1167,
   "height": 71,
   "text": "change EAS dependency code to use the v5 version of signTypedData() (adding _)",
   "text_entities": [
    {
     "type": "plain",
     "text": "change EAS dependency code to use the v5 version of signTypedData() (adding _)"
    }
   ]
  },
  {
   "id": 3972,
   "type": "message",
   "date": "2024-06-10T16:15:55",
   "date_unixtime": "1718016355",
   "edited": "2024-06-10T19:54:55",
   "edited_unixtime": "1718029495",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 2,
   "text": [
    "ok a deployment friendly version of the same ugly hack \n",
    {
     "type": "pre",
     "text": " signer.signTypedData = function(params, types, signer) {\n            return this._signTypedData(params, types, signer)\n        }",
     "language": "javascript"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "ok a deployment friendly version of the same ugly hack \n"
    },
    {
     "type": "pre",
     "text": " signer.signTypedData = function(params, types, signer) {\n            return this._signTypedData(params, types, signer)\n        }",
     "language": "javascript"
    }
   ]
  },
  {
   "id": 3973,
   "type": "message",
   "date": "2024-06-10T16:16:24",
   "date_unixtime": "1718016384",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 2,
   "text": "then no need to edit dependencies which is uglier 😛",
   "text_entities": [
    {
     "type": "plain",
     "text": "then no need to edit dependencies which is uglier 😛"
    }
   ]
  },
  {
   "id": 3974,
   "type": "message",
   "date": "2024-06-10T19:55:49",
   "date_unixtime": "1718029549",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 3972,
   "text": "ah that’s awesome and a clean way to do it",
   "text_entities": [
    {
     "type": "plain",
     "text": "ah that’s awesome and a clean way to do it"
    }
   ]
  },
  {
   "id": 3975,
   "type": "message",
   "date": "2024-06-10T19:56:30",
   "date_unixtime": "1718029590",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "did you use this + viem-ethers hook?",
   "text_entities": [
    {
     "type": "plain",
     "text": "did you use this + viem-ethers hook?"
    }
   ]
  },
  {
   "id": 3976,
   "type": "message",
   "date": "2024-06-10T22:21:11",
   "date_unixtime": "1718038271",
   "edited": "2024-06-24T00:58:08",
   "edited_unixtime": "1719170888",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 3905,
   "text": [
    "There's a schema for badgeholders 👀 ",
    {
     "type": "link",
     "text": "https://optimism.easscan.org/schema/view/0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "There's a schema for badgeholders 👀 "
    },
    {
     "type": "link",
     "text": "https://optimism.easscan.org/schema/view/0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 3977,
   "type": "message",
   "date": "2024-06-11T00:30:42",
   "date_unixtime": "1718046042",
   "edited": "2024-06-11T01:49:06",
   "edited_unixtime": "1718050746",
   "from": "Phoeni0x",
   "from_id": "user5152788246",
   "reply_to_message_id": 2,
   "text": "used eas sdk 2.1.4 with privy/react-auth 1.67 (uses ethers v5.7)",
   "text_entities": [
    {
     "type": "plain",
     "text": "used eas sdk 2.1.4 with privy/react-auth 1.67 (uses ethers v5.7)"
    }
   ]
  },
  {
   "id": 3978,
   "type": "message",
   "date": "2024-06-11T01:30:06",
   "date_unixtime": "1718049606",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "text": [
    "hey ",
    {
     "type": "mention",
     "text": "@brycealan"
    },
    ", what is Coinbase Verifications relative to EAS? Asking wrt onchain summer"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "hey "
    },
    {
     "type": "mention",
     "text": "@brycealan"
    },
    {
     "type": "plain",
     "text": ", what is Coinbase Verifications relative to EAS? Asking wrt onchain summer"
    }
   ]
  },
  {
   "id": 3979,
   "type": "message",
   "date": "2024-06-11T01:30:25",
   "date_unixtime": "1718049625",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "text": "does it mean using EAS on base?",
   "text_entities": [
    {
     "type": "plain",
     "text": "does it mean using EAS on base?"
    }
   ]
  },
  {
   "id": 3980,
   "type": "message",
   "date": "2024-06-11T01:32:40",
   "date_unixtime": "1718049760",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Coinbase has their own product called Coinbase Verifications built on Base that uses EAS core contracts. They have a bounty available for using CB Verifications in a unique way.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Coinbase has their own product called Coinbase Verifications built on Base that uses EAS core contracts. They have a bounty available for using CB Verifications in a unique way."
    }
   ]
  },
  {
   "id": 3981,
   "type": "message",
   "date": "2024-06-11T01:33:12",
   "date_unixtime": "1718049792",
   "edited": "2024-06-11T01:45:58",
   "edited_unixtime": "1718050558",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Separately, EAS has a bounty available for building an impactful attestation use case on Base during Onchain Summer that aligns with one of the 8 tracks.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Separately, EAS has a bounty available for building an impactful attestation use case on Base during Onchain Summer that aligns with one of the 8 tracks."
    }
   ]
  },
  {
   "id": 3982,
   "type": "message",
   "date": "2024-06-11T01:47:08",
   "date_unixtime": "1718050628",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 3981,
   "text": "awesome thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "awesome thanks!"
    }
   ]
  },
  {
   "id": 3983,
   "type": "message",
   "date": "2024-06-11T01:47:32",
   "date_unixtime": "1718050652",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "text": "i don't see EAS on the devfolio submission rn. will that be added?",
   "text_entities": [
    {
     "type": "plain",
     "text": "i don't see EAS on the devfolio submission rn. will that be added?"
    }
   ]
  },
  {
   "id": 3984,
   "type": "message",
   "date": "2024-06-11T02:18:50",
   "date_unixtime": "1718052530",
   "edited": "2024-06-11T02:21:48",
   "edited_unixtime": "1718052708",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 3983,
   "text": [
    {
     "type": "link",
     "text": "https://eas-onchain-summer.devfolio.co/"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://eas-onchain-summer.devfolio.co/"
    }
   ]
  },
  {
   "id": 3985,
   "type": "service",
   "date": "2024-06-11T09:22:44",
   "date_unixtime": "1718077964",
   "actor": "unes",
   "actor_id": "user1899454649",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3986,
   "type": "service",
   "date": "2024-06-11T18:06:32",
   "date_unixtime": "1718109392",
   "actor": "Shwerrrrrrrrrrrr 🦍🦍",
   "actor_id": "user7480642064",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3988,
   "type": "service",
   "date": "2024-06-12T17:04:35",
   "date_unixtime": "1718192075",
   "actor": "Carlos",
   "actor_id": "user7076273004",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3989,
   "type": "service",
   "date": "2024-06-12T19:03:15",
   "date_unixtime": "1718199195",
   "actor": "Ivan Grachev",
   "actor_id": "user17258150",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3990,
   "type": "message",
   "date": "2024-06-12T19:07:31",
   "date_unixtime": "1718199451",
   "from": "Ivan Grachev",
   "from_id": "user17258150",
   "reply_to_message_id": 3767,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1034,
   "height": 630,
   "text": [
    {
     "type": "link",
     "text": "https://base.easscan.org/attestation/attestWithSchema/0xb7cc934d4a5b37542520bfc80184538e568529d5fba5b13abe89109a23620cb6#template=0xE26067c76fdbe877F48b0a8400cf5Db8B47aF0fE::0:false:0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b6261666b72656966626b7663736237356a376d666f69706e3434706d7273656d627436646c7035617667646537696b707032786f336763376b62710000000000"
    },
    "\n\nis there a way to modify the url to make it Onchain by default"
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://base.easscan.org/attestation/attestWithSchema/0xb7cc934d4a5b37542520bfc80184538e568529d5fba5b13abe89109a23620cb6#template=0xE26067c76fdbe877F48b0a8400cf5Db8B47aF0fE::0:false:0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b6261666b72656966626b7663736237356a376d666f69706e3434706d7273656d627436646c7035617667646537696b707032786f336763376b62710000000000"
    },
    {
     "type": "plain",
     "text": "\n\nis there a way to modify the url to make it Onchain by default"
    }
   ]
  },
  {
   "id": 3991,
   "type": "message",
   "date": "2024-06-12T19:08:09",
   "date_unixtime": "1718199489",
   "from": "Ivan Grachev",
   "from_id": "user17258150",
   "reply_to_message_id": 2,
   "text": "right now it always opens with \"Offchain\" selected",
   "text_entities": [
    {
     "type": "plain",
     "text": "right now it always opens with \"Offchain\" selected"
    }
   ]
  },
  {
   "id": 3992,
   "type": "service",
   "date": "2024-06-12T22:19:31",
   "date_unixtime": "1718210971",
   "actor": "Chris Georgen",
   "actor_id": "user331511677",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3994,
   "type": "message",
   "date": "2024-06-12T23:28:32",
   "date_unixtime": "1718215112",
   "edited": "2024-06-12T23:28:53",
   "edited_unixtime": "1718215133",
   "from": "Lepar",
   "from_id": "user46069690",
   "reply_to_message_id": 2,
   "text": "Hello hello \nI'm working on Delegated Attestations but it's quite confusing\nI see the AttestByDelegation but can't seem to understand the flow. \nI looked at the SDK parameters and the contract DelegatedAttestationRequest. \nCan't seem to understand what the two parameters are in the SDK, arrester and signature. \nHow does the flow work exactly if I have a an Attester and another account will pay the fees, appreciate it in advance",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello hello \nI'm working on Delegated Attestations but it's quite confusing\nI see the AttestByDelegation but can't seem to understand the flow. \nI looked at the SDK parameters and the contract DelegatedAttestationRequest. \nCan't seem to understand what the two parameters are in the SDK, arrester and signature. \nHow does the flow work exactly if I have a an Attester and another account will pay the fees, appreciate it in advance"
    }
   ]
  },
  {
   "id": 3995,
   "type": "message",
   "date": "2024-06-13T16:47:38",
   "date_unixtime": "1718277458",
   "from": "urban",
   "from_id": "user622369147",
   "reply_to_message_id": 3984,
   "text": "Hey! Regarding this onchain summer track, if I understand correctly, if we applied to the main OC Buildathon, can we still apply for this too?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey! Regarding this onchain summer track, if I understand correctly, if we applied to the main OC Buildathon, can we still apply for this too?"
    }
   ]
  },
  {
   "id": 3996,
   "type": "service",
   "date": "2024-06-13T18:35:09",
   "date_unixtime": "1718283909",
   "actor": "Steve | Pinata",
   "actor_id": "user5209889679",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 3997,
   "type": "message",
   "date": "2024-06-13T19:56:23",
   "date_unixtime": "1718288783",
   "from": "Steve | Pinata",
   "from_id": "user5209889679",
   "file": "(File not included. Change data exporting settings to download.)",
   "file_name": "image_2024-06-13_10-26-22.png",
   "thumbnail": "(File not included. Change data exporting settings to download.)",
   "mime_type": "image/png",
   "width": 1840,
   "height": 1348,
   "text": "Hey all! I was wondering if anyone had examples of getting the EAS SDK up and running with Viem? I saw the wagmi hooks but trying to stick with viem in my stack. I think I'm getting close but keep getting some weird errors about invalid arguments",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey all! I was wondering if anyone had examples of getting the EAS SDK up and running with Viem? I saw the wagmi hooks but trying to stick with viem in my stack. I think I'm getting close but keep getting some weird errors about invalid arguments"
    }
   ]
  },
  {
   "id": 3998,
   "type": "message",
   "date": "2024-06-13T19:59:25",
   "date_unixtime": "1718288965",
   "edited": "2024-06-13T20:02:19",
   "edited_unixtime": "1718289139",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 3997,
   "text": [
    "The wagmi hooks should work for just viem as well. Check these docs: ",
    {
     "type": "link",
     "text": "https://wagmi.sh/react/guides/ethers"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "The wagmi hooks should work for just viem as well. Check these docs: "
    },
    {
     "type": "link",
     "text": "https://wagmi.sh/react/guides/ethers"
    }
   ]
  },
  {
   "id": 3999,
   "type": "message",
   "date": "2024-06-13T20:35:52",
   "date_unixtime": "1718291152",
   "from": "Steve | Pinata",
   "from_id": "user5209889679",
   "reply_to_message_id": 3998,
   "text": "Was avoiding bringing the wagmi config back into the app but that did the trick! Thanks! 🙏🏻",
   "text_entities": [
    {
     "type": "plain",
     "text": "Was avoiding bringing the wagmi config back into the app but that did the trick! Thanks! 🙏🏻"
    }
   ]
  },
  {
   "id": 4000,
   "type": "service",
   "date": "2024-06-14T00:22:57",
   "date_unixtime": "1718304777",
   "actor": "Neil T",
   "actor_id": "user5480864904",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4003,
   "type": "message",
   "date": "2024-06-14T15:21:22",
   "date_unixtime": "1718358682",
   "edited": "2024-06-14T19:37:51",
   "edited_unixtime": "1718374071",
   "from": "urban",
   "from_id": "user622369147",
   "file": "(File not included. Change data exporting settings to download.)",
   "file_name": "demo.mp4",
   "thumbnail": "(File not included. Change data exporting settings to download.)",
   "media_type": "animation",
   "mime_type": "video/mp4",
   "duration_seconds": 30,
   "width": 800,
   "height": 454,
   "text": [
    "As a part of Base Onchain Summer we launched ",
    {
     "type": "text_link",
     "text": "endorse.fun",
     "href": "https://endorse.fun/"
    },
    " where users can endorse their favorite creators (builders, bloggers, hackers, developers etc.) onchain and show appreciation. We are using EAS under the hood - when users endorse others, an onchain attestation is made with a specific schema. Any share and feedback is much appreciated."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "As a part of Base Onchain Summer we launched "
    },
    {
     "type": "text_link",
     "text": "endorse.fun",
     "href": "https://endorse.fun/"
    },
    {
     "type": "plain",
     "text": " where users can endorse their favorite creators (builders, bloggers, hackers, developers etc.) onchain and show appreciation. We are using EAS under the hood - when users endorse others, an onchain attestation is made with a specific schema. Any share and feedback is much appreciated."
    }
   ]
  },
  {
   "id": 4004,
   "type": "service",
   "date": "2024-06-14T16:13:01",
   "date_unixtime": "1718361781",
   "actor": "Billy191 | Catalyzt",
   "actor_id": "user6264463713",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4005,
   "type": "message",
   "date": "2024-06-14T16:15:03",
   "date_unixtime": "1718361903",
   "from": "Billy191 | Catalyzt",
   "from_id": "user6264463713",
   "reply_to_message_id": 2,
   "text": [
    "Hi!, is there are any function, method to decode rawdata into string or JSON? after when ",
    {
     "type": "pre",
     "text": "eas.getAttestation(UID)",
     "language": ""
    },
    " return raw data,"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi!, is there are any function, method to decode rawdata into string or JSON? after when "
    },
    {
     "type": "pre",
     "text": "eas.getAttestation(UID)",
     "language": ""
    },
    {
     "type": "plain",
     "text": " return raw data,"
    }
   ]
  },
  {
   "id": 4006,
   "type": "message",
   "date": "2024-06-14T16:27:55",
   "date_unixtime": "1718362675",
   "from": "Billy191 | Catalyzt",
   "from_id": "user6264463713",
   "reply_to_message_id": 2,
   "text": "and also anyway to get all UIDs that use same schema.",
   "text_entities": [
    {
     "type": "plain",
     "text": "and also anyway to get all UIDs that use same schema."
    }
   ]
  },
  {
   "id": 4007,
   "type": "message",
   "date": "2024-06-14T17:20:14",
   "date_unixtime": "1718365814",
   "edited": "2024-06-14T17:21:56",
   "edited_unixtime": "1718365916",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "reply_to_message_id": 4003,
   "text": "Very very cool stuff guys!!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Very very cool stuff guys!!"
    }
   ]
  },
  {
   "id": 4008,
   "type": "message",
   "date": "2024-06-14T17:22:09",
   "date_unixtime": "1718365929",
   "from": "urban",
   "from_id": "user622369147",
   "reply_to_message_id": 4007,
   "text": "Thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks!"
    }
   ]
  },
  {
   "id": 4009,
   "type": "service",
   "date": "2024-06-14T22:10:04",
   "date_unixtime": "1718383204",
   "actor": "Bryce | EAS",
   "actor_id": "user2034320790",
   "action": "pin_message",
   "message_id": 3877,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4010,
   "type": "message",
   "date": "2024-06-14T23:07:08",
   "date_unixtime": "1718386628",
   "edited": "2024-06-14T23:35:00",
   "edited_unixtime": "1718388300",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4005,
   "text": "In JavaScript you can use the SchemaEncoder class to decode or encode this data. In solidity use can use abi.encode or abi.decode",
   "text_entities": [
    {
     "type": "plain",
     "text": "In JavaScript you can use the SchemaEncoder class to decode or encode this data. In solidity use can use abi.encode or abi.decode"
    }
   ]
  },
  {
   "id": 4011,
   "type": "message",
   "date": "2024-06-14T23:07:46",
   "date_unixtime": "1718386666",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4006,
   "text": [
    "You can use the graphql endpoints to query this. ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/developer-tools/api"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "You can use the graphql endpoints to query this. "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/developer-tools/api"
    }
   ]
  },
  {
   "id": 4012,
   "type": "message",
   "date": "2024-06-14T23:35:09",
   "date_unixtime": "1718388309",
   "from": "Billy191 | Catalyzt",
   "from_id": "user6264463713",
   "reply_to_message_id": 4010,
   "text": "Thank you!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you!"
    }
   ]
  },
  {
   "id": 4013,
   "type": "message",
   "date": "2024-06-15T02:04:18",
   "date_unixtime": "1718397258",
   "edited": "2024-06-15T02:10:11",
   "edited_unixtime": "1718397611",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4003,
   "text": [
    "Great UX/UI! 🔥\n\nChecking out your schema! ",
    {
     "type": "link",
     "text": "https://base.easscan.org/schema/view/0xc15bb007fcd98a5a99c0fd98286fba2f62f997de62c11ea24dfd30d274eef99f"
    },
    "\n\n\nYou might be able to save some gas improving the types. Worth testing. For example, the endorseeSocial could be a bytes field or address depending on how it's used. One option for endorsement type could be a uint8 field to have an index of category types. \n\nAnother option, as the dapp grows, you could consider attesting to a list of endorsementTypes. This would register each type as its own attestation which then it's UID can be used in the refUID field as a referenced attestation."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Great UX/UI! 🔥\n\nChecking out your schema! "
    },
    {
     "type": "link",
     "text": "https://base.easscan.org/schema/view/0xc15bb007fcd98a5a99c0fd98286fba2f62f997de62c11ea24dfd30d274eef99f"
    },
    {
     "type": "plain",
     "text": "\n\n\nYou might be able to save some gas improving the types. Worth testing. For example, the endorseeSocial could be a bytes field or address depending on how it's used. One option for endorsement type could be a uint8 field to have an index of category types. \n\nAnother option, as the dapp grows, you could consider attesting to a list of endorsementTypes. This would register each type as its own attestation which then it's UID can be used in the refUID field as a referenced attestation."
    }
   ]
  },
  {
   "id": 4014,
   "type": "message",
   "date": "2024-06-15T02:10:08",
   "date_unixtime": "1718397608",
   "from": "urban",
   "from_id": "user622369147",
   "reply_to_message_id": 4013,
   "text": "Thank you so much for your feedback! I will look into it in more details in the future and probably get back to you for advice! 😁",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you so much for your feedback! I will look into it in more details in the future and probably get back to you for advice! 😁"
    }
   ]
  },
  {
   "id": 4017,
   "type": "service",
   "date": "2024-06-15T16:17:18",
   "date_unixtime": "1718448438",
   "actor": "Markusi| ₿lockchain Express",
   "actor_id": "user6547135340",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4018,
   "type": "service",
   "date": "2024-06-16T00:35:58",
   "date_unixtime": "1718478358",
   "actor": "kelvin praises",
   "actor_id": "user1294890499",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4019,
   "type": "service",
   "date": "2024-06-17T17:49:46",
   "date_unixtime": "1718626786",
   "actor": "Sebastian Lehrer - Collider Ventures",
   "actor_id": "user6152799901",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4020,
   "type": "service",
   "date": "2024-06-17T20:58:07",
   "date_unixtime": "1718638087",
   "actor": "Tenencity",
   "actor_id": "user1711750639",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4022,
   "type": "message",
   "date": "2024-06-17T21:00:26",
   "date_unixtime": "1718638226",
   "from": "Tenencity",
   "from_id": "user1711750639",
   "reply_to_message_id": 2,
   "text": "Hi everyone, is the Coinbase Onchain Verifications (Additional Rewards) track of the Onchain Summer Buildathon different from the EAS Attestation Summer? Can we build 1 project and apply into two hackathons ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi everyone, is the Coinbase Onchain Verifications (Additional Rewards) track of the Onchain Summer Buildathon different from the EAS Attestation Summer? Can we build 1 project and apply into two hackathons ?"
    }
   ]
  },
  {
   "id": 4023,
   "type": "message",
   "date": "2024-06-17T21:29:57",
   "date_unixtime": "1718639997",
   "edited": "2024-06-18T20:28:10",
   "edited_unixtime": "1718722690",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4022,
   "text": "Yes they are separate! You can apply to both hackathons with the same idea.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes they are separate! You can apply to both hackathons with the same idea."
    }
   ]
  },
  {
   "id": 4024,
   "type": "message",
   "date": "2024-06-18T20:28:07",
   "date_unixtime": "1718722687",
   "from": "Tenencity",
   "from_id": "user1711750639",
   "reply_to_message_id": 4023,
   "text": "Thank you",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you"
    }
   ]
  },
  {
   "id": 4025,
   "type": "message",
   "date": "2024-06-20T03:16:35",
   "date_unixtime": "1718833595",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "GM",
   "text_entities": [
    {
     "type": "plain",
     "text": "GM"
    }
   ]
  },
  {
   "id": 4026,
   "type": "message",
   "date": "2024-06-20T03:17:17",
   "date_unixtime": "1718833637",
   "edited": "2024-06-20T03:17:20",
   "edited_unixtime": "1718833640",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "How I can do this?\n  const encodedData = schemaEncoder.encodeData([\n      {\n        name: 'badges',\n        value: badgeUpdates,\n        type: 'tuple(uint256 badgeId, uint256 level)[]',\n      },\n    ]);\nWhen I try to encode the data throw this error:\nError: Incompatible param type: tuple(uint256badgeId,uint256level)[]\n    at SchemaEncoder.encodeData",
   "text_entities": [
    {
     "type": "plain",
     "text": "How I can do this?\n  const encodedData = schemaEncoder.encodeData([\n      {\n        name: 'badges',\n        value: badgeUpdates,\n        type: 'tuple(uint256 badgeId, uint256 level)[]',\n      },\n    ]);\nWhen I try to encode the data throw this error:\nError: Incompatible param type: tuple(uint256badgeId,uint256level)[]\n    at SchemaEncoder.encodeData"
    }
   ]
  },
  {
   "id": 4027,
   "type": "message",
   "date": "2024-06-20T03:17:30",
   "date_unixtime": "1718833650",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "I'm trying to attest tuple array like devfolio",
   "text_entities": [
    {
     "type": "plain",
     "text": "I'm trying to attest tuple array like devfolio"
    }
   ]
  },
  {
   "id": 4028,
   "type": "message",
   "date": "2024-06-20T03:20:14",
   "date_unixtime": "1718833814",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": [
    "Can you try removing the space like this: ",
    {
     "type": "code",
     "text": "type: 'tuple(uint256 badgeId,uint256 level)[]'"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Can you try removing the space like this: "
    },
    {
     "type": "code",
     "text": "type: 'tuple(uint256 badgeId,uint256 level)[]'"
    }
   ]
  },
  {
   "id": 4029,
   "type": "message",
   "date": "2024-06-20T03:22:10",
   "date_unixtime": "1718833930",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "What u mean? I've the same type value",
   "text_entities": [
    {
     "type": "plain",
     "text": "What u mean? I've the same type value"
    }
   ]
  },
  {
   "id": 4030,
   "type": "message",
   "date": "2024-06-20T03:26:10",
   "date_unixtime": "1718834170",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "You have a space between badgeId, and uint256. Can you try removing it?",
   "text_entities": [
    {
     "type": "plain",
     "text": "You have a space between badgeId, and uint256. Can you try removing it?"
    }
   ]
  },
  {
   "id": 4031,
   "type": "message",
   "date": "2024-06-20T03:26:35",
   "date_unixtime": "1718834195",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Ok",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ok"
    }
   ]
  },
  {
   "id": 4032,
   "type": "message",
   "date": "2024-06-20T03:27:19",
   "date_unixtime": "1718834239",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Same error",
   "text_entities": [
    {
     "type": "plain",
     "text": "Same error"
    }
   ]
  },
  {
   "id": 4033,
   "type": "message",
   "date": "2024-06-20T03:27:26",
   "date_unixtime": "1718834246",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Which SDK version are you using?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Which SDK version are you using?"
    }
   ]
  },
  {
   "id": 4034,
   "type": "message",
   "date": "2024-06-20T03:27:40",
   "date_unixtime": "1718834260",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 464,
   "text": "BTW, this is my mock code",
   "text_entities": [
    {
     "type": "plain",
     "text": "BTW, this is my mock code"
    }
   ]
  },
  {
   "id": 4035,
   "type": "message",
   "date": "2024-06-20T03:27:56",
   "date_unixtime": "1718834276",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": [
    "\"",
    {
     "type": "mention",
     "text": "@ethereum"
    },
    "-attestation-service/eas-sdk\": \"1.2.1-beta.0\","
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "\""
    },
    {
     "type": "mention",
     "text": "@ethereum"
    },
    {
     "type": "plain",
     "text": "-attestation-service/eas-sdk\": \"1.2.1-beta.0\","
    }
   ]
  },
  {
   "id": 4036,
   "type": "message",
   "date": "2024-06-20T03:28:17",
   "date_unixtime": "1718834297",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Wait",
   "text_entities": [
    {
     "type": "plain",
     "text": "Wait"
    }
   ]
  },
  {
   "id": 4037,
   "type": "message",
   "date": "2024-06-20T03:28:31",
   "date_unixtime": "1718834311",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4034,
   "text": "First of all, you are missing spaces",
   "text_entities": [
    {
     "type": "plain",
     "text": "First of all, you are missing spaces"
    }
   ]
  },
  {
   "id": 4038,
   "type": "message",
   "date": "2024-06-20T03:28:38",
   "date_unixtime": "1718834318",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": [
    "Check your ",
    {
     "type": "code",
     "text": "type"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Check your "
    },
    {
     "type": "code",
     "text": "type"
    }
   ]
  },
  {
   "id": 4039,
   "type": "message",
   "date": "2024-06-20T03:28:40",
   "date_unixtime": "1718834320",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "I just removed that",
   "text_entities": [
    {
     "type": "plain",
     "text": "I just removed that"
    }
   ]
  },
  {
   "id": 4040,
   "type": "message",
   "date": "2024-06-20T03:28:43",
   "date_unixtime": "1718834323",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "hehe",
   "text_entities": [
    {
     "type": "plain",
     "text": "hehe"
    }
   ]
  },
  {
   "id": 4041,
   "type": "message",
   "date": "2024-06-20T03:29:10",
   "date_unixtime": "1718834350",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4039,
   "text": "But this isn't what I asked you to",
   "text_entities": [
    {
     "type": "plain",
     "text": "But this isn't what I asked you to"
    }
   ]
  },
  {
   "id": 4042,
   "type": "message",
   "date": "2024-06-20T03:29:26",
   "date_unixtime": "1718834366",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Sorry, I don't get you",
   "text_entities": [
    {
     "type": "plain",
     "text": "Sorry, I don't get you"
    }
   ]
  },
  {
   "id": 4043,
   "type": "message",
   "date": "2024-06-20T03:29:40",
   "date_unixtime": "1718834380",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": [
    "I asked you try this: ",
    {
     "type": "code",
     "text": "type: 'tuple(uint256 badgeId,uint256 level)[]'"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I asked you try this: "
    },
    {
     "type": "code",
     "text": "type: 'tuple(uint256 badgeId,uint256 level)[]'"
    }
   ]
  },
  {
   "id": 4044,
   "type": "message",
   "date": "2024-06-20T03:29:44",
   "date_unixtime": "1718834384",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Removing only one space",
   "text_entities": [
    {
     "type": "plain",
     "text": "Removing only one space"
    }
   ]
  },
  {
   "id": 4045,
   "type": "message",
   "date": "2024-06-20T03:30:09",
   "date_unixtime": "1718834409",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "code",
     "text": "type: 'tuple(uint256 badgeId,uint256 level)[]'"
    }
   ],
   "text_entities": [
    {
     "type": "code",
     "text": "type: 'tuple(uint256 badgeId,uint256 level)[]'"
    }
   ]
  },
  {
   "id": 4046,
   "type": "message",
   "date": "2024-06-20T03:30:11",
   "date_unixtime": "1718834411",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "OHH",
   "text_entities": [
    {
     "type": "plain",
     "text": "OHH"
    }
   ]
  },
  {
   "id": 4047,
   "type": "message",
   "date": "2024-06-20T03:30:11",
   "date_unixtime": "1718834411",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "But, in any case, you are using a very old SDK version version",
   "text_entities": [
    {
     "type": "plain",
     "text": "But, in any case, you are using a very old SDK version version"
    }
   ]
  },
  {
   "id": 4048,
   "type": "message",
   "date": "2024-06-20T03:30:22",
   "date_unixtime": "1718834422",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "There were lots of changes around these areas",
   "text_entities": [
    {
     "type": "plain",
     "text": "There were lots of changes around these areas"
    }
   ]
  },
  {
   "id": 4049,
   "type": "message",
   "date": "2024-06-20T03:30:27",
   "date_unixtime": "1718834427",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "I see, but that's not the error",
   "text_entities": [
    {
     "type": "plain",
     "text": "I see, but that's not the error"
    }
   ]
  },
  {
   "id": 4050,
   "type": "message",
   "date": "2024-06-20T03:30:27",
   "date_unixtime": "1718834427",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Can you try a newer version?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can you try a newer version?"
    }
   ]
  },
  {
   "id": 4051,
   "type": "message",
   "date": "2024-06-20T03:30:34",
   "date_unixtime": "1718834434",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Let me install the last version",
   "text_entities": [
    {
     "type": "plain",
     "text": "Let me install the last version"
    }
   ]
  },
  {
   "id": 4052,
   "type": "message",
   "date": "2024-06-20T03:30:42",
   "date_unixtime": "1718834442",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Thanks 🙏",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks 🙏"
    }
   ]
  },
  {
   "id": 4053,
   "type": "message",
   "date": "2024-06-20T03:31:25",
   "date_unixtime": "1718834485",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "2.2.0?",
   "text_entities": [
    {
     "type": "plain",
     "text": "2.2.0?"
    }
   ]
  },
  {
   "id": 4054,
   "type": "message",
   "date": "2024-06-20T03:32:04",
   "date_unixtime": "1718834524",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Yeah",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yeah"
    }
   ]
  },
  {
   "id": 4055,
   "type": "message",
   "date": "2024-06-20T03:32:09",
   "date_unixtime": "1718834529",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Error: Incompatible param type: tuple(uint256badgeId,uint256level)[]\n    at SchemaEncoder.encodeData\nThe same error",
   "text_entities": [
    {
     "type": "plain",
     "text": "Error: Incompatible param type: tuple(uint256badgeId,uint256level)[]\n    at SchemaEncoder.encodeData\nThe same error"
    }
   ]
  },
  {
   "id": 4056,
   "type": "message",
   "date": "2024-06-20T03:32:27",
   "date_unixtime": "1718834547",
   "edited": "2024-06-20T03:32:32",
   "edited_unixtime": "1718834552",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 464,
   "text": "This is my code",
   "text_entities": [
    {
     "type": "plain",
     "text": "This is my code"
    }
   ]
  },
  {
   "id": 4057,
   "type": "message",
   "date": "2024-06-20T03:32:44",
   "date_unixtime": "1718834564",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4053,
   "text": "Can you delete your node_modules and try reinstalling it?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can you delete your node_modules and try reinstalling it?"
    }
   ]
  },
  {
   "id": 4058,
   "type": "message",
   "date": "2024-06-20T03:34:05",
   "date_unixtime": "1718834645",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Same error 😢",
   "text_entities": [
    {
     "type": "plain",
     "text": "Same error 😢"
    }
   ]
  },
  {
   "id": 4059,
   "type": "message",
   "date": "2024-06-20T03:34:31",
   "date_unixtime": "1718834671",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "I see",
   "text_entities": [
    {
     "type": "plain",
     "text": "I see"
    }
   ]
  },
  {
   "id": 4060,
   "type": "message",
   "date": "2024-06-20T03:34:51",
   "date_unixtime": "1718834691",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "I’ll be in front of my machine soon and try debugging it. Stay tuned",
   "text_entities": [
    {
     "type": "plain",
     "text": "I’ll be in front of my machine soon and try debugging it. Stay tuned"
    }
   ]
  },
  {
   "id": 4061,
   "type": "message",
   "date": "2024-06-20T03:36:35",
   "date_unixtime": "1718834795",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Thank you, man. I'll still be here.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you, man. I'll still be here."
    }
   ]
  },
  {
   "id": 4062,
   "type": "message",
   "date": "2024-06-20T03:45:24",
   "date_unixtime": "1718835324",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Solved",
   "text_entities": [
    {
     "type": "plain",
     "text": "Solved"
    }
   ]
  },
  {
   "id": 4063,
   "type": "message",
   "date": "2024-06-20T03:45:44",
   "date_unixtime": "1718835344",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 488,
   "text": "Correct way to encode tuples:",
   "text_entities": [
    {
     "type": "plain",
     "text": "Correct way to encode tuples:"
    }
   ]
  },
  {
   "id": 4064,
   "type": "message",
   "date": "2024-06-20T03:46:37",
   "date_unixtime": "1718835397",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Yeah, I was just about to write to you too",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yeah, I was just about to write to you too"
    }
   ]
  },
  {
   "id": 4065,
   "type": "message",
   "date": "2024-06-20T03:46:44",
   "date_unixtime": "1718835404",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "I'm adding this as a test case to the sdk, just in case",
   "text_entities": [
    {
     "type": "plain",
     "text": "I'm adding this as a test case to the sdk, just in case"
    }
   ]
  },
  {
   "id": 4066,
   "type": "message",
   "date": "2024-06-20T03:47:49",
   "date_unixtime": "1718835469",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Why the sdk is not typesafe?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Why the sdk is not typesafe?"
    }
   ]
  },
  {
   "id": 4067,
   "type": "message",
   "date": "2024-06-20T03:48:03",
   "date_unixtime": "1718835483",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "I think that can be so so so helpful",
   "text_entities": [
    {
     "type": "plain",
     "text": "I think that can be so so so helpful"
    }
   ]
  },
  {
   "id": 4068,
   "type": "message",
   "date": "2024-06-20T03:50:13",
   "date_unixtime": "1718835613",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Pushed the test",
   "text_entities": [
    {
     "type": "plain",
     "text": "Pushed the test"
    }
   ]
  },
  {
   "id": 4069,
   "type": "message",
   "date": "2024-06-20T03:50:27",
   "date_unixtime": "1718835627",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4067,
   "text": "These encoding issues are kind of beyond its scope",
   "text_entities": [
    {
     "type": "plain",
     "text": "These encoding issues are kind of beyond its scope"
    }
   ]
  },
  {
   "id": 4070,
   "type": "message",
   "date": "2024-06-20T03:50:50",
   "date_unixtime": "1718835650",
   "edited": "2024-06-20T03:50:59",
   "edited_unixtime": "1718835659",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "We do our best to provide similar functionality as an ABI encoder, but in the end of the day, we can't do it all",
   "text_entities": [
    {
     "type": "plain",
     "text": "We do our best to provide similar functionality as an ABI encoder, but in the end of the day, we can't do it all"
    }
   ]
  },
  {
   "id": 4071,
   "type": "message",
   "date": "2024-06-20T03:51:18",
   "date_unixtime": "1718835678",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Everything else is of course as type safe as it gets",
   "text_entities": [
    {
     "type": "plain",
     "text": "Everything else is of course as type safe as it gets"
    }
   ]
  },
  {
   "id": 4072,
   "type": "message",
   "date": "2024-06-20T03:52:19",
   "date_unixtime": "1718835739",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Thanks!!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks!!"
    }
   ]
  },
  {
   "id": 4073,
   "type": "service",
   "date": "2024-06-21T00:03:50",
   "date_unixtime": "1718908430",
   "actor": "Flash Voyager",
   "actor_id": "user522678236",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4074,
   "type": "message",
   "date": "2024-06-22T00:13:45",
   "date_unixtime": "1718995425",
   "edited": "2024-06-22T22:43:39",
   "edited_unixtime": "1719076419",
   "from": "amanwithwings",
   "from_id": "user646962153",
   "text": [
    "Hey all, is anyone working on DAO-related use cases? We released a website to keep track of your schemas: ",
    {
     "type": "link",
     "text": "https://attestations.daostar.org/"
    },
    "\n\nFeel free to list your schemas there."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey all, is anyone working on DAO-related use cases? We released a website to keep track of your schemas: "
    },
    {
     "type": "link",
     "text": "https://attestations.daostar.org/"
    },
    {
     "type": "plain",
     "text": "\n\nFeel free to list your schemas there."
    }
   ]
  },
  {
   "id": 4075,
   "type": "message",
   "date": "2024-06-22T01:51:08",
   "date_unixtime": "1719001268",
   "edited": "2024-06-22T01:51:33",
   "edited_unixtime": "1719001293",
   "from": "Dan",
   "from_id": "user1261450655",
   "reply_to_message_id": 2,
   "text": "Hi team, I'm wondering which is the more useful data to store to preserve the underlying data if we are otherwise ipfs indexing it.\n\nIs it better to consider the offchainAttestation the source of truth for the attestation, or the createOffchainUrl(sig, signer) path as the source of truth?\n\nIt seems that the offchainAttestation object is the actual 712 signed message, but the offchainUrl is slightly more usable and should contain within it the offchainAttestation as a parseable sub object, even if EAS stopped hosting its FE. Is that correct?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi team, I'm wondering which is the more useful data to store to preserve the underlying data if we are otherwise ipfs indexing it.\n\nIs it better to consider the offchainAttestation the source of truth for the attestation, or the createOffchainUrl(sig, signer) path as the source of truth?\n\nIt seems that the offchainAttestation object is the actual 712 signed message, but the offchainUrl is slightly more usable and should contain within it the offchainAttestation as a parseable sub object, even if EAS stopped hosting its FE. Is that correct?"
    }
   ]
  },
  {
   "id": 4076,
   "type": "service",
   "date": "2024-06-22T10:22:23",
   "date_unixtime": "1719031943",
   "actor": "CHEFFO",
   "actor_id": "user5642403539",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4077,
   "type": "message",
   "date": "2024-06-22T10:25:26",
   "date_unixtime": "1719032126",
   "edited": "2024-06-23T04:17:05",
   "edited_unixtime": "1719096425",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 4075,
   "text": "i'd think so  because unpublished attestations can be passed around via the url only. but would love to get clarification from the team as well",
   "text_entities": [
    {
     "type": "plain",
     "text": "i'd think so  because unpublished attestations can be passed around via the url only. but would love to get clarification from the team as well"
    }
   ]
  },
  {
   "id": 4078,
   "type": "message",
   "date": "2024-06-22T17:43:49",
   "date_unixtime": "1719058429",
   "edited": "2024-06-23T04:16:10",
   "edited_unixtime": "1719096370",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4075,
   "text": "Either is okay since they can be converted back and forth",
   "text_entities": [
    {
     "type": "plain",
     "text": "Either is okay since they can be converted back and forth"
    }
   ]
  },
  {
   "id": 4079,
   "type": "service",
   "date": "2024-06-22T19:46:28",
   "date_unixtime": "1719065788",
   "actor": "0xneves",
   "actor_id": "user864188388",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4080,
   "type": "message",
   "date": "2024-06-22T19:49:42",
   "date_unixtime": "1719065982",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 2,
   "text": "Hey team! Congrats, I'm loving the app, thank you for putting this up together 👏",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey team! Congrats, I'm loving the app, thank you for putting this up together 👏"
    }
   ]
  },
  {
   "id": 4081,
   "type": "message",
   "date": "2024-06-22T19:51:11",
   "date_unixtime": "1719066071",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "pre",
     "text": "// Initialize SchemaEncoder with the schema string\nconst schemaEncoder = new SchemaEncoder(\"uint256 eventId, uint8 voteIndex\");\nconst encodedData = schemaEncoder.encodeData([\n  { name: \"eventId\", value: 1, type: \"uint256\" },\n  { name: \"voteIndex\", value: 1, type: \"uint8\" },\n]);\n",
     "language": "javascript"
    },
    "\nWhat is the analog version for schemaEncoder for on-chain attestations? I'm trying to call attest using another contract"
   ],
   "text_entities": [
    {
     "type": "pre",
     "text": "// Initialize SchemaEncoder with the schema string\nconst schemaEncoder = new SchemaEncoder(\"uint256 eventId, uint8 voteIndex\");\nconst encodedData = schemaEncoder.encodeData([\n  { name: \"eventId\", value: 1, type: \"uint256\" },\n  { name: \"voteIndex\", value: 1, type: \"uint8\" },\n]);\n",
     "language": "javascript"
    },
    {
     "type": "plain",
     "text": "\nWhat is the analog version for schemaEncoder for on-chain attestations? I'm trying to call attest using another contract"
    }
   ]
  },
  {
   "id": 4082,
   "type": "message",
   "date": "2024-06-22T19:53:11",
   "date_unixtime": "1719066191",
   "edited": "2024-06-22T19:57:41",
   "edited_unixtime": "1719066461",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 724,
   "text": [
    "I found this example at ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/make-an-attestation"
    },
    " , should I just encode the values and the result will be the same?  I'm looking into the encoding of tuples and not a single var. Thx"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I found this example at "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/make-an-attestation"
    },
    {
     "type": "plain",
     "text": " , should I just encode the values and the result will be the same?  I'm looking into the encoding of tuples and not a single var. Thx"
    }
   ]
  },
  {
   "id": 4083,
   "type": "message",
   "date": "2024-06-22T21:34:36",
   "date_unixtime": "1719072276",
   "edited": "2024-06-22T21:35:15",
   "edited_unixtime": "1719072315",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 2,
   "text": "There are any debates regarding the arguments being hashed in the schemas? Currently only the resolver, abi and revocable are present. But I ran into a situation where I have two schemas that must be revocable, use the same resolver, and need no data types (empty abi), but I can't aggregate them because they mean diferent badges (one is a manager, other is an user). Would be nice to have a naming convention or versioning when generating the schema uid. Is this subjected to debate?",
   "text_entities": [
    {
     "type": "plain",
     "text": "There are any debates regarding the arguments being hashed in the schemas? Currently only the resolver, abi and revocable are present. But I ran into a situation where I have two schemas that must be revocable, use the same resolver, and need no data types (empty abi), but I can't aggregate them because they mean diferent badges (one is a manager, other is an user). Would be nice to have a naming convention or versioning when generating the schema uid. Is this subjected to debate?"
    }
   ]
  },
  {
   "id": 4084,
   "type": "message",
   "date": "2024-06-22T22:42:13",
   "date_unixtime": "1719076333",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4081,
   "text": "Look at abi.encode/decode. You just use those solidity functions to encode and decode the data",
   "text_entities": [
    {
     "type": "plain",
     "text": "Look at abi.encode/decode. You just use those solidity functions to encode and decode the data"
    }
   ]
  },
  {
   "id": 4085,
   "type": "message",
   "date": "2024-06-22T22:43:27",
   "date_unixtime": "1719076407",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4083,
   "text": "Can you describe your use case so I can help better?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can you describe your use case so I can help better?"
    }
   ]
  },
  {
   "id": 4086,
   "type": "message",
   "date": "2024-06-22T23:03:17",
   "date_unixtime": "1719077597",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 4084,
   "text": "Awesome, worked like a charm",
   "text_entities": [
    {
     "type": "plain",
     "text": "Awesome, worked like a charm"
    }
   ]
  },
  {
   "id": 4087,
   "type": "message",
   "date": "2024-06-22T23:15:38",
   "date_unixtime": "1719078338",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 4085,
   "text": "Assuming I have two entities, a manager and a person, while hosting a crypto event, I want the managers to fall under X schema while the users under Z schema, aggregating them separatedely. Both schemas are not revocable, use the same resolver, and there is no need for data, only the badge itself. In this case the schema UID wil be the same, and the data from both of them will become a single table. I want to maintain them separatedly but the only way to change the UID seems to change the data abi",
   "text_entities": [
    {
     "type": "plain",
     "text": "Assuming I have two entities, a manager and a person, while hosting a crypto event, I want the managers to fall under X schema while the users under Z schema, aggregating them separatedely. Both schemas are not revocable, use the same resolver, and there is no need for data, only the badge itself. In this case the schema UID wil be the same, and the data from both of them will become a single table. I want to maintain them separatedly but the only way to change the UID seems to change the data abi"
    }
   ]
  },
  {
   "id": 4088,
   "type": "message",
   "date": "2024-06-23T01:29:51",
   "date_unixtime": "1719086391",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4087,
   "text": "You could use a single schema with a field that represents the entity type. EAS schemas must have a unique structure. It’s the hash of all fields which creates the UID.",
   "text_entities": [
    {
     "type": "plain",
     "text": "You could use a single schema with a field that represents the entity type. EAS schemas must have a unique structure. It’s the hash of all fields which creates the UID."
    }
   ]
  },
  {
   "id": 4089,
   "type": "message",
   "date": "2024-06-23T03:56:10",
   "date_unixtime": "1719095170",
   "edited": "2024-06-23T07:57:36",
   "edited_unixtime": "1719109656",
   "from": "CHEFFO",
   "from_id": "user5642403539",
   "text": "Attesting to my excitement of being here in the chat 😁",
   "text_entities": [
    {
     "type": "plain",
     "text": "Attesting to my excitement of being here in the chat 😁"
    }
   ]
  },
  {
   "id": 4090,
   "type": "message",
   "date": "2024-06-23T04:16:58",
   "date_unixtime": "1719096418",
   "edited": "2024-06-23T08:21:41",
   "edited_unixtime": "1719111101",
   "from": "Dan",
   "from_id": "user1261450655",
   "reply_to_message_id": 4078,
   "text": "Thanks for confirming. Going with the offchain url then since it’s easy to make it clickable into a usable link that shows it works outside our app",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks for confirming. Going with the offchain url then since it’s easy to make it clickable into a usable link that shows it works outside our app"
    }
   ]
  },
  {
   "id": 4091,
   "type": "service",
   "date": "2024-06-23T14:47:23",
   "date_unixtime": "1719134243",
   "actor": "Arka",
   "actor_id": "user5546219175",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4092,
   "type": "service",
   "date": "2024-06-23T14:47:49",
   "date_unixtime": "1719134269",
   "actor": "Ryan Anliker",
   "actor_id": "user1686427823",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4093,
   "type": "service",
   "date": "2024-06-23T19:43:07",
   "date_unixtime": "1719151987",
   "actor": "Shubham",
   "actor_id": "user1616694289",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4094,
   "type": "service",
   "date": "2024-06-23T22:02:29",
   "date_unixtime": "1719160349",
   "actor": "Mayank",
   "actor_id": "user1214239978",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4095,
   "type": "message",
   "date": "2024-06-24T00:52:12",
   "date_unixtime": "1719170532",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "Hi team, there are 4 addresses listed for some chains - EAS, SchemaRegistry, EIP712Proxy and then Indexer. why do some chains have only the first two? does this mean they don't support delegated attestations or indexing yet?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi team, there are 4 addresses listed for some chains - EAS, SchemaRegistry, EIP712Proxy and then Indexer. why do some chains have only the first two? does this mean they don't support delegated attestations or indexing yet?"
    }
   ]
  },
  {
   "id": 4096,
   "type": "message",
   "date": "2024-06-24T01:24:32",
   "date_unixtime": "1719172472",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4095,
   "text": "All chains support delegated attestations. The EIP712Proxy is only a helper contract. Anyone can deploy it. Same for the indexer but in general we like to deploy an official indexer on each chain. Which chains are you focusing on?",
   "text_entities": [
    {
     "type": "plain",
     "text": "All chains support delegated attestations. The EIP712Proxy is only a helper contract. Anyone can deploy it. Same for the indexer but in general we like to deploy an official indexer on each chain. Which chains are you focusing on?"
    }
   ]
  },
  {
   "id": 4097,
   "type": "message",
   "date": "2024-06-24T01:33:36",
   "date_unixtime": "1719173016",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "> The EIP712Proxy is only a helper contract\ncan you expand on this?",
   "text_entities": [
    {
     "type": "plain",
     "text": "> The EIP712Proxy is only a helper contract\ncan you expand on this?"
    }
   ]
  },
  {
   "id": 4098,
   "type": "message",
   "date": "2024-06-24T01:34:09",
   "date_unixtime": "1719173049",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "i'm starting on base sepolia but wanted to understand how the service may vary on other chains",
   "text_entities": [
    {
     "type": "plain",
     "text": "i'm starting on base sepolia but wanted to understand how the service may vary on other chains"
    }
   ]
  },
  {
   "id": 4099,
   "type": "message",
   "date": "2024-06-24T02:30:41",
   "date_unixtime": "1719176441",
   "edited": "2024-06-24T02:30:57",
   "edited_unixtime": "1719176457",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4097,
   "text": "EIP712Proxy contract can be used like a software library in order to create a contract that does delegated attestations where the users pay for the contract to attest.\n\nYou can still copy the logic or deploy this same contract on any chain without any difference in operation",
   "text_entities": [
    {
     "type": "plain",
     "text": "EIP712Proxy contract can be used like a software library in order to create a contract that does delegated attestations where the users pay for the contract to attest.\n\nYou can still copy the logic or deploy this same contract on any chain without any difference in operation"
    }
   ]
  },
  {
   "id": 4100,
   "type": "message",
   "date": "2024-06-24T02:30:50",
   "date_unixtime": "1719176450",
   "edited": "2024-06-24T02:31:22",
   "edited_unixtime": "1719176482",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4098,
   "text": "It really doesn't",
   "text_entities": [
    {
     "type": "plain",
     "text": "It really doesn't"
    }
   ]
  },
  {
   "id": 4101,
   "type": "message",
   "date": "2024-06-24T02:42:52",
   "date_unixtime": "1719177172",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 4099,
   "text": "thanks, this is super helpful",
   "text_entities": [
    {
     "type": "plain",
     "text": "thanks, this is super helpful"
    }
   ]
  },
  {
   "id": 4102,
   "type": "message",
   "date": "2024-06-24T02:44:28",
   "date_unixtime": "1719177268",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "is there a way to search the graphql API based on schema names rather than uid",
   "text_entities": [
    {
     "type": "plain",
     "text": "is there a way to search the graphql API based on schema names rather than uid"
    }
   ]
  },
  {
   "id": 4103,
   "type": "message",
   "date": "2024-06-24T03:07:17",
   "date_unixtime": "1719178637",
   "edited": "2024-06-24T03:23:53",
   "edited_unixtime": "1719179633",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "You can search the schema name table",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can search the schema name table"
    }
   ]
  },
  {
   "id": 4104,
   "type": "service",
   "date": "2024-06-24T10:08:04",
   "date_unixtime": "1719203884",
   "actor": "!!!!!!",
   "actor_id": "user5458212222",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4105,
   "type": "message",
   "date": "2024-06-24T15:47:23",
   "date_unixtime": "1719224243",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "text": [
    "gm all; W",
    {
     "type": "bold",
     "text": "here's the best place to ask general technical questions and get high-quality responses?"
    },
    " Is it regular ",
    {
     "type": "link",
     "text": "stackoverflow.com"
    },
    " or ",
    {
     "type": "link",
     "text": "ethereum.stackexchange.com"
    },
    " or somewhere entirely different?\n\nBonus question: is anyone working on these kind of places but with an actually valuable/exchangeable tip token, attested rep?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "gm all; W"
    },
    {
     "type": "bold",
     "text": "here's the best place to ask general technical questions and get high-quality responses?"
    },
    {
     "type": "plain",
     "text": " Is it regular "
    },
    {
     "type": "link",
     "text": "stackoverflow.com"
    },
    {
     "type": "plain",
     "text": " or "
    },
    {
     "type": "link",
     "text": "ethereum.stackexchange.com"
    },
    {
     "type": "plain",
     "text": " or somewhere entirely different?\n\nBonus question: is anyone working on these kind of places but with an actually valuable/exchangeable tip token, attested rep?"
    }
   ]
  },
  {
   "id": 4106,
   "type": "message",
   "date": "2024-06-24T17:58:13",
   "date_unixtime": "1719232093",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4105,
   "text": "You can ask in the dev chat on telegram!",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can ask in the dev chat on telegram!"
    }
   ]
  },
  {
   "id": 4107,
   "type": "service",
   "date": "2024-06-24T18:40:54",
   "date_unixtime": "1719234654",
   "actor": "Mahesh",
   "actor_id": "user6739162650",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4108,
   "type": "message",
   "date": "2024-06-24T18:56:39",
   "date_unixtime": "1719235599",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "text": "Sorry, I was not clear. Thanks though Steve. I was meaning like general Ethereum questions.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Sorry, I was not clear. Thanks though Steve. I was meaning like general Ethereum questions."
    }
   ]
  },
  {
   "id": 4109,
   "type": "message",
   "date": "2024-06-24T20:21:58",
   "date_unixtime": "1719240718",
   "from": "Dan",
   "from_id": "user1261450655",
   "reply_to_message_id": 4099,
   "text": "Does this offer a model for a user to authorize another EOA to make delegations on their behalf? Or just from the contract address only?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Does this offer a model for a user to authorize another EOA to make delegations on their behalf? Or just from the contract address only?"
    }
   ]
  },
  {
   "id": 4110,
   "type": "message",
   "date": "2024-06-24T20:23:52",
   "date_unixtime": "1719240832",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4109,
   "text": "You can accomplish this without the contract using standard delegated attestations. A delegator can sign a delegated attestation which gets paid for by another entity",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can accomplish this without the contract using standard delegated attestations. A delegator can sign a delegated attestation which gets paid for by another entity"
    }
   ]
  },
  {
   "id": 4111,
   "type": "message",
   "date": "2024-06-24T22:52:45",
   "date_unixtime": "1719249765",
   "from": "Kyle Kaplan",
   "from_id": "user5081637310",
   "reply_to_message_id": 2,
   "text": "Hi guys, wanted to confirm that there is no way for a resolver contract to make an attestation that references the attestation it is about to resolve? For example, can an order attestation resolver attest (with a different schema) that the order is paid while referencing the soon to be order attestation?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi guys, wanted to confirm that there is no way for a resolver contract to make an attestation that references the attestation it is about to resolve? For example, can an order attestation resolver attest (with a different schema) that the order is paid while referencing the soon to be order attestation?"
    }
   ]
  },
  {
   "id": 4112,
   "type": "message",
   "date": "2024-06-24T22:55:40",
   "date_unixtime": "1719249940",
   "edited": "2024-06-25T00:01:07",
   "edited_unixtime": "1719253867",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": "hi team, I'm getting an unknown account error when trying to programmatically generate a schema from my server. the signer wallet is generated via PK. am I doing this incorrectly?",
   "text_entities": [
    {
     "type": "plain",
     "text": "hi team, I'm getting an unknown account error when trying to programmatically generate a schema from my server. the signer wallet is generated via PK. am I doing this incorrectly?"
    }
   ]
  },
  {
   "id": 4113,
   "type": "message",
   "date": "2024-06-24T22:56:28",
   "date_unixtime": "1719249988",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "pre",
     "text": "  code: 'UNKNOWN_ERROR',\n  error: { code: -32000, message: 'unknown account' },\n  payload: {\n    method: 'eth_sendTransaction',\n    params: [\n      {\n        gas: '0x23dc6',\n        from: '0xb7bcc7047c1c0fc6639e458ae058bba00258b7ed',\n        to: '0x4200000000000000000000000000000000000020',\n        data: '0x60d7a2780000000000000000000000000000000000000000000000000000000000000060000000000000000000000000954036a06577e9be37514a14bba4eec822e845240000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002e626f6f6c2064696452697475616c2c20737472696e6720636f6e746578742c20737472696e672063617074696f6e000000000000000000000000000000000000'\n      }\n    ],\n    id: 4,\n    jsonrpc: '2.0'\n  },\n  shortMessage: 'could not coalesce error'\n}",
     "language": "javascript"
    }
   ],
   "text_entities": [
    {
     "type": "pre",
     "text": "  code: 'UNKNOWN_ERROR',\n  error: { code: -32000, message: 'unknown account' },\n  payload: {\n    method: 'eth_sendTransaction',\n    params: [\n      {\n        gas: '0x23dc6',\n        from: '0xb7bcc7047c1c0fc6639e458ae058bba00258b7ed',\n        to: '0x4200000000000000000000000000000000000020',\n        data: '0x60d7a2780000000000000000000000000000000000000000000000000000000000000060000000000000000000000000954036a06577e9be37514a14bba4eec822e845240000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002e626f6f6c2064696452697475616c2c20737472696e6720636f6e746578742c20737472696e672063617074696f6e000000000000000000000000000000000000'\n      }\n    ],\n    id: 4,\n    jsonrpc: '2.0'\n  },\n  shortMessage: 'could not coalesce error'\n}",
     "language": "javascript"
    }
   ]
  },
  {
   "id": 4114,
   "type": "service",
   "date": "2024-06-24T23:10:54",
   "date_unixtime": "1719250854",
   "actor": "Kyle Kaplan",
   "actor_id": "user5081637310",
   "action": "invite_members",
   "members": [
    "Germany"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4115,
   "type": "message",
   "date": "2024-06-25T00:22:40",
   "date_unixtime": "1719255160",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4111,
   "text": "It is true you cannot use refUID this way currently (this may be changed in an upcoming release). Another options is you can compute the UID and attest using a schema that has a bytes32 field referencing the attestation UID. It just wont work with the standard refUID field since the hook will run before the attestation exists.",
   "text_entities": [
    {
     "type": "plain",
     "text": "It is true you cannot use refUID this way currently (this may be changed in an upcoming release). Another options is you can compute the UID and attest using a schema that has a bytes32 field referencing the attestation UID. It just wont work with the standard refUID field since the hook will run before the attestation exists."
    }
   ]
  },
  {
   "id": 4116,
   "type": "message",
   "date": "2024-06-25T00:31:51",
   "date_unixtime": "1719255711",
   "from": "Kyle Kaplan",
   "from_id": "user5081637310",
   "reply_to_message_id": 4115,
   "text": "Cool. Thanks for confirming.\nMight be cool to have some kind of built in ‘afterAttest’ hook (in a future release)",
   "text_entities": [
    {
     "type": "plain",
     "text": "Cool. Thanks for confirming.\nMight be cool to have some kind of built in ‘afterAttest’ hook (in a future release)"
    }
   ]
  },
  {
   "id": 4117,
   "type": "message",
   "date": "2024-06-25T00:32:12",
   "date_unixtime": "1719255732",
   "edited": "2024-06-25T00:32:29",
   "edited_unixtime": "1719255749",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4116,
   "text": "Thats also on the list",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thats also on the list"
    }
   ]
  },
  {
   "id": 4118,
   "type": "message",
   "date": "2024-06-25T00:34:36",
   "date_unixtime": "1719255876",
   "from": "Kyle Kaplan",
   "from_id": "user5081637310",
   "reply_to_message_id": 4117,
   "text": "Do you think it’s more like months or years out?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Do you think it’s more like months or years out?"
    }
   ]
  },
  {
   "id": 4119,
   "type": "service",
   "date": "2024-06-25T12:21:50",
   "date_unixtime": "1719298310",
   "actor": "Pareen",
   "actor_id": "user168744828",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4120,
   "type": "message",
   "date": "2024-06-25T12:23:45",
   "date_unixtime": "1719298425",
   "from": "Pareen",
   "from_id": "user168744828",
   "reply_to_message_id": 2,
   "text": "can the recipient and the attester address be the same? exploring a use case for self-attestation",
   "text_entities": [
    {
     "type": "plain",
     "text": "can the recipient and the attester address be the same? exploring a use case for self-attestation"
    }
   ]
  },
  {
   "id": 4121,
   "type": "service",
   "date": "2024-06-25T14:20:51",
   "date_unixtime": "1719305451",
   "actor": "zkGrace.eth",
   "actor_id": "user391418053",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4122,
   "type": "service",
   "date": "2024-06-25T15:44:08",
   "date_unixtime": "1719310448",
   "actor": "Nicholas | Presto",
   "actor_id": "user5632234375",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4123,
   "type": "message",
   "date": "2024-06-25T18:11:10",
   "date_unixtime": "1719319270",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4120,
   "text": "Absolutely. The recipient can also be zero address which conveys an attestation made but to no one specific. Could be used for a tweet attestation for example",
   "text_entities": [
    {
     "type": "plain",
     "text": "Absolutely. The recipient can also be zero address which conveys an attestation made but to no one specific. Could be used for a tweet attestation for example"
    }
   ]
  },
  {
   "id": 4124,
   "type": "service",
   "date": "2024-06-25T20:43:03",
   "date_unixtime": "1719328383",
   "actor": "Pareen",
   "actor_id": "user168744828",
   "action": "invite_members",
   "members": [
    "Siddesh"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4125,
   "type": "service",
   "date": "2024-06-26T10:14:54",
   "date_unixtime": "1719377094",
   "actor": "Krunix",
   "actor_id": "user6625166724",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4127,
   "type": "message",
   "date": "2024-06-26T16:41:33",
   "date_unixtime": "1719400293",
   "edited": "2024-06-26T16:50:13",
   "edited_unixtime": "1719400813",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 2,
   "text": [
    "Hmm. I am stuck on this issue. \n\n",
    {
     "type": "code",
     "text": "Incompatible ethers version detect. Make sure to use the SDK with ethers v6 or later"
    },
    "\n\nI am using ethers v6. All packages that use ethers also uses v6+.\n\nLooks clean:\n",
    {
     "type": "pre",
     "text": "\nhypercert-app@0.1.0 /Users/kristoferlund/Documents/hypercert-app\n\ndependencies:\n@ethereum-attestation-service/eas-sdk 2.3.0\n└── ethers 6.13.1\n@hypercerts-org/marketplace-sdk 0.3.12\n└── ethers 6.13.1 peer\nethers 6.13.1\n",
     "language": ""
    },
    "\n\nOn the other hand, quite a few packages use the 5.7.0 versions of the ",
    {
     "type": "code",
     "text": "@ethersproject/xxx"
    },
    " packages, the EAS sdk included.\n\nThis is ",
    {
     "type": "code",
     "text": "@ethersproject/abi@5.7.0"
    },
    " for instance:\n\n",
    {
     "type": "pre",
     "text": "\nhypercert-app@0.1.0 /Users/kristoferlund/Documents/hypercert-app\n\ndependencies:\n@ethereum-attestation-service/eas-sdk 2.3.0\n├─┬ @ethereum-attestation-service/eas-contracts 1.4.1\n│ └─┬ hardhat 2.22.1\n│   └── @ethersproject/abi 5.7.0\n└─┬ @openzeppelin/merkle-tree 1.0.6\n  └── @ethersproject/abi 5.7.0\n@hypercerts-org/contracts 2.0.0-alpha.0\n└─┬ hardhat 2.22.5\n  └── @ethersproject/abi 5.7.0\n@hypercerts-org/marketplace-sdk 0.3.12\n└─┬ @hypercerts-org/sdk 2.0.0-alpha.27\n  ├─┬ @hypercerts-org/contracts 2.0.0-alpha.0\n  │ └─┬ hardhat 2.22.5\n  │   └── @ethersproject/abi 5.7.0\n  └─┬ @openzeppelin/merkle-tree 1.0.6\n    └── @ethersproject/abi 5.7.0\n@hypercerts-org/sdk 2.0.0-alpha.27\n├─┬ @hypercerts-org/contracts 2.0.0-alpha.0\n│ └─┬ hardhat 2.22.5\n│   └── @ethersproject/abi 5.7.0\n└─┬ @openzeppelin/merkle-tree 1.0.6\n  └── @ethersproject/abi 5.7.0\n@openzeppelin/merkle-tree 1.0.6\n└── @ethersproject/abi 5.7.0\n",
     "language": ""
    },
    "\n\nIdeas anyone? I had this issue before, don’t remember how I solved it though."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hmm. I am stuck on this issue. \n\n"
    },
    {
     "type": "code",
     "text": "Incompatible ethers version detect. Make sure to use the SDK with ethers v6 or later"
    },
    {
     "type": "plain",
     "text": "\n\nI am using ethers v6. All packages that use ethers also uses v6+.\n\nLooks clean:\n"
    },
    {
     "type": "pre",
     "text": "\nhypercert-app@0.1.0 /Users/kristoferlund/Documents/hypercert-app\n\ndependencies:\n@ethereum-attestation-service/eas-sdk 2.3.0\n└── ethers 6.13.1\n@hypercerts-org/marketplace-sdk 0.3.12\n└── ethers 6.13.1 peer\nethers 6.13.1\n",
     "language": ""
    },
    {
     "type": "plain",
     "text": "\n\nOn the other hand, quite a few packages use the 5.7.0 versions of the "
    },
    {
     "type": "code",
     "text": "@ethersproject/xxx"
    },
    {
     "type": "plain",
     "text": " packages, the EAS sdk included.\n\nThis is "
    },
    {
     "type": "code",
     "text": "@ethersproject/abi@5.7.0"
    },
    {
     "type": "plain",
     "text": " for instance:\n\n"
    },
    {
     "type": "pre",
     "text": "\nhypercert-app@0.1.0 /Users/kristoferlund/Documents/hypercert-app\n\ndependencies:\n@ethereum-attestation-service/eas-sdk 2.3.0\n├─┬ @ethereum-attestation-service/eas-contracts 1.4.1\n│ └─┬ hardhat 2.22.1\n│   └── @ethersproject/abi 5.7.0\n└─┬ @openzeppelin/merkle-tree 1.0.6\n  └── @ethersproject/abi 5.7.0\n@hypercerts-org/contracts 2.0.0-alpha.0\n└─┬ hardhat 2.22.5\n  └── @ethersproject/abi 5.7.0\n@hypercerts-org/marketplace-sdk 0.3.12\n└─┬ @hypercerts-org/sdk 2.0.0-alpha.27\n  ├─┬ @hypercerts-org/contracts 2.0.0-alpha.0\n  │ └─┬ hardhat 2.22.5\n  │   └── @ethersproject/abi 5.7.0\n  └─┬ @openzeppelin/merkle-tree 1.0.6\n    └── @ethersproject/abi 5.7.0\n@hypercerts-org/sdk 2.0.0-alpha.27\n├─┬ @hypercerts-org/contracts 2.0.0-alpha.0\n│ └─┬ hardhat 2.22.5\n│   └── @ethersproject/abi 5.7.0\n└─┬ @openzeppelin/merkle-tree 1.0.6\n  └── @ethersproject/abi 5.7.0\n@openzeppelin/merkle-tree 1.0.6\n└── @ethersproject/abi 5.7.0\n",
     "language": ""
    },
    {
     "type": "plain",
     "text": "\n\nIdeas anyone? I had this issue before, don’t remember how I solved it though."
    }
   ]
  },
  {
   "id": 4128,
   "type": "message",
   "date": "2024-06-26T17:12:15",
   "date_unixtime": "1719402135",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "You have some dependency that forces ethers v5. It’s hard to tell which one from your snippets. Can you try deleting your node_modules folder and reinstalling everything? Can you try reproducing it on a sample project, mimicking your dependencies?",
   "text_entities": [
    {
     "type": "plain",
     "text": "You have some dependency that forces ethers v5. It’s hard to tell which one from your snippets. Can you try deleting your node_modules folder and reinstalling everything? Can you try reproducing it on a sample project, mimicking your dependencies?"
    }
   ]
  },
  {
   "id": 4129,
   "type": "message",
   "date": "2024-06-26T18:06:42",
   "date_unixtime": "1719405402",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 4128,
   "text": [
    "Thanks. The 5.x version of ethers don’t exist in node_modules as far as I can see. Do you know which of the “",
    {
     "type": "mention",
     "text": "@ethersproject"
    },
    "/xxx” packages might cause the same issue? Isolating is hard in this case as the colission with other parts of a growing codebase is the issue to solve."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks. The 5.x version of ethers don’t exist in node_modules as far as I can see. Do you know which of the “"
    },
    {
     "type": "mention",
     "text": "@ethersproject"
    },
    {
     "type": "plain",
     "text": "/xxx” packages might cause the same issue? Isolating is hard in this case as the colission with other parts of a growing codebase is the issue to solve."
    }
   ]
  },
  {
   "id": 4130,
   "type": "message",
   "date": "2024-06-26T18:07:25",
   "date_unixtime": "1719405445",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 2,
   "text": "Oh, btw. No issue when running locally, only happens when deployed to Vercel.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh, btw. No issue when running locally, only happens when deployed to Vercel."
    }
   ]
  },
  {
   "id": 4131,
   "type": "message",
   "date": "2024-06-26T18:07:41",
   "date_unixtime": "1719405461",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4129,
   "text": "I'm AFK, but if I recall correctly, the providers package",
   "text_entities": [
    {
     "type": "plain",
     "text": "I'm AFK, but if I recall correctly, the providers package"
    }
   ]
  },
  {
   "id": 4132,
   "type": "message",
   "date": "2024-06-26T18:08:03",
   "date_unixtime": "1719405483",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4130,
   "text": "Hmmm... this is weird. Maybe they have some strange package resolution",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hmmm... this is weird. Maybe they have some strange package resolution"
    }
   ]
  },
  {
   "id": 4133,
   "type": "message",
   "date": "2024-06-26T18:08:23",
   "date_unixtime": "1719405503",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "What do you use? npm, yarn, pnpm? pnpm is generally more reliable (from my experience)",
   "text_entities": [
    {
     "type": "plain",
     "text": "What do you use? npm, yarn, pnpm? pnpm is generally more reliable (from my experience)"
    }
   ]
  },
  {
   "id": 4134,
   "type": "message",
   "date": "2024-06-26T18:08:46",
   "date_unixtime": "1719405526",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "I.e., its lock file is more consistent",
   "text_entities": [
    {
     "type": "plain",
     "text": "I.e., its lock file is more consistent"
    }
   ]
  },
  {
   "id": 4135,
   "type": "message",
   "date": "2024-06-26T18:08:46",
   "date_unixtime": "1719405526",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 2,
   "text": [
    "Oh, need to double check we run the same build command on vercel as locally. ",
    {
     "type": "code",
     "text": "pnpm"
    },
    " locally."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh, need to double check we run the same build command on vercel as locally. "
    },
    {
     "type": "code",
     "text": "pnpm"
    },
    {
     "type": "plain",
     "text": " locally."
    }
   ]
  },
  {
   "id": 4136,
   "type": "message",
   "date": "2024-06-26T18:09:06",
   "date_unixtime": "1719405546",
   "edited": "2024-06-26T18:09:52",
   "edited_unixtime": "1719405592",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4135,
   "text": "Good luck 🙏",
   "text_entities": [
    {
     "type": "plain",
     "text": "Good luck 🙏"
    }
   ]
  },
  {
   "id": 4137,
   "type": "message",
   "date": "2024-06-26T18:22:23",
   "date_unixtime": "1719406343",
   "edited": "2024-06-26T19:27:20",
   "edited_unixtime": "1719410240",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 2,
   "file": "(File not included. Change data exporting settings to download.)",
   "file_name": "Screen Recording 2024-06-26 at 14.49.55.mp4",
   "thumbnail": "(File not included. Change data exporting settings to download.)",
   "media_type": "video_file",
   "mime_type": "video/mp4",
   "duration_seconds": 11,
   "width": 1132,
   "height": 992,
   "text": "That solved the issue! Vercel was using default build settings instead of pnpm. Seeing a spinner is way better than a red error message, yaay!",
   "text_entities": [
    {
     "type": "plain",
     "text": "That solved the issue! Vercel was using default build settings instead of pnpm. Seeing a spinner is way better than a red error message, yaay!"
    }
   ]
  },
  {
   "id": 4138,
   "type": "message",
   "date": "2024-06-26T18:25:26",
   "date_unixtime": "1719406526",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Woohoo!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Woohoo!"
    }
   ]
  },
  {
   "id": 4139,
   "type": "message",
   "date": "2024-06-26T18:25:31",
   "date_unixtime": "1719406531",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Nice 😂",
   "text_entities": [
    {
     "type": "plain",
     "text": "Nice 😂"
    }
   ]
  },
  {
   "id": 4140,
   "type": "service",
   "date": "2024-06-26T23:11:24",
   "date_unixtime": "1719423684",
   "actor": "Gonzalo Melo",
   "actor_id": "user6693036121",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4141,
   "type": "message",
   "date": "2024-06-26T23:14:32",
   "date_unixtime": "1719423872",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "Hey everyone!\n\nDoes data in GraphQL automatically expire or get deleted after some time?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey everyone!\n\nDoes data in GraphQL automatically expire or get deleted after some time?"
    }
   ]
  },
  {
   "id": 4142,
   "type": "message",
   "date": "2024-06-26T23:19:22",
   "date_unixtime": "1719424162",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "Reminder to the builders who have been using attestations in Onchain Summer that you can submit the same project on devfolio to the EAS bounty.\n\n",
    {
     "type": "link",
     "text": "https://eas-onchain-summer.devfolio.co/overview"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Reminder to the builders who have been using attestations in Onchain Summer that you can submit the same project on devfolio to the EAS bounty.\n\n"
    },
    {
     "type": "link",
     "text": "https://eas-onchain-summer.devfolio.co/overview"
    }
   ]
  },
  {
   "id": 4143,
   "type": "service",
   "date": "2024-06-26T23:51:44",
   "date_unixtime": "1719426104",
   "actor": "Mati",
   "actor_id": "user779313202",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4144,
   "type": "message",
   "date": "2024-06-27T00:12:05",
   "date_unixtime": "1719427325",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "The webpage returns more attestations than GraphQL",
   "text_entities": [
    {
     "type": "plain",
     "text": "The webpage returns more attestations than GraphQL"
    }
   ]
  },
  {
   "id": 4147,
   "type": "message",
   "date": "2024-06-27T00:22:34",
   "date_unixtime": "1719427954",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": [
    "0 attestations\n\ncurl --request POST --header 'content-type: application/json' --url '",
    {
     "type": "link",
     "text": "https://base.easscan.org/graphql"
    },
    "' --data '{\"query\":\"query Attestations {\\n      attestations(\\n        where: {\\n          recipient: { equals: \\\"0x849151d7d0bf1f34b70d5cad5149d28cc2308bf1\\\" }\\n        }\\n      ) {\\n        id\\n        attester\\n        recipient\\n        refUID\\n        revocable\\n        revocationTime\\n        revoked\\n        expirationTime\\n        data\\n        schema {\\n          id\\n        }\\n        decodedDataJson\\n      }\\n    }\"}'"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "0 attestations\n\ncurl --request POST --header 'content-type: application/json' --url '"
    },
    {
     "type": "link",
     "text": "https://base.easscan.org/graphql"
    },
    {
     "type": "plain",
     "text": "' --data '{\"query\":\"query Attestations {\\n      attestations(\\n        where: {\\n          recipient: { equals: \\\"0x849151d7d0bf1f34b70d5cad5149d28cc2308bf1\\\" }\\n        }\\n      ) {\\n        id\\n        attester\\n        recipient\\n        refUID\\n        revocable\\n        revocationTime\\n        revoked\\n        expirationTime\\n        data\\n        schema {\\n          id\\n        }\\n        decodedDataJson\\n      }\\n    }\"}'"
    }
   ]
  },
  {
   "id": 4148,
   "type": "message",
   "date": "2024-06-27T00:23:00",
   "date_unixtime": "1719427980",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": [
    "11 received attestations\n\n",
    {
     "type": "link",
     "text": "https://base.easscan.org/address/0x849151d7d0bf1f34b70d5cad5149d28cc2308bf1"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "11 received attestations\n\n"
    },
    {
     "type": "link",
     "text": "https://base.easscan.org/address/0x849151d7d0bf1f34b70d5cad5149d28cc2308bf1"
    }
   ]
  },
  {
   "id": 4149,
   "type": "message",
   "date": "2024-06-27T01:10:07",
   "date_unixtime": "1719430807",
   "edited": "2024-06-27T01:10:14",
   "edited_unixtime": "1719430814",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4144,
   "text": "The addresses are currently indexed in their checksummed form. You can query with that form or alternatively can query with mode: ‘insensitive’",
   "text_entities": [
    {
     "type": "plain",
     "text": "The addresses are currently indexed in their checksummed form. You can query with that form or alternatively can query with mode: ‘insensitive’"
    }
   ]
  },
  {
   "id": 4150,
   "type": "message",
   "date": "2024-06-27T01:28:55",
   "date_unixtime": "1719431935",
   "edited": "2024-06-27T01:29:16",
   "edited_unixtime": "1719431956",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 4149,
   "text": "Worked like a charm! Thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Worked like a charm! Thanks!"
    }
   ]
  },
  {
   "id": 4151,
   "type": "service",
   "date": "2024-06-27T04:13:20",
   "date_unixtime": "1719441800",
   "actor": "Rascar",
   "actor_id": "user1013433535",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4152,
   "type": "message",
   "date": "2024-06-27T21:00:07",
   "date_unixtime": "1719502207",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "Is there a way to retrieve like 300.000 attestations easily and relatively fast to do some local analysis?\n\nDune doesn't count as it's quite expensive for an individual",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is there a way to retrieve like 300.000 attestations easily and relatively fast to do some local analysis?\n\nDune doesn't count as it's quite expensive for an individual"
    }
   ]
  },
  {
   "id": 4153,
   "type": "message",
   "date": "2024-06-27T22:00:32",
   "date_unixtime": "1719505832",
   "from": "Mitch Oz",
   "from_id": "user546190199",
   "reply_to_message_id": 2,
   "text": "Hey crew! I was wondering if there is now any way to add a resolver contract to an existing schema? Or am I stuck having to make a completely new schema?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey crew! I was wondering if there is now any way to add a resolver contract to an existing schema? Or am I stuck having to make a completely new schema?"
    }
   ]
  },
  {
   "id": 4154,
   "type": "message",
   "date": "2024-06-27T22:04:38",
   "date_unixtime": "1719506078",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4152,
   "text": "Perhaps using a local node?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Perhaps using a local node?"
    }
   ]
  },
  {
   "id": 4155,
   "type": "message",
   "date": "2024-06-27T22:05:10",
   "date_unixtime": "1719506110",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4153,
   "text": "Yeah, it’s not possible. You should create a new schema",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yeah, it’s not possible. You should create a new schema"
    }
   ]
  },
  {
   "id": 4156,
   "type": "service",
   "date": "2024-06-27T22:05:38",
   "date_unixtime": "1719506138",
   "actor": "Jeremy | Gitcoin Passport",
   "actor_id": "user1057821846",
   "action": "invite_members",
   "members": [
    "Matt"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4157,
   "type": "message",
   "date": "2024-06-27T22:09:47",
   "date_unixtime": "1719506387",
   "edited": "2024-06-27T22:10:28",
   "edited_unixtime": "1719506428",
   "from": "Mitch Oz",
   "from_id": "user546190199",
   "text": [
    "Hey guys! We just delivered a new product from Giveth using EAS Attestations on Optimism. Check out DeVouch: \n\n",
    {
     "type": "link",
     "text": "https://devouch.xyz/"
    },
    "\n\nDeVouch is a system for members of reputable organizations in the Ethereum ecosystem to vouch for projects that are looking to raise funding. By vouching for a project, the organization can lend its credibility to the project, building confidence for those looking to support with funding.\n\n\nDeVouch collects projects Gitcoin, Giveth and Optimism Retro Funding and shows them in a singe place allowing users to either vouch or flag for each project. Visitors to the website can see the vouches and flags received by each project, tracked by the \"Attester Group\" that the vouch or flag came from. \n\nWe use Attestations in two ways, one we look at existing attestation data to organize attesters into groups. Then the issuance of Vouches or Flags is done via a standard schema. \n\nI think this could open up lots of cool ways for other groups to add and analyze data to help us make better funding decisions. If you have attested to your Gitcoin passport score on Optimism you should be able to start making attestations 😁"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys! We just delivered a new product from Giveth using EAS Attestations on Optimism. Check out DeVouch: \n\n"
    },
    {
     "type": "link",
     "text": "https://devouch.xyz/"
    },
    {
     "type": "plain",
     "text": "\n\nDeVouch is a system for members of reputable organizations in the Ethereum ecosystem to vouch for projects that are looking to raise funding. By vouching for a project, the organization can lend its credibility to the project, building confidence for those looking to support with funding.\n\n\nDeVouch collects projects Gitcoin, Giveth and Optimism Retro Funding and shows them in a singe place allowing users to either vouch or flag for each project. Visitors to the website can see the vouches and flags received by each project, tracked by the \"Attester Group\" that the vouch or flag came from. \n\nWe use Attestations in two ways, one we look at existing attestation data to organize attesters into groups. Then the issuance of Vouches or Flags is done via a standard schema. \n\nI think this could open up lots of cool ways for other groups to add and analyze data to help us make better funding decisions. If you have attested to your Gitcoin passport score on Optimism you should be able to start making attestations 😁"
    }
   ]
  },
  {
   "id": 4158,
   "type": "message",
   "date": "2024-06-27T22:10:36",
   "date_unixtime": "1719506436",
   "edited": "2024-06-27T22:11:19",
   "edited_unixtime": "1719506479",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4157,
   "text": "Oooo, veryy niiice!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oooo, veryy niiice!"
    }
   ]
  },
  {
   "id": 4159,
   "type": "message",
   "date": "2024-06-27T22:14:43",
   "date_unixtime": "1719506683",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Great job on the launch! Simple UX. Easy to find projects and the behavior to just \"vouch\" for a product is great.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Great job on the launch! Simple UX. Easy to find projects and the behavior to just \"vouch\" for a product is great."
    }
   ]
  },
  {
   "id": 4160,
   "type": "message",
   "date": "2024-06-27T22:16:52",
   "date_unixtime": "1719506812",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "Checking out the schema 👀👏\n",
    {
     "type": "link",
     "text": "https://optimism.easscan.org/schema/view/0x97b0c9911936fad57e77857fac6eef6771f8d0bf025be9549214e32bf9e2415a"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Checking out the schema 👀👏\n"
    },
    {
     "type": "link",
     "text": "https://optimism.easscan.org/schema/view/0x97b0c9911936fad57e77857fac6eef6771f8d0bf025be9549214e32bf9e2415a"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 4161,
   "type": "message",
   "date": "2024-06-27T22:19:56",
   "date_unixtime": "1719506996",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 4154,
   "text": "Would an EAS indexer be suitable for this case?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Would an EAS indexer be suitable for this case?"
    }
   ]
  },
  {
   "id": 4162,
   "type": "message",
   "date": "2024-06-27T22:20:28",
   "date_unixtime": "1719507028",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4161,
   "text": "You can run an indexer, or use thegraph, ponder, subsquid, etc",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can run an indexer, or use thegraph, ponder, subsquid, etc"
    }
   ]
  },
  {
   "id": 4163,
   "type": "message",
   "date": "2024-06-27T22:21:01",
   "date_unixtime": "1719507061",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "If you mean the smart contract, than not really. An offchain indexer will help of course",
   "text_entities": [
    {
     "type": "plain",
     "text": "If you mean the smart contract, than not really. An offchain indexer will help of course"
    }
   ]
  },
  {
   "id": 4164,
   "type": "message",
   "date": "2024-06-27T22:23:37",
   "date_unixtime": "1719507217",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 4163,
   "text": "Exactly, an offchain indexer",
   "text_entities": [
    {
     "type": "plain",
     "text": "Exactly, an offchain indexer"
    }
   ]
  },
  {
   "id": 4165,
   "type": "message",
   "date": "2024-06-27T22:24:10",
   "date_unixtime": "1719507250",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 4162,
   "text": "Not sure if I could download ~300k attestations using The Graph. Will check it anyway",
   "text_entities": [
    {
     "type": "plain",
     "text": "Not sure if I could download ~300k attestations using The Graph. Will check it anyway"
    }
   ]
  },
  {
   "id": 4166,
   "type": "message",
   "date": "2024-06-27T22:24:13",
   "date_unixtime": "1719507253",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "Thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks!"
    }
   ]
  },
  {
   "id": 4167,
   "type": "service",
   "date": "2024-06-28T01:50:09",
   "date_unixtime": "1719519609",
   "actor": "crone",
   "actor_id": "user853013328",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4168,
   "type": "message",
   "date": "2024-06-28T04:03:13",
   "date_unixtime": "1719527593",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": [
    "I already started the indexer from ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-indexing-service"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I already started the indexer from "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-indexing-service"
    }
   ]
  },
  {
   "id": 4169,
   "type": "message",
   "date": "2024-06-28T04:03:28",
   "date_unixtime": "1719527608",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "Is there a way to filter the attestations I want to fetch?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is there a way to filter the attestations I want to fetch?"
    }
   ]
  },
  {
   "id": 4170,
   "type": "message",
   "date": "2024-06-28T04:03:37",
   "date_unixtime": "1719527617",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "For a given set of schemas",
   "text_entities": [
    {
     "type": "plain",
     "text": "For a given set of schemas"
    }
   ]
  },
  {
   "id": 4171,
   "type": "message",
   "date": "2024-06-28T04:05:15",
   "date_unixtime": "1719527715",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "Not sure how it works. If it is just looping through blocks, I guess no",
   "text_entities": [
    {
     "type": "plain",
     "text": "Not sure how it works. If it is just looping through blocks, I guess no"
    }
   ]
  },
  {
   "id": 4172,
   "type": "message",
   "date": "2024-06-28T15:55:22",
   "date_unixtime": "1719570322",
   "from": "Aetos | zkPass (Slow Response)",
   "from_id": "user6388565619",
   "reply_to_message_id": 1848,
   "text": "any eco partners that are doing airdrops soon? we're pumping out a new product that allows projects to now distribute their airdrops in a TARGETED way, maximizes your utilization rate and make sure the right audience gets the right incentive.",
   "text_entities": [
    {
     "type": "plain",
     "text": "any eco partners that are doing airdrops soon? we're pumping out a new product that allows projects to now distribute their airdrops in a TARGETED way, maximizes your utilization rate and make sure the right audience gets the right incentive."
    }
   ]
  },
  {
   "id": 4173,
   "type": "message",
   "date": "2024-06-28T19:09:02",
   "date_unixtime": "1719581942",
   "from": "Mitch Oz",
   "from_id": "user546190199",
   "text": "Thanks guys! We're hoping the website can inspire other organizations to integrate the DeVouch back-end, anyone looking to improve their capital allocation UX should consider using DeVouch",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks guys! We're hoping the website can inspire other organizations to integrate the DeVouch back-end, anyone looking to improve their capital allocation UX should consider using DeVouch"
    }
   ]
  },
  {
   "id": 4174,
   "type": "message",
   "date": "2024-06-28T21:31:23",
   "date_unixtime": "1719590483",
   "from": "Zemm",
   "from_id": "user1295040743",
   "text": [
    "Not sure we ever rly updated here, but Coodinape built an oracle schema called The Social Oracle (#261 on BASE).  Every time someone sends a GIVE, it is registered there onchain.\n\nTry it out using a ",
    {
     "type": "link",
     "text": "Give.party"
    },
    " like this one, more ways to send GIVE are coming soon.\n\n",
    {
     "type": "link",
     "text": "https://warpcast.com/givebot/0xfe6a7cbc"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Not sure we ever rly updated here, but Coodinape built an oracle schema called The Social Oracle (#261 on BASE).  Every time someone sends a GIVE, it is registered there onchain.\n\nTry it out using a "
    },
    {
     "type": "link",
     "text": "Give.party"
    },
    {
     "type": "plain",
     "text": " like this one, more ways to send GIVE are coming soon.\n\n"
    },
    {
     "type": "link",
     "text": "https://warpcast.com/givebot/0xfe6a7cbc"
    }
   ]
  },
  {
   "id": 4175,
   "type": "service",
   "date": "2024-06-29T02:05:27",
   "date_unixtime": "1719606927",
   "actor": "Gautam Sabhahit || JIffyscan",
   "actor_id": "user1695592356",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4176,
   "type": "message",
   "date": "2024-06-29T02:05:59",
   "date_unixtime": "1719606959",
   "from": "Gautam Sabhahit || JIffyscan",
   "from_id": "user1695592356",
   "reply_to_message_id": 2,
   "text": "is there a base sepolia graphQL api ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "is there a base sepolia graphQL api ?"
    }
   ]
  },
  {
   "id": 4177,
   "type": "message",
   "date": "2024-06-29T02:07:21",
   "date_unixtime": "1719607041",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "link",
     "text": "https://base-sepolia.easscan.org/graphql"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://base-sepolia.easscan.org/graphql"
    }
   ]
  },
  {
   "id": 4178,
   "type": "message",
   "date": "2024-06-29T12:15:40",
   "date_unixtime": "1719643540",
   "from": "Mujahid | Web3",
   "from_id": "user1293976173",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1080,
   "height": 992,
   "text": "Hello builders, I wrote a ERC721  resolver contract, so that before attesting I need to check the token approved for the resolver \n\nAm I correct here...",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello builders, I wrote a ERC721  resolver contract, so that before attesting I need to check the token approved for the resolver \n\nAm I correct here..."
    }
   ]
  },
  {
   "id": 4179,
   "type": "service",
   "date": "2024-06-29T19:13:52",
   "date_unixtime": "1719668632",
   "actor": "Mr.Manav",
   "actor_id": "user1374734517",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4180,
   "type": "message",
   "date": "2024-06-29T19:20:13",
   "date_unixtime": "1719669013",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4178,
   "text": [
    "Check this example: ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts-example/blob/master/contracts/LogResolver.sol"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Check this example: "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts-example/blob/master/contracts/LogResolver.sol"
    }
   ]
  },
  {
   "id": 4181,
   "type": "message",
   "date": "2024-06-29T19:20:28",
   "date_unixtime": "1719669028",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "And in the tests you can see how it’s encoded using the SDK",
   "text_entities": [
    {
     "type": "plain",
     "text": "And in the tests you can see how it’s encoded using the SDK"
    }
   ]
  },
  {
   "id": 4182,
   "type": "message",
   "date": "2024-06-29T22:24:04",
   "date_unixtime": "1719680044",
   "from": "Mujahid | Web3",
   "from_id": "user1293976173",
   "reply_to_message_id": 2,
   "text": "Hey builders, is there any  indexers for base sepolia\n\nI want to fetch Attestations from base sepolia chain",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey builders, is there any  indexers for base sepolia\n\nI want to fetch Attestations from base sepolia chain"
    }
   ]
  },
  {
   "id": 4183,
   "type": "message",
   "date": "2024-06-30T00:27:49",
   "date_unixtime": "1719687469",
   "edited": "2024-06-30T00:30:36",
   "edited_unixtime": "1719687636",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4182,
   "text": [
    {
     "type": "link",
     "text": "https://base-sepolia.easscan.org/graphql"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://base-sepolia.easscan.org/graphql"
    }
   ]
  },
  {
   "id": 4184,
   "type": "service",
   "date": "2024-06-30T01:49:08",
   "date_unixtime": "1719692348",
   "actor": "Kyle",
   "actor_id": "user5284418698",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4185,
   "type": "message",
   "date": "2024-06-30T06:26:54",
   "date_unixtime": "1719709014",
   "from": "Gautam Sabhahit || JIffyscan",
   "from_id": "user1695592356",
   "reply_to_message_id": 2,
   "text": "can we use smart accounts from the AA stack  to attest ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "can we use smart accounts from the AA stack  to attest ?"
    }
   ]
  },
  {
   "id": 4186,
   "type": "message",
   "date": "2024-07-01T01:38:46",
   "date_unixtime": "1719778126",
   "from": "Mayank",
   "from_id": "user1214239978",
   "reply_to_message_id": 2,
   "text": "Can anyone tell me when to give the presentation.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can anyone tell me when to give the presentation."
    }
   ]
  },
  {
   "id": 4187,
   "type": "message",
   "date": "2024-07-01T03:13:30",
   "date_unixtime": "1719783810",
   "edited": "2024-07-01T08:11:21",
   "edited_unixtime": "1719801681",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "text": [
    "Project submitted for the Onchain Summer buildathon!\n\n",
    {
     "type": "link",
     "text": "https://devfolio.co/projects/target-onchain-47c7"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Project submitted for the Onchain Summer buildathon!\n\n"
    },
    {
     "type": "link",
     "text": "https://devfolio.co/projects/target-onchain-47c7"
    }
   ]
  },
  {
   "id": 4188,
   "type": "message",
   "date": "2024-07-01T13:26:37",
   "date_unixtime": "1719820597",
   "edited": "2024-07-01T13:47:33",
   "edited_unixtime": "1719821853",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "text": [
    {
     "type": "link",
     "text": "https://x.com/tantodefi/status/1807684207637897312"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://x.com/tantodefi/status/1807684207637897312"
    }
   ]
  },
  {
   "id": 4189,
   "type": "service",
   "date": "2024-07-01T14:43:43",
   "date_unixtime": "1719825223",
   "actor": "Johny Phan",
   "actor_id": "user385824099",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4190,
   "type": "service",
   "date": "2024-07-01T16:43:43",
   "date_unixtime": "1719832423",
   "actor": "Said",
   "actor_id": "user6269154485",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4191,
   "type": "message",
   "date": "2024-07-01T22:14:24",
   "date_unixtime": "1719852264",
   "from": "Jules I ensō",
   "from_id": "user2096226096",
   "text": "Are there any current projects that provide a comprehensive overview of attestations across multiple applications?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Are there any current projects that provide a comprehensive overview of attestations across multiple applications?"
    }
   ]
  },
  {
   "id": 4192,
   "type": "message",
   "date": "2024-07-01T22:23:39",
   "date_unixtime": "1719852819",
   "edited": "2024-07-02T00:20:38",
   "edited_unixtime": "1719859838",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4191,
   "text": [
    "This is the best explanation video i found and should get you from 0 to your first schema + attestation\n ",
    {
     "type": "link",
     "text": "https://youtu.be/DMGj5GNll0k?si=EXuvfCFFF6A-Mu4m"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "This is the best explanation video i found and should get you from 0 to your first schema + attestation\n "
    },
    {
     "type": "link",
     "text": "https://youtu.be/DMGj5GNll0k?si=EXuvfCFFF6A-Mu4m"
    }
   ]
  },
  {
   "id": 4193,
   "type": "message",
   "date": "2024-07-02T03:27:18",
   "date_unixtime": "1719871038",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 1913,
   "text": "hi eas team, I'm getting a similar failure as this and i believe my resolver contract is set up fine. can i get some help with figuring out what the issue is?",
   "text_entities": [
    {
     "type": "plain",
     "text": "hi eas team, I'm getting a similar failure as this and i believe my resolver contract is set up fine. can i get some help with figuring out what the issue is?"
    }
   ]
  },
  {
   "id": 4194,
   "type": "message",
   "date": "2024-07-02T03:31:32",
   "date_unixtime": "1719871292",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4193,
   "text": "Make sure that you are using the latest SDK. There were backward compatibility bugs that resulted in these errors",
   "text_entities": [
    {
     "type": "plain",
     "text": "Make sure that you are using the latest SDK. There were backward compatibility bugs that resulted in these errors"
    }
   ]
  },
  {
   "id": 4195,
   "type": "message",
   "date": "2024-07-02T03:36:52",
   "date_unixtime": "1719871612",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4186,
   "text": "Please submit your project on Devfolio with a video!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Please submit your project on Devfolio with a video!"
    }
   ]
  },
  {
   "id": 4196,
   "type": "message",
   "date": "2024-07-02T03:53:24",
   "date_unixtime": "1719872604",
   "from": "kourtney | Rituals",
   "from_id": "user5163532648",
   "reply_to_message_id": 4194,
   "text": "i'm on the latest sdk",
   "text_entities": [
    {
     "type": "plain",
     "text": "i'm on the latest sdk"
    }
   ]
  },
  {
   "id": 4197,
   "type": "message",
   "date": "2024-07-02T03:54:07",
   "date_unixtime": "1719872647",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4196,
   "text": "Can you share your code?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Can you share your code?"
    }
   ]
  },
  {
   "id": 4199,
   "type": "message",
   "date": "2024-07-02T03:55:07",
   "date_unixtime": "1719872707",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Your verifier might be rejecting it",
   "text_entities": [
    {
     "type": "plain",
     "text": "Your verifier might be rejecting it"
    }
   ]
  },
  {
   "id": 4200,
   "type": "message",
   "date": "2024-07-02T03:55:22",
   "date_unixtime": "1719872722",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "You can try this with a schema without a verifier",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can try this with a schema without a verifier"
    }
   ]
  },
  {
   "id": 4201,
   "type": "message",
   "date": "2024-07-02T06:00:07",
   "date_unixtime": "1719880207",
   "from": "Mati",
   "from_id": "user779313202",
   "reply_to_message_id": 2,
   "text": [
    "Hi guys!\nJust starting with EAS, and so far, I'm fascinated! I was wondering how I can fetch all attestations under a certain schema (similar to how you can see all attestations of a schema here ",
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestations/forSchema/0xd83994d5459162a259c3a18d3db267ca05982f1e1e261d5388a8bfe2a2a2c7f9"
    },
    " for example)."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi guys!\nJust starting with EAS, and so far, I'm fascinated! I was wondering how I can fetch all attestations under a certain schema (similar to how you can see all attestations of a schema here "
    },
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestations/forSchema/0xd83994d5459162a259c3a18d3db267ca05982f1e1e261d5388a8bfe2a2a2c7f9"
    },
    {
     "type": "plain",
     "text": " for example)."
    }
   ]
  },
  {
   "id": 4202,
   "type": "message",
   "date": "2024-07-02T06:06:39",
   "date_unixtime": "1719880599",
   "edited": "2024-07-02T22:47:34",
   "edited_unixtime": "1719940654",
   "from": "Mayank",
   "from_id": "user1214239978",
   "reply_to_message_id": 4195,
   "text": "Submitted",
   "text_entities": [
    {
     "type": "plain",
     "text": "Submitted"
    }
   ]
  },
  {
   "id": 4203,
   "type": "message",
   "date": "2024-07-02T09:28:00",
   "date_unixtime": "1719892680",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 2,
   "text": "Hi, is there any information about signing batching? Thinking of having a single attestation with []tuple data but it would be impossible to revoke parts of it.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi, is there any information about signing batching? Thinking of having a single attestation with []tuple data but it would be impossible to revoke parts of it."
    }
   ]
  },
  {
   "id": 4204,
   "type": "message",
   "date": "2024-07-02T14:16:30",
   "date_unixtime": "1719909990",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    " Hey Steve, this is what I meant by \"where's the best place to ask\" the other day. Whether it's eth stackexchange, or normal stackoverflow, or somewhere else. Getting help has seemed to have become fragmented in blockchain land, with Discord, two stacks, private TG channels, dedicated forums. It's a shame because SO had solved this problem to the benefit of all developers, and tbh, mankind.\n\n",
    {
     "type": "link",
     "text": "https://ethereum.stackexchange.com/questions/164479/sign-in-with-ethereum-and-account-abstraction"
    }
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    {
     "type": "plain",
     "text": " Hey Steve, this is what I meant by \"where's the best place to ask\" the other day. Whether it's eth stackexchange, or normal stackoverflow, or somewhere else. Getting help has seemed to have become fragmented in blockchain land, with Discord, two stacks, private TG channels, dedicated forums. It's a shame because SO had solved this problem to the benefit of all developers, and tbh, mankind.\n\n"
    },
    {
     "type": "link",
     "text": "https://ethereum.stackexchange.com/questions/164479/sign-in-with-ethereum-and-account-abstraction"
    }
   ]
  },
  {
   "id": 4205,
   "type": "service",
   "date": "2024-07-02T15:11:52",
   "date_unixtime": "1719913312",
   "actor": "80726 Vince",
   "actor_id": "user989981110",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4206,
   "type": "message",
   "date": "2024-07-02T15:22:38",
   "date_unixtime": "1719913958",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 2,
   "text": "Hi everyone\nReally cool project but I can't figure out if I can create an attestation and add records to it.\nI mean that i have several fields but I may need to create another record to write the value later. And I would like to have the same attestation ID.\nThe aim would be that when reading, I would see only the last value of a field and not the previous values.\nIt is a way to update an attestation, but keeping the same ID.\nIs EAS capable of that?\nIf not, any idea or suggestion?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi everyone\nReally cool project but I can't figure out if I can create an attestation and add records to it.\nI mean that i have several fields but I may need to create another record to write the value later. And I would like to have the same attestation ID.\nThe aim would be that when reading, I would see only the last value of a field and not the previous values.\nIt is a way to update an attestation, but keeping the same ID.\nIs EAS capable of that?\nIf not, any idea or suggestion?"
    }
   ]
  },
  {
   "id": 4207,
   "type": "message",
   "date": "2024-07-02T15:25:04",
   "date_unixtime": "1719914104",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "I think this is fundamentally antithetical to the idea of the service. The attestation is an immutable group of data and indeed it's ID is the hash of the attestaton data.\n\nYou can, however, make a second attestation that refers to the first.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I think this is fundamentally antithetical to the idea of the service. The attestation is an immutable group of data and indeed it's ID is the hash of the attestaton data.\n\nYou can, however, make a second attestation that refers to the first."
    }
   ]
  },
  {
   "id": 4208,
   "type": "message",
   "date": "2024-07-02T15:27:40",
   "date_unixtime": "1719914260",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 4207,
   "text": "Oh, I see. Makes sense. Thank you",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh, I see. Makes sense. Thank you"
    }
   ]
  },
  {
   "id": 4209,
   "type": "message",
   "date": "2024-07-02T15:58:12",
   "date_unixtime": "1719916092",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 2,
   "text": "And does it make sense to expect EAS on Polygon?",
   "text_entities": [
    {
     "type": "plain",
     "text": "And does it make sense to expect EAS on Polygon?"
    }
   ]
  },
  {
   "id": 4210,
   "type": "message",
   "date": "2024-07-02T16:32:27",
   "date_unixtime": "1719918147",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts"
    }
   ]
  },
  {
   "id": 4211,
   "type": "message",
   "date": "2024-07-02T16:33:00",
   "date_unixtime": "1719918180",
   "from": "Luke Puplett",
   "from_id": "user6199384871",
   "reply_to_message_id": 2,
   "text": "That page lists all the deployments. Btw, I am not affiliated with the EAS team. I just spent a lot of time researching 🙂",
   "text_entities": [
    {
     "type": "plain",
     "text": "That page lists all the deployments. Btw, I am not affiliated with the EAS team. I just spent a lot of time researching 🙂"
    }
   ]
  },
  {
   "id": 4212,
   "type": "message",
   "date": "2024-07-02T16:45:31",
   "date_unixtime": "1719918931",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 2,
   "text": [
    "Ok, then thank you so much Luke.\nThe github page you show is in fact 2 months old but more recent than ",
    {
     "type": "link",
     "text": "docs.attest.org"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Ok, then thank you so much Luke.\nThe github page you show is in fact 2 months old but more recent than "
    },
    {
     "type": "link",
     "text": "docs.attest.org"
    }
   ]
  },
  {
   "id": 4213,
   "type": "message",
   "date": "2024-07-02T18:41:58",
   "date_unixtime": "1719925918",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": [
    "I would like to have something like ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-indexing-service"
    },
    " but for offchain attesations.\n\n- Have a local DB with all the offchain attestations\n- Update the local DB when new offchain attestations are found\n\nBefore diving into develop anything by myself, do you have any suggestions or recommendations on how I could achieve this?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I would like to have something like "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-indexing-service"
    },
    {
     "type": "plain",
     "text": " but for offchain attesations.\n\n- Have a local DB with all the offchain attestations\n- Update the local DB when new offchain attestations are found\n\nBefore diving into develop anything by myself, do you have any suggestions or recommendations on how I could achieve this?"
    }
   ]
  },
  {
   "id": 4214,
   "type": "message",
   "date": "2024-07-03T03:57:49",
   "date_unixtime": "1719959269",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 2,
   "text": "😔",
   "text_entities": [
    {
     "type": "plain",
     "text": "😔"
    }
   ]
  },
  {
   "id": 4215,
   "type": "message",
   "date": "2024-07-03T04:35:47",
   "date_unixtime": "1719961547",
   "edited": "2024-07-03T04:43:24",
   "edited_unixtime": "1719962004",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4213,
   "text": [
    "You can use something like Ceramic to store and distribute your offchain attestations. ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/ceramic-storage#ceramic-as-a-data-ledger"
    },
    "."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "You can use something like Ceramic to store and distribute your offchain attestations. "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/ceramic-storage#ceramic-as-a-data-ledger"
    },
    {
     "type": "plain",
     "text": "."
    }
   ]
  },
  {
   "id": 4216,
   "type": "message",
   "date": "2024-07-03T04:37:40",
   "date_unixtime": "1719961660",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 4215,
   "text": "Perfect. Thanks Steve!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Perfect. Thanks Steve!"
    }
   ]
  },
  {
   "id": 4217,
   "type": "message",
   "date": "2024-07-03T12:00:04",
   "date_unixtime": "1719988204",
   "edited": "2024-07-03T12:05:31",
   "edited_unixtime": "1719988531",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 4207,
   "text": "I understand that you say that. I didn't know how to phrase it.\nI am digging the fact that we can reference attestations, it is almost like a chain of attestations and some can be offchain.\nAll that enables some interesting use cases, I am sure.\nSadly, this aspect is not well \"documented\" or researched publicly. It could help to have a bit more litterature on the potential of the technology.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I understand that you say that. I didn't know how to phrase it.\nI am digging the fact that we can reference attestations, it is almost like a chain of attestations and some can be offchain.\nAll that enables some interesting use cases, I am sure.\nSadly, this aspect is not well \"documented\" or researched publicly. It could help to have a bit more litterature on the potential of the technology."
    }
   ]
  },
  {
   "id": 4218,
   "type": "message",
   "date": "2024-07-03T12:03:17",
   "date_unixtime": "1719988397",
   "edited": "2024-07-03T12:05:49",
   "edited_unixtime": "1719988549",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Is there any hackathon about EAS?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is there any hackathon about EAS?"
    }
   ]
  },
  {
   "id": 4219,
   "type": "message",
   "date": "2024-07-03T12:03:46",
   "date_unixtime": "1719988426",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Oh, there was one in Honduras in March...",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh, there was one in Honduras in March..."
    }
   ]
  },
  {
   "id": 4220,
   "type": "message",
   "date": "2024-07-03T12:08:35",
   "date_unixtime": "1719988715",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Oh, and EAS attestation summer finishes today!\nOk, nevermind...",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh, and EAS attestation summer finishes today!\nOk, nevermind..."
    }
   ]
  },
  {
   "id": 4221,
   "type": "service",
   "date": "2024-07-03T15:50:04",
   "date_unixtime": "1720002004",
   "actor": "sepehr ❄️",
   "actor_id": "user542965396",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4222,
   "type": "service",
   "date": "2024-07-03T16:15:15",
   "date_unixtime": "1720003515",
   "actor": "Daniel Ospina",
   "actor_id": "user551595722",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4223,
   "type": "service",
   "date": "2024-07-03T16:15:45",
   "date_unixtime": "1720003545",
   "actor": "Daniel Ospina",
   "actor_id": "user551595722",
   "action": "invite_members",
   "members": [
    "Cyrille"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4224,
   "type": "message",
   "date": "2024-07-04T08:45:54",
   "date_unixtime": "1720062954",
   "from": "Johny Phan",
   "from_id": "user385824099",
   "reply_to_message_id": 2,
   "text": "I want to build custom Resolver Contract for our Schema. I do not know how to decode data from Attestation? Plz help me",
   "text_entities": [
    {
     "type": "plain",
     "text": "I want to build custom Resolver Contract for our Schema. I do not know how to decode data from Attestation? Plz help me"
    }
   ]
  },
  {
   "id": 4225,
   "type": "message",
   "date": "2024-07-04T08:47:17",
   "date_unixtime": "1720063037",
   "from": "DinN",
   "from_id": "user2139299034",
   "text": "So cute",
   "text_entities": [
    {
     "type": "plain",
     "text": "So cute"
    }
   ]
  },
  {
   "id": 4226,
   "type": "message",
   "date": "2024-07-04T08:50:35",
   "date_unixtime": "1720063235",
   "edited": "2024-07-04T22:36:17",
   "edited_unixtime": "1720112777",
   "from": "Mujahid | Web3",
   "from_id": "user1293976173",
   "reply_to_message_id": 4224,
   "text": [
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts-example/blob/master/contracts/LogResolver.sol"
    },
    "\n\nYou can refer to this"
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts-example/blob/master/contracts/LogResolver.sol"
    },
    {
     "type": "plain",
     "text": "\n\nYou can refer to this"
    }
   ]
  },
  {
   "id": 4227,
   "type": "message",
   "date": "2024-07-04T08:58:21",
   "date_unixtime": "1720063701",
   "from": "Johny Phan",
   "from_id": "user385824099",
   "reply_to_message_id": 2,
   "text": "If I use the eas-sdk to encode data and attest, It still use Abi.decode to decode data from Attestation?",
   "text_entities": [
    {
     "type": "plain",
     "text": "If I use the eas-sdk to encode data and attest, It still use Abi.decode to decode data from Attestation?"
    }
   ]
  },
  {
   "id": 4228,
   "type": "message",
   "date": "2024-07-04T09:03:45",
   "date_unixtime": "1720064025",
   "from": "Johny Phan",
   "from_id": "user385824099",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1050,
   "height": 220,
   "text": "This is my encode use SDK",
   "text_entities": [
    {
     "type": "plain",
     "text": "This is my encode use SDK"
    }
   ]
  },
  {
   "id": 4229,
   "type": "message",
   "date": "2024-07-04T09:04:04",
   "date_unixtime": "1720064044",
   "from": "Johny Phan",
   "from_id": "user385824099",
   "reply_to_message_id": 2,
   "text": "How to decode on Resolver by solidity?",
   "text_entities": [
    {
     "type": "plain",
     "text": "How to decode on Resolver by solidity?"
    }
   ]
  },
  {
   "id": 4230,
   "type": "message",
   "date": "2024-07-04T09:06:32",
   "date_unixtime": "1720064192",
   "from": "Mujahid | Web3",
   "from_id": "user1293976173",
   "reply_to_message_id": 4229,
   "text": "Check the LogResolver contract here, you can use abi.decode to fetch encoded data",
   "text_entities": [
    {
     "type": "plain",
     "text": "Check the LogResolver contract here, you can use abi.decode to fetch encoded data"
    }
   ]
  },
  {
   "id": 4231,
   "type": "message",
   "date": "2024-07-04T09:08:17",
   "date_unixtime": "1720064297",
   "from": "Mujahid | Web3",
   "from_id": "user1293976173",
   "reply_to_message_id": 4228,
   "text": [
    "To fetch verify address you can try like (,address fetaddress,)=abi.decode(",
    {
     "type": "link",
     "text": "attestation.data"
    },
    ",(uint256,address,uint8))"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "To fetch verify address you can try like (,address fetaddress,)=abi.decode("
    },
    {
     "type": "link",
     "text": "attestation.data"
    },
    {
     "type": "plain",
     "text": ",(uint256,address,uint8))"
    }
   ]
  },
  {
   "id": 4232,
   "type": "message",
   "date": "2024-07-04T09:09:42",
   "date_unixtime": "1720064382",
   "edited": "2024-07-04T10:18:49",
   "edited_unixtime": "1720068529",
   "from": "Johny Phan",
   "from_id": "user385824099",
   "reply_to_message_id": 2,
   "text": "Thank you so much, I will try it",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you so much, I will try it"
    }
   ]
  },
  {
   "id": 4233,
   "type": "message",
   "date": "2024-07-04T10:55:30",
   "date_unixtime": "1720070730",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "text": "Hey im wondering if someone from EAS can help me\n\nMy team submitted a project for attestation summer on devfolio and because we submitted we cant update our teams members - can someone help me or is there someone at devfolio i can contact?\n\nThanks in advance 🙏",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey im wondering if someone from EAS can help me\n\nMy team submitted a project for attestation summer on devfolio and because we submitted we cant update our teams members - can someone help me or is there someone at devfolio i can contact?\n\nThanks in advance 🙏"
    }
   ]
  },
  {
   "id": 4234,
   "type": "message",
   "date": "2024-07-04T11:06:47",
   "date_unixtime": "1720071407",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4220,
   "text": "its extended for 4 days i think",
   "text_entities": [
    {
     "type": "plain",
     "text": "its extended for 4 days i think"
    }
   ]
  },
  {
   "id": 4235,
   "type": "message",
   "date": "2024-07-04T14:05:28",
   "date_unixtime": "1720082128",
   "edited": "2024-07-04T17:59:05",
   "edited_unixtime": "1720096145",
   "from": "Preet Parekh",
   "from_id": "user545669912",
   "text": [
    {
     "type": "mention",
     "text": "@Tantodefi"
    },
    " could you DM me or send an email to ",
    {
     "type": "email",
     "text": "hello@devfolio.co"
    },
    " we’ll take it from there 🙌"
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@Tantodefi"
    },
    {
     "type": "plain",
     "text": " could you DM me or send an email to "
    },
    {
     "type": "email",
     "text": "hello@devfolio.co"
    },
    {
     "type": "plain",
     "text": " we’ll take it from there 🙌"
    }
   ]
  },
  {
   "id": 4236,
   "type": "message",
   "date": "2024-07-04T22:56:48",
   "date_unixtime": "1720114008",
   "edited": "2024-07-05T00:02:37",
   "edited_unixtime": "1720117957",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Hey everyone, we'll make an official announcement soon but the EAS Attestation Summer is open until July 7th. Then we'll close it and award the winners. This will piggyback into the Build program which starts July 8th. The build program is a way for existing or new builders to keep building this summer!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey everyone, we'll make an official announcement soon but the EAS Attestation Summer is open until July 7th. Then we'll close it and award the winners. This will piggyback into the Build program which starts July 8th. The build program is a way for existing or new builders to keep building this summer!"
    }
   ]
  },
  {
   "id": 4237,
   "type": "message",
   "date": "2024-07-04T23:02:12",
   "date_unixtime": "1720114332",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Make sure you apply to Build before the 7th",
   "text_entities": [
    {
     "type": "plain",
     "text": "Make sure you apply to Build before the 7th"
    }
   ]
  },
  {
   "id": 4238,
   "type": "message",
   "date": "2024-07-04T23:02:12",
   "date_unixtime": "1720114332",
   "edited": "2024-07-05T06:44:21",
   "edited_unixtime": "1720142061",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    {
     "type": "link",
     "text": "https://x.com/withBackdrop/status/1801662596359327870"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://x.com/withBackdrop/status/1801662596359327870"
    }
   ]
  },
  {
   "id": 4239,
   "type": "message",
   "date": "2024-07-05T00:49:29",
   "date_unixtime": "1720120769",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4237,
   "text": "I already applied on behalf of my team - do they need to apply individually too?",
   "text_entities": [
    {
     "type": "plain",
     "text": "I already applied on behalf of my team - do they need to apply individually too?"
    }
   ]
  },
  {
   "id": 4240,
   "type": "message",
   "date": "2024-07-05T01:01:04",
   "date_unixtime": "1720121464",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Nope! Just one project per team is great.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Nope! Just one project per team is great."
    }
   ]
  },
  {
   "id": 4241,
   "type": "message",
   "date": "2024-07-05T11:49:45",
   "date_unixtime": "1720160385",
   "edited": "2024-07-05T13:31:28",
   "edited_unixtime": "1720166488",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 4240,
   "text": "Working on the next set of features for C–ATTS. Build program open only for projects just starting up or also for projects already in the middle of building?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Working on the next set of features for C–ATTS. Build program open only for projects just starting up or also for projects already in the middle of building?"
    }
   ]
  },
  {
   "id": 4242,
   "type": "message",
   "date": "2024-07-05T19:28:38",
   "date_unixtime": "1720187918",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "reply_to_message_id": 2,
   "text": "Hey everyone,\n\nIs it possible to enable people to sign an onchain attestation (delegated and gas-sponsored) using Sign In With Farcaster?\n\nThe idea is that a person would authenticate by signing in with their Farcaster wallet. After that, they could provide a signature that's used for a delegated attestation.\n\nThanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey everyone,\n\nIs it possible to enable people to sign an onchain attestation (delegated and gas-sponsored) using Sign In With Farcaster?\n\nThe idea is that a person would authenticate by signing in with their Farcaster wallet. After that, they could provide a signature that's used for a delegated attestation.\n\nThanks!"
    }
   ]
  },
  {
   "id": 4243,
   "type": "message",
   "date": "2024-07-05T19:49:08",
   "date_unixtime": "1720189148",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4242,
   "text": "Ya ofcourse farcaster is just another kind of siwe / basically a wallet provider as far as complexity of integrating",
   "text_entities": [
    {
     "type": "plain",
     "text": "Ya ofcourse farcaster is just another kind of siwe / basically a wallet provider as far as complexity of integrating"
    }
   ]
  },
  {
   "id": 4244,
   "type": "message",
   "date": "2024-07-05T20:03:02",
   "date_unixtime": "1720189982",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "reply_to_message_id": 4243,
   "text": "Nice! Do you know of an open source repo that shows how to do it with eas? Will figure it out myself otherwise but would give me a nice headstart",
   "text_entities": [
    {
     "type": "plain",
     "text": "Nice! Do you know of an open source repo that shows how to do it with eas? Will figure it out myself otherwise but would give me a nice headstart"
    }
   ]
  },
  {
   "id": 4246,
   "type": "message",
   "date": "2024-07-06T01:12:30",
   "date_unixtime": "1720208550",
   "from": "LauNaMu",
   "from_id": "user1099060436",
   "reply_to_message_id": 2,
   "text": [
    "Hey, is anyone else having an issue with ",
    {
     "type": "link",
     "text": "https://optimism.easscan.org"
    },
    "? It marks an error when I try to load it"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey, is anyone else having an issue with "
    },
    {
     "type": "link",
     "text": "https://optimism.easscan.org"
    },
    {
     "type": "plain",
     "text": "? It marks an error when I try to load it"
    }
   ]
  },
  {
   "id": 4247,
   "type": "message",
   "date": "2024-07-06T01:16:58",
   "date_unixtime": "1720208818",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4246,
   "text": "No issues here",
   "text_entities": [
    {
     "type": "plain",
     "text": "No issues here"
    }
   ]
  },
  {
   "id": 4248,
   "type": "message",
   "date": "2024-07-06T01:17:11",
   "date_unixtime": "1720208831",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "Does it happen on cell network as well?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Does it happen on cell network as well?"
    }
   ]
  },
  {
   "id": 4249,
   "type": "message",
   "date": "2024-07-06T01:18:11",
   "date_unixtime": "1720208891",
   "from": "LauNaMu",
   "from_id": "user1099060436",
   "reply_to_message_id": 4248,
   "text": "Yes both on mobile and desktop",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes both on mobile and desktop"
    }
   ]
  },
  {
   "id": 4250,
   "type": "message",
   "date": "2024-07-06T01:18:16",
   "date_unixtime": "1720208896",
   "from": "LauNaMu",
   "from_id": "user1099060436",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1170,
   "height": 1226,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4251,
   "type": "message",
   "date": "2024-07-06T01:18:52",
   "date_unixtime": "1720208932",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4250,
   "text": "Is that on WiFi or mobile network?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is that on WiFi or mobile network?"
    }
   ]
  },
  {
   "id": 4252,
   "type": "message",
   "date": "2024-07-06T01:22:42",
   "date_unixtime": "1720209162",
   "edited": "2024-07-06T01:40:27",
   "edited_unixtime": "1720210227",
   "from": "LauNaMu",
   "from_id": "user1099060436",
   "reply_to_message_id": 2,
   "text": "Oh you’re right! It was wifi, in cell phone network it does work.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh you’re right! It was wifi, in cell phone network it does work."
    }
   ]
  },
  {
   "id": 4253,
   "type": "message",
   "date": "2024-07-06T01:23:50",
   "date_unixtime": "1720209230",
   "edited": "2024-07-06T15:23:52",
   "edited_unixtime": "1720259632",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4244,
   "text": [
    "Not off the top of my head no tbh -\nframes + eas integration is that new new\n\nOne of our branches in our project will have eas + frames integrated for receipts but the attestation happens in background: ",
    {
     "type": "link",
     "text": "https://devfolio.co/projects/frames-easy-bb9b"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Not off the top of my head no tbh -\nframes + eas integration is that new new\n\nOne of our branches in our project will have eas + frames integrated for receipts but the attestation happens in background: "
    },
    {
     "type": "link",
     "text": "https://devfolio.co/projects/frames-easy-bb9b"
    }
   ]
  },
  {
   "id": 4254,
   "type": "service",
   "date": "2024-07-06T12:11:44",
   "date_unixtime": "1720248104",
   "actor": "Mehmet",
   "actor_id": "user1068935181",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4255,
   "type": "service",
   "date": "2024-07-06T18:07:15",
   "date_unixtime": "1720269435",
   "actor": "Deepak Rathore",
   "actor_id": "user1078242931",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4256,
   "type": "message",
   "date": "2024-07-06T18:13:44",
   "date_unixtime": "1720269824",
   "edited": "2024-07-08T10:58:57",
   "edited_unixtime": "1720416537",
   "from": "Deepak Rathore",
   "from_id": "user1078242931",
   "text": [
    "Hello all EAS enthusiasts,\n\nI just submitted my project for the EAS Attestation Summer and wanted to share it with everyone. What do you guys think about the idea and the use case? I would like to hear from anyone. I personally believe the idea I am trying to achieve can have many hurdles, but if implemented, it could be more than beneficial to the community.\n\n",
    {
     "type": "link",
     "text": "https://devfolio.co/projects/token-resurrection-f1cc"
    },
    "\n\n",
    {
     "type": "link",
     "text": "https://warpcast.com/psydux/0xa50f54ec"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello all EAS enthusiasts,\n\nI just submitted my project for the EAS Attestation Summer and wanted to share it with everyone. What do you guys think about the idea and the use case? I would like to hear from anyone. I personally believe the idea I am trying to achieve can have many hurdles, but if implemented, it could be more than beneficial to the community.\n\n"
    },
    {
     "type": "link",
     "text": "https://devfolio.co/projects/token-resurrection-f1cc"
    },
    {
     "type": "plain",
     "text": "\n\n"
    },
    {
     "type": "link",
     "text": "https://warpcast.com/psydux/0xa50f54ec"
    }
   ]
  },
  {
   "id": 4257,
   "type": "message",
   "date": "2024-07-06T19:59:34",
   "date_unixtime": "1720276174",
   "edited": "2024-07-08T11:37:44",
   "edited_unixtime": "1720418864",
   "from": "Mujahid | Web3",
   "from_id": "user1293976173",
   "text": [
    "Hey builders,\n\nThis is Mujahid from Hyderabad, India. For this Onchain Summer Hack, I have built a fully onchain project called NounShards, enabled by EAS on Base. NounShards facilitates the tokenization of digital assets like NFTs for greater utility.\n\nCheck out my latest tweet to learn more about my project: ",
    {
     "type": "link",
     "text": "https://x.com/muja002/status/1808459343643226261"
    },
    "\n\nProject: ",
    {
     "type": "link",
     "text": "https://devfolio.co/projects/nounshards-d0d5"
    },
    "\n\n Your feedback is valuable to me 🤠"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey builders,\n\nThis is Mujahid from Hyderabad, India. For this Onchain Summer Hack, I have built a fully onchain project called NounShards, enabled by EAS on Base. NounShards facilitates the tokenization of digital assets like NFTs for greater utility.\n\nCheck out my latest tweet to learn more about my project: "
    },
    {
     "type": "link",
     "text": "https://x.com/muja002/status/1808459343643226261"
    },
    {
     "type": "plain",
     "text": "\n\nProject: "
    },
    {
     "type": "link",
     "text": "https://devfolio.co/projects/nounshards-d0d5"
    },
    {
     "type": "plain",
     "text": "\n\n Your feedback is valuable to me 🤠"
    }
   ]
  },
  {
   "id": 4258,
   "type": "service",
   "date": "2024-07-07T12:10:01",
   "date_unixtime": "1720334401",
   "actor": "Mento San",
   "actor_id": "user1375198418",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4259,
   "type": "message",
   "date": "2024-07-07T12:15:51",
   "date_unixtime": "1720334751",
   "from": "Mento San",
   "from_id": "user1375198418",
   "reply_to_message_id": 2,
   "text": "Hi everybody! I also have problems with the ssl on all easscan. org domains",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi everybody! I also have problems with the ssl on all easscan. org domains"
    }
   ]
  },
  {
   "id": 4260,
   "type": "message",
   "date": "2024-07-07T12:15:54",
   "date_unixtime": "1720334754",
   "from": "Mento San",
   "from_id": "user1375198418",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 666,
   "height": 862,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4261,
   "type": "message",
   "date": "2024-07-07T14:36:36",
   "date_unixtime": "1720343196",
   "from": "Mento San",
   "from_id": "user1375198418",
   "reply_to_message_id": 2,
   "text": [
    "is there a github repo / gist for this tutorial ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/private-data-attestations"
    },
    "?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "is there a github repo / gist for this tutorial "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/private-data-attestations"
    },
    {
     "type": "plain",
     "text": "?"
    }
   ]
  },
  {
   "id": 4262,
   "type": "message",
   "date": "2024-07-07T14:38:10",
   "date_unixtime": "1720343290",
   "from": "Mento San",
   "from_id": "user1375198418",
   "reply_to_message_id": 2,
   "text": "my main concern is how to create a proof with just knowing just a key-value pair out of many",
   "text_entities": [
    {
     "type": "plain",
     "text": "my main concern is how to create a proof with just knowing just a key-value pair out of many"
    }
   ]
  },
  {
   "id": 4263,
   "type": "message",
   "date": "2024-07-07T15:16:19",
   "date_unixtime": "1720345579",
   "edited": "2024-07-08T19:12:50",
   "edited_unixtime": "1720446170",
   "from": null,
   "from_id": "user319932362",
   "reply_to_message_id": 2,
   "text": "OZ's standard merkle tree supports getting multi proof by value and index",
   "text_entities": [
    {
     "type": "plain",
     "text": "OZ's standard merkle tree supports getting multi proof by value and index"
    }
   ]
  },
  {
   "id": 4264,
   "type": "service",
   "date": "2024-07-08T12:33:43",
   "date_unixtime": "1720422223",
   "actor": "Jordan P",
   "actor_id": "user6235987323",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4265,
   "type": "message",
   "date": "2024-07-08T12:39:52",
   "date_unixtime": "1720422592",
   "from": "Jordan P",
   "from_id": "user6235987323",
   "reply_to_message_id": 2,
   "text": "Hi! Had a group project that was drafted and supposed to be submitted to the EAS hackathon but didn't realise the \"Submit project for judging\" requirement until it said we \"Missed\" the deadline. 🤦‍♂️\n\nIs there any chance we could get \"Cherry\" application applicable for judging? It's already drafted and submission ready.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi! Had a group project that was drafted and supposed to be submitted to the EAS hackathon but didn't realise the \"Submit project for judging\" requirement until it said we \"Missed\" the deadline. 🤦‍♂️\n\nIs there any chance we could get \"Cherry\" application applicable for judging? It's already drafted and submission ready."
    }
   ]
  },
  {
   "id": 4266,
   "type": "message",
   "date": "2024-07-08T12:39:53",
   "date_unixtime": "1720422593",
   "edited": "2024-07-08T15:16:59",
   "edited_unixtime": "1720432019",
   "from": "Jordan P",
   "from_id": "user6235987323",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1080,
   "height": 1216,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4267,
   "type": "message",
   "date": "2024-07-08T12:45:04",
   "date_unixtime": "1720422904",
   "edited": "2024-07-08T15:16:50",
   "edited_unixtime": "1720432010",
   "from": "Jordan P",
   "from_id": "user6235987323",
   "forwarded_from": "Jordan P",
   "text": "Hi! Had a group project that was drafted and supposed to be submitted to the EAS hackathon but didn't realise the \"Submit project for judging\" requirement until it said we \"Missed\" the deadline. 🤦‍♂️\n\nIs there any chance we could get \"Cherry\" application applicable for judging? It's already drafted and submission ready.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi! Had a group project that was drafted and supposed to be submitted to the EAS hackathon but didn't realise the \"Submit project for judging\" requirement until it said we \"Missed\" the deadline. 🤦‍♂️\n\nIs there any chance we could get \"Cherry\" application applicable for judging? It's already drafted and submission ready."
    }
   ]
  },
  {
   "id": 4268,
   "type": "message",
   "date": "2024-07-08T19:15:57",
   "date_unixtime": "1720446357",
   "from": "Mento San",
   "from_id": "user1375198418",
   "reply_to_message_id": 2,
   "text": [
    "hi all. eas-sdk does not seem to export MerkleValue and PrivateData types anymore but are used in the example provided for attestation with private data: ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-sdk?tab=readme-ov-file#example-creating-an-attestation-with-private-data"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "hi all. eas-sdk does not seem to export MerkleValue and PrivateData types anymore but are used in the example provided for attestation with private data: "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-sdk?tab=readme-ov-file#example-creating-an-attestation-with-private-data"
    }
   ]
  },
  {
   "id": 4269,
   "type": "message",
   "date": "2024-07-08T19:17:02",
   "date_unixtime": "1720446422",
   "edited": "2024-07-08T19:17:14",
   "edited_unixtime": "1720446434",
   "from": "Mento San",
   "from_id": "user1375198418",
   "reply_to_message_id": 2,
   "text": "I tried also older versions until 1.1.2 but thise types/classes are not there either",
   "text_entities": [
    {
     "type": "plain",
     "text": "I tried also older versions until 1.1.2 but thise types/classes are not there either"
    }
   ]
  },
  {
   "id": 4270,
   "type": "message",
   "date": "2024-07-08T22:20:09",
   "date_unixtime": "1720457409",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4268,
   "text": "Oh, you're right. Fixing and publishing as 2.4.1 soon.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Oh, you're right. Fixing and publishing as 2.4.1 soon."
    }
   ]
  },
  {
   "id": 4271,
   "type": "message",
   "date": "2024-07-08T23:03:17",
   "date_unixtime": "1720459997",
   "from": "Rascar",
   "from_id": "user1013433535",
   "reply_to_message_id": 2,
   "text": [
    "Hello guys. I am trying to intereact with the attest function directly from the frontend, but when trying to encode the ",
    {
     "type": "code",
     "text": "data"
    },
    " to bytes32 I am getting an error. How do you guys recommend encoding it?\n\n*Error I am getting:* ",
    {
     "type": "code",
     "text": "Argument of type 'string' is not assignable to parameter of type '`0x${string}"
    },
    "'.`\n* Snippet code:*\n\n",
    {
     "type": "pre",
     "text": " typescript\nconst handleAttest = async () => {\n    const schema =\n      \"0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995\"; //Temporary hardcoded\n\n    const abiCoder = new ethers.utils.AbiCoder();\n\n    const bytes32Data = ethers.utils.formatBytes32String(\"checked-in\");\n\n    const attestationRequestData = {\n      recipient: \"07231e0fd9F668d4aaFaE7A5D5f432B8E6e4Fe51\" as `0x${string}`, //Temporary hardcoded\n      expirationTime: BigInt(0),\n      revocable: false,\n      refUID: \"0x0\" as `0x${string}`,\n      data: bytes32Data,\n      value: BigInt(0),\n    };\n\n    const configurations = {\n      walletClient: {},\n      chain: 1,\n    };\n\n    try {\n      const transactionReceipt = await submitAttest(\n        schema,\n        attestationRequestData.recipient,\n        attestationRequestData.expirationTime,\n        attestationRequestData.revocable,\n        attestationRequestData.refUID,\n        attestationRequestData.data,\n        attestationRequestData.value,\n        configurations,\n",
     "language": "typescript"
    },
    " \n\n*stack:* \nethers v5.7.0\nreact\ntypescript"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello guys. I am trying to intereact with the attest function directly from the frontend, but when trying to encode the "
    },
    {
     "type": "code",
     "text": "data"
    },
    {
     "type": "plain",
     "text": " to bytes32 I am getting an error. How do you guys recommend encoding it?\n\n*Error I am getting:* "
    },
    {
     "type": "code",
     "text": "Argument of type 'string' is not assignable to parameter of type '`0x${string}"
    },
    {
     "type": "plain",
     "text": "'.`\n* Snippet code:*\n\n"
    },
    {
     "type": "pre",
     "text": " typescript\nconst handleAttest = async () => {\n    const schema =\n      \"0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995\"; //Temporary hardcoded\n\n    const abiCoder = new ethers.utils.AbiCoder();\n\n    const bytes32Data = ethers.utils.formatBytes32String(\"checked-in\");\n\n    const attestationRequestData = {\n      recipient: \"07231e0fd9F668d4aaFaE7A5D5f432B8E6e4Fe51\" as `0x${string}`, //Temporary hardcoded\n      expirationTime: BigInt(0),\n      revocable: false,\n      refUID: \"0x0\" as `0x${string}`,\n      data: bytes32Data,\n      value: BigInt(0),\n    };\n\n    const configurations = {\n      walletClient: {},\n      chain: 1,\n    };\n\n    try {\n      const transactionReceipt = await submitAttest(\n        schema,\n        attestationRequestData.recipient,\n        attestationRequestData.expirationTime,\n        attestationRequestData.revocable,\n        attestationRequestData.refUID,\n        attestationRequestData.data,\n        attestationRequestData.value,\n        configurations,\n",
     "language": "typescript"
    },
    {
     "type": "plain",
     "text": " \n\n*stack:* \nethers v5.7.0\nreact\ntypescript"
    }
   ]
  },
  {
   "id": 4272,
   "type": "message",
   "date": "2024-07-08T23:06:54",
   "date_unixtime": "1720460214",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": [
    "Why do you need this ",
    {
     "type": "code",
     "text": "as"
    },
    "?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Why do you need this "
    },
    {
     "type": "code",
     "text": "as"
    },
    {
     "type": "plain",
     "text": "?"
    }
   ]
  },
  {
   "id": 4273,
   "type": "message",
   "date": "2024-07-08T23:07:29",
   "date_unixtime": "1720460249",
   "from": "Rascar",
   "from_id": "user1013433535",
   "reply_to_message_id": 2,
   "text": [
    "without it I get the error \"Argument of type 'string' is not assignable to parameter of type '",
    {
     "type": "code",
     "text": "0x${string}"
    },
    "'\""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "without it I get the error \"Argument of type 'string' is not assignable to parameter of type '"
    },
    {
     "type": "code",
     "text": "0x${string}"
    },
    {
     "type": "plain",
     "text": "'\""
    }
   ]
  },
  {
   "id": 4274,
   "type": "message",
   "date": "2024-07-08T23:07:48",
   "date_unixtime": "1720460268",
   "from": "Rascar",
   "from_id": "user1013433535",
   "reply_to_message_id": 2,
   "text": [
    "in the ",
    {
     "type": "code",
     "text": "attestationRequestData.recipient"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "in the "
    },
    {
     "type": "code",
     "text": "attestationRequestData.recipient"
    }
   ]
  },
  {
   "id": 4275,
   "type": "message",
   "date": "2024-07-08T23:10:31",
   "date_unixtime": "1720460431",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Both are strings, so I have no idea what's going on there",
   "text_entities": [
    {
     "type": "plain",
     "text": "Both are strings, so I have no idea what's going on there"
    }
   ]
  },
  {
   "id": 4276,
   "type": "message",
   "date": "2024-07-08T23:10:41",
   "date_unixtime": "1720460441",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Try upgrading your TypeScript version, perhaps",
   "text_entities": [
    {
     "type": "plain",
     "text": "Try upgrading your TypeScript version, perhaps"
    }
   ]
  },
  {
   "id": 4277,
   "type": "message",
   "date": "2024-07-08T23:10:56",
   "date_unixtime": "1720460456",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "The SDK supports TypeScript 5 and ethers v6",
   "text_entities": [
    {
     "type": "plain",
     "text": "The SDK supports TypeScript 5 and ethers v6"
    }
   ]
  },
  {
   "id": 4278,
   "type": "message",
   "date": "2024-07-08T23:11:12",
   "date_unixtime": "1720460472",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4268,
   "text": "Fixed and published as 2.4.1",
   "text_entities": [
    {
     "type": "plain",
     "text": "Fixed and published as 2.4.1"
    }
   ]
  },
  {
   "id": 4279,
   "type": "message",
   "date": "2024-07-09T00:34:40",
   "date_unixtime": "1720465480",
   "from": "Rascar",
   "from_id": "user1013433535",
   "reply_to_message_id": 2,
   "text": [
    "i've updated to the latest typescript and ethers. But I am not using the SDK.\n\nBut what encoder function can I use in the frontend to encode the ",
    {
     "type": "code",
     "text": "data"
    },
    " instead of using the SDK?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "i've updated to the latest typescript and ethers. But I am not using the SDK.\n\nBut what encoder function can I use in the frontend to encode the "
    },
    {
     "type": "code",
     "text": "data"
    },
    {
     "type": "plain",
     "text": " instead of using the SDK?"
    }
   ]
  },
  {
   "id": 4280,
   "type": "message",
   "date": "2024-07-09T19:40:32",
   "date_unixtime": "1720534232",
   "edited": "2024-07-09T19:41:09",
   "edited_unixtime": "1720534269",
   "from": "Vincent | Fractal Labs",
   "from_id": "user52106093",
   "reply_to_message_id": 3950,
   "text": [
    "want to check if anyone get coinbase smart wallet working with EAS sdk to attest per signed typed data\n\n— I can pop for signature and I was under the impression smart wallet of coinbase use standard EIP712 / 1271 which is supported by EAS sdk, while apparently the signature generated is of length 2178 in my case instead of 64/65 (checked by ethers.js) thus  throwing errors\n\n",
    {
     "type": "pre",
     "text": "TypeError: invalid raw signature length (argument=\"signature\", value=\"0x0000000000000000000000000ba5ed0c6aa8c49038f819e587e2633c4a9f428a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000e43ffba36f00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040e363f766b5120891f798bb85b6a884d4145fede72882475c11493c79799c2e867a39f650192102ca512e2ddbbda4d7a2cabd1ec80bd77a513edd65188600c5fc0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001ed3dfbcdabcce233c67763eda1915e687e3b9953634e71059cdba3a76c103d6251357351adc2bdf71952f9ad55ab4ca16400c320870826e7a77b63fc2c29d58e0000000000000000000000000000000000000000000000000000000000000025f198086b2db17256731bc456673b96bcef23f51d1fbacdd7c4379ef65465572f1d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a7b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a2276434a647143784b55736e68507662536a41696e49733445634270462d68524c2d516d684954584f317649222c226f726967696e223a2268747470733a2f2f6b6579732e636f696e626173652e636f6d222c2263726f73734f726967696e223a66616c73657d000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492\", code=INVALID_ARGUMENT, version=6.12.0)\n    at makeError (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:585:19)\n    at assert (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:606:15)\n    at assertArgument (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:611:7)\n    at assertError (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:7765:41)\n    at _Signature.from (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:7787:11)\n    at _Offchain.signTypedDataRequest (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:45355:46)\n    at async _Offchain.signOffchainAttestation (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:45915:31)\n    at async Attestor.attestOffChain (attestor.ts:106:33)\n",
     "language": ""
    },
    "\n\nI wonder if explicit support (at ether.js) is needed for passkey signer \n",
    {
     "type": "link",
     "text": "https://github.com/coinbase/smart-wallet/blob/facf1a5a00a393c859c77a7cff38de1e557c393f/test/CoinbaseSmartWallet/IsValidSignature.t.sol#L19"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "want to check if anyone get coinbase smart wallet working with EAS sdk to attest per signed typed data\n\n— I can pop for signature and I was under the impression smart wallet of coinbase use standard EIP712 / 1271 which is supported by EAS sdk, while apparently the signature generated is of length 2178 in my case instead of 64/65 (checked by ethers.js) thus  throwing errors\n\n"
    },
    {
     "type": "pre",
     "text": "TypeError: invalid raw signature length (argument=\"signature\", value=\"0x0000000000000000000000000ba5ed0c6aa8c49038f819e587e2633c4a9f428a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000e43ffba36f00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040e363f766b5120891f798bb85b6a884d4145fede72882475c11493c79799c2e867a39f650192102ca512e2ddbbda4d7a2cabd1ec80bd77a513edd65188600c5fc0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001ed3dfbcdabcce233c67763eda1915e687e3b9953634e71059cdba3a76c103d6251357351adc2bdf71952f9ad55ab4ca16400c320870826e7a77b63fc2c29d58e0000000000000000000000000000000000000000000000000000000000000025f198086b2db17256731bc456673b96bcef23f51d1fbacdd7c4379ef65465572f1d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a7b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a2276434a647143784b55736e68507662536a41696e49733445634270462d68524c2d516d684954584f317649222c226f726967696e223a2268747470733a2f2f6b6579732e636f696e626173652e636f6d222c2263726f73734f726967696e223a66616c73657d000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492\", code=INVALID_ARGUMENT, version=6.12.0)\n    at makeError (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:585:19)\n    at assert (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:606:15)\n    at assertArgument (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:611:7)\n    at assertError (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:7765:41)\n    at _Signature.from (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:7787:11)\n    at _Offchain.signTypedDataRequest (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:45355:46)\n    at async _Offchain.signOffchainAttestation (@ethereum-attestation-service_eas-sdk.js?v=9c2c27c4:45915:31)\n    at async Attestor.attestOffChain (attestor.ts:106:33)\n",
     "language": ""
    },
    {
     "type": "plain",
     "text": "\n\nI wonder if explicit support (at ether.js) is needed for passkey signer \n"
    },
    {
     "type": "link",
     "text": "https://github.com/coinbase/smart-wallet/blob/facf1a5a00a393c859c77a7cff38de1e557c393f/test/CoinbaseSmartWallet/IsValidSignature.t.sol#L19"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 4281,
   "type": "message",
   "date": "2024-07-09T20:05:45",
   "date_unixtime": "1720535745",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4280,
   "text": "I’m not familiar with their API, but it looks like you are passing the whole message and not just the signature.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I’m not familiar with their API, but it looks like you are passing the whole message and not just the signature."
    }
   ]
  },
  {
   "id": 4282,
   "type": "message",
   "date": "2024-07-09T20:06:37",
   "date_unixtime": "1720535797",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "The SDK returns an object with all the typed data and the signature as separate fields",
   "text_entities": [
    {
     "type": "plain",
     "text": "The SDK returns an object with all the typed data and the signature as separate fields"
    }
   ]
  },
  {
   "id": 4283,
   "type": "message",
   "date": "2024-07-09T20:06:57",
   "date_unixtime": "1720535817",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "But I have no idea what smart-wallet needs in this case",
   "text_entities": [
    {
     "type": "plain",
     "text": "But I have no idea what smart-wallet needs in this case"
    }
   ]
  },
  {
   "id": 4284,
   "type": "message",
   "date": "2024-07-09T20:07:34",
   "date_unixtime": "1720535854",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "See if you can find some sample code and then it would easier to see what’s wrong",
   "text_entities": [
    {
     "type": "plain",
     "text": "See if you can find some sample code and then it would easier to see what’s wrong"
    }
   ]
  },
  {
   "id": 4285,
   "type": "message",
   "date": "2024-07-09T20:36:14",
   "date_unixtime": "1720537574",
   "from": "Vincent | Fractal Labs",
   "from_id": "user52106093",
   "reply_to_message_id": 4281,
   "text": [
    "FYR we try to run ordinary attestation (which worked with private key based wallet)\n",
    {
     "type": "link",
     "text": "https://github.com/0xl10n/ethereum-l10n-service-base/blob/402f6fc8473aaaa47017d4db84b420333c442b32/packages/attestation/src/app/attestor.ts#L95"
    },
    "\n\nonly difference is replacing the signer with the one from coinbase sdk \n",
    {
     "type": "link",
     "text": "https://github.com/0xl10n/ethereum-l10n-service-base/blob/402f6fc8473aaaa47017d4db84b420333c442b32/apps/chrome-extension/src/WalletContext.tsx#L38"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "FYR we try to run ordinary attestation (which worked with private key based wallet)\n"
    },
    {
     "type": "link",
     "text": "https://github.com/0xl10n/ethereum-l10n-service-base/blob/402f6fc8473aaaa47017d4db84b420333c442b32/packages/attestation/src/app/attestor.ts#L95"
    },
    {
     "type": "plain",
     "text": "\n\nonly difference is replacing the signer with the one from coinbase sdk \n"
    },
    {
     "type": "link",
     "text": "https://github.com/0xl10n/ethereum-l10n-service-base/blob/402f6fc8473aaaa47017d4db84b420333c442b32/apps/chrome-extension/src/WalletContext.tsx#L38"
    }
   ]
  },
  {
   "id": 4286,
   "type": "message",
   "date": "2024-07-09T22:09:19",
   "date_unixtime": "1720543159",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "And it returns such weird data from signTypedData?",
   "text_entities": [
    {
     "type": "plain",
     "text": "And it returns such weird data from signTypedData?"
    }
   ]
  },
  {
   "id": 4287,
   "type": "message",
   "date": "2024-07-09T22:09:26",
   "date_unixtime": "1720543166",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Very weird",
   "text_entities": [
    {
     "type": "plain",
     "text": "Very weird"
    }
   ]
  },
  {
   "id": 4288,
   "type": "message",
   "date": "2024-07-09T22:09:41",
   "date_unixtime": "1720543181",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Maybe it requires another wrapper",
   "text_entities": [
    {
     "type": "plain",
     "text": "Maybe it requires another wrapper"
    }
   ]
  },
  {
   "id": 4289,
   "type": "service",
   "date": "2024-07-10T12:11:18",
   "date_unixtime": "1720593678",
   "actor": "Litt Cloud Canada(Jorge Abalo)",
   "actor_id": "user1837050645",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4290,
   "type": "service",
   "date": "2024-07-11T19:24:08",
   "date_unixtime": "1720706048",
   "actor": "Giovanni Mazzeo",
   "actor_id": "user1014095008",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4291,
   "type": "message",
   "date": "2024-07-11T19:26:49",
   "date_unixtime": "1720706209",
   "edited": "2024-07-11T19:27:32",
   "edited_unixtime": "1720706252",
   "from": "Giovanni Mazzeo",
   "from_id": "user1014095008",
   "text": "Hey all. This is Giovanni from Italy. I am researcher at University of Naples Parthenope. Nice to meet you. I have a question, sorry if it could seem a stupid question. Let’s say I have created an on-chain attestation with some data fields inside its schema. Is there a way to retrieve that attestation and its data inside a smart contract deployed on ethereum?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey all. This is Giovanni from Italy. I am researcher at University of Naples Parthenope. Nice to meet you. I have a question, sorry if it could seem a stupid question. Let’s say I have created an on-chain attestation with some data fields inside its schema. Is there a way to retrieve that attestation and its data inside a smart contract deployed on ethereum?"
    }
   ]
  },
  {
   "id": 4292,
   "type": "message",
   "date": "2024-07-11T22:28:19",
   "date_unixtime": "1720717099",
   "from": "Plat0x.eth | Σ🧠Ξ",
   "from_id": "user1221501884",
   "text": "if you replay the function it would produce the same hash, there are methods to verify this once the attestation is onchain",
   "text_entities": [
    {
     "type": "plain",
     "text": "if you replay the function it would produce the same hash, there are methods to verify this once the attestation is onchain"
    }
   ]
  },
  {
   "id": 4293,
   "type": "service",
   "date": "2024-07-13T00:40:53",
   "date_unixtime": "1720811453",
   "actor": "Daniel",
   "actor_id": "user7047568670",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4294,
   "type": "service",
   "date": "2024-07-14T14:58:29",
   "date_unixtime": "1720949309",
   "actor": "Stee",
   "actor_id": "user1521265240",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4296,
   "type": "service",
   "date": "2024-07-15T00:00:46",
   "date_unixtime": "1720981846",
   "actor": "vianzacky 🆓",
   "actor_id": "user2047278278",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4297,
   "type": "service",
   "date": "2024-07-15T06:46:31",
   "date_unixtime": "1721006191",
   "actor": "mull",
   "actor_id": "user1778892440",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4298,
   "type": "service",
   "date": "2024-07-15T08:26:36",
   "date_unixtime": "1721012196",
   "actor": "Kara Howard @ SI<3>",
   "actor_id": "user6575539159",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4299,
   "type": "message",
   "date": "2024-07-15T15:58:56",
   "date_unixtime": "1721039336",
   "from": "Alejandro Jaramillo",
   "from_id": "user243058386",
   "reply_to_message_id": 2,
   "text": "Hey guys, does somebody know if you would be able to sign an attestation with a smart contract account?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys, does somebody know if you would be able to sign an attestation with a smart contract account?"
    }
   ]
  },
  {
   "id": 4300,
   "type": "message",
   "date": "2024-07-15T16:00:38",
   "date_unixtime": "1721039438",
   "from": "Alejandro Jaramillo",
   "from_id": "user243058386",
   "reply_to_message_id": 2,
   "text": "Using for example passkeys?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Using for example passkeys?"
    }
   ]
  },
  {
   "id": 4301,
   "type": "message",
   "date": "2024-07-15T16:03:37",
   "date_unixtime": "1721039617",
   "from": "Alejandro Jaramillo",
   "from_id": "user243058386",
   "reply_to_message_id": 1848,
   "text": "Hey guys! Is there maybe someone working or an already working app for signing documents? Kind of DocuSign for EAS?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys! Is there maybe someone working or an already working app for signing documents? Kind of DocuSign for EAS?"
    }
   ]
  },
  {
   "id": 4302,
   "type": "message",
   "date": "2024-07-15T17:47:15",
   "date_unixtime": "1721045835",
   "edited": "2024-07-20T06:25:33",
   "edited_unixtime": "1721436933",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4301,
   "text": [
    "You could take a look at this schema for inspiration: ",
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0xd3f24e873e8df2d9bb9af6f08ea1ddf61f65754d023f3ea761081e3e6a226a80"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "You could take a look at this schema for inspiration: "
    },
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0xd3f24e873e8df2d9bb9af6f08ea1ddf61f65754d023f3ea761081e3e6a226a80"
    }
   ]
  },
  {
   "id": 4303,
   "type": "message",
   "date": "2024-07-15T17:47:54",
   "date_unixtime": "1721045874",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4299,
   "text": "Smart contracts can make attestations",
   "text_entities": [
    {
     "type": "plain",
     "text": "Smart contracts can make attestations"
    }
   ]
  },
  {
   "id": 4304,
   "type": "service",
   "date": "2024-07-15T22:13:30",
   "date_unixtime": "1721061810",
   "actor": "Lior",
   "actor_id": "user1107906140",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4305,
   "type": "message",
   "date": "2024-07-15T22:21:12",
   "date_unixtime": "1721062272",
   "from": "Lior",
   "from_id": "user1107906140",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 987,
   "height": 1007,
   "text": "gm, i'm trying to create a new scheme using the no -code ui, but getting the error. any idea ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "gm, i'm trying to create a new scheme using the no -code ui, but getting the error. any idea ?"
    }
   ]
  },
  {
   "id": 4306,
   "type": "message",
   "date": "2024-07-15T22:21:39",
   "date_unixtime": "1721062299",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": "is there a minimum requierment for scheme structure or data types that are needed to be included ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "is there a minimum requierment for scheme structure or data types that are needed to be included ?"
    }
   ]
  },
  {
   "id": 4307,
   "type": "message",
   "date": "2024-07-15T22:35:44",
   "date_unixtime": "1721063144",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": [
    "and another question - once i have my Schema ready, can i use the no-code UI to feed it with pre-populated fields via URL parameters ?\nIn this example - Recepient and Message to be filled with the data i want to pre-populate ?\n\nThe goal is to let user who already filled a form prior, to just connect wallet and attest\n\n",
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0x3969bb076acfb992af54d51274c5c868641ca5344e1aacd0b1f5e4f80ac0822f"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "and another question - once i have my Schema ready, can i use the no-code UI to feed it with pre-populated fields via URL parameters ?\nIn this example - Recepient and Message to be filled with the data i want to pre-populate ?\n\nThe goal is to let user who already filled a form prior, to just connect wallet and attest\n\n"
    },
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0x3969bb076acfb992af54d51274c5c868641ca5344e1aacd0b1f5e4f80ac0822f"
    }
   ]
  },
  {
   "id": 4308,
   "type": "service",
   "date": "2024-07-16T00:21:18",
   "date_unixtime": "1721069478",
   "actor": "Marcos Hash - Nebula L2 / Spaceport.xyz",
   "actor_id": "user729802696",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4309,
   "type": "message",
   "date": "2024-07-16T01:27:15",
   "date_unixtime": "1721073435",
   "edited": "2024-07-16T01:32:40",
   "edited_unixtime": "1721073760",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4305,
   "text": "Schema variable names should not have any spaces or special characters. They should be written in camelCase",
   "text_entities": [
    {
     "type": "plain",
     "text": "Schema variable names should not have any spaces or special characters. They should be written in camelCase"
    }
   ]
  },
  {
   "id": 4310,
   "type": "message",
   "date": "2024-07-16T14:56:41",
   "date_unixtime": "1721122001",
   "from": "Lior",
   "from_id": "user1107906140",
   "reply_to_message_id": 4307,
   "text": "Anyone can help with this Q ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Anyone can help with this Q ?"
    }
   ]
  },
  {
   "id": 4311,
   "type": "message",
   "date": "2024-07-16T15:48:22",
   "date_unixtime": "1721125102",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4307,
   "text": "Yes you can. If you fill in the attestation details and then double click on the “Attestation details” title it will copy this link into your clipboard. Right now it’s just a little hidden feature",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes you can. If you fill in the attestation details and then double click on the “Attestation details” title it will copy this link into your clipboard. Right now it’s just a little hidden feature"
    }
   ]
  },
  {
   "id": 4312,
   "type": "message",
   "date": "2024-07-16T16:11:42",
   "date_unixtime": "1721126502",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": [
    "Not sure i understood where i fill them ?\nIf it helps, here's the scheme i want to prepopulate with parameters so when user is getting to this page they already have everything filled and all they need to do is click \"Make Attestation\"\n\n",
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0x5a902c935ca06d9a3ca1a7c07e598f13bca867a87ed99e1278ec69cb9b916307"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Not sure i understood where i fill them ?\nIf it helps, here's the scheme i want to prepopulate with parameters so when user is getting to this page they already have everything filled and all they need to do is click \"Make Attestation\"\n\n"
    },
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0x5a902c935ca06d9a3ca1a7c07e598f13bca867a87ed99e1278ec69cb9b916307"
    }
   ]
  },
  {
   "id": 4313,
   "type": "message",
   "date": "2024-07-16T16:19:18",
   "date_unixtime": "1721126958",
   "from": "Giovanni Mazzeo",
   "from_id": "user1014095008",
   "reply_to_message_id": 2,
   "text": "hey guys hello. I am having hard time in deploying the EAS contract contained in the eas-sdk repository. I have made my forked version of the repo and wanted to make the deployment on Sepolia but I cannot understand how to do it. I didn’t found even a place where configuring my wallet creds. Can you please help me? The readme is pretty unclear on the deployment commands.",
   "text_entities": [
    {
     "type": "plain",
     "text": "hey guys hello. I am having hard time in deploying the EAS contract contained in the eas-sdk repository. I have made my forked version of the repo and wanted to make the deployment on Sepolia but I cannot understand how to do it. I didn’t found even a place where configuring my wallet creds. Can you please help me? The readme is pretty unclear on the deployment commands."
    }
   ]
  },
  {
   "id": 4314,
   "type": "message",
   "date": "2024-07-16T16:21:47",
   "date_unixtime": "1721127107",
   "from": "Giovanni Mazzeo",
   "from_id": "user1014095008",
   "reply_to_message_id": 2,
   "text": [
    "when doing ",
    {
     "type": "code",
     "text": "npx hardhat deploy"
    },
    " it seems deployments happen but on the Hardhat networjk"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "when doing "
    },
    {
     "type": "code",
     "text": "npx hardhat deploy"
    },
    {
     "type": "plain",
     "text": " it seems deployments happen but on the Hardhat networjk"
    }
   ]
  },
  {
   "id": 4315,
   "type": "message",
   "date": "2024-07-16T16:22:38",
   "date_unixtime": "1721127158",
   "edited": "2024-07-16T16:23:03",
   "edited_unixtime": "1721127183",
   "from": "Giovanni Mazzeo",
   "from_id": "user1014095008",
   "reply_to_message_id": 2,
   "text": [
    "I tried to use ",
    {
     "type": "code",
     "text": "npx hardhat deplo"
    },
    "y --",
    {
     "type": "code",
     "text": "network=sepolia"
    },
    " but there is no output, nor error. I would expect a return of the deployed address. Also it is impossible the deployment happened because I didn’t configure my wallet"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I tried to use "
    },
    {
     "type": "code",
     "text": "npx hardhat deplo"
    },
    {
     "type": "plain",
     "text": "y --"
    },
    {
     "type": "code",
     "text": "network=sepolia"
    },
    {
     "type": "plain",
     "text": " but there is no output, nor error. I would expect a return of the deployed address. Also it is impossible the deployment happened because I didn’t configure my wallet"
    }
   ]
  },
  {
   "id": 4316,
   "type": "service",
   "date": "2024-07-17T00:18:56",
   "date_unixtime": "1721155736",
   "actor": "Okhaye Ose",
   "actor_id": "user1271380783",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4317,
   "type": "message",
   "date": "2024-07-17T02:37:33",
   "date_unixtime": "1721164053",
   "from": "Mitch Oz",
   "from_id": "user546190199",
   "reply_to_message_id": 2,
   "text": "Hey guys! Are there any templates of upgradeable schema resolver contracts out there? Has anyone built this yet?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys! Are there any templates of upgradeable schema resolver contracts out there? Has anyone built this yet?"
    }
   ]
  },
  {
   "id": 4318,
   "type": "message",
   "date": "2024-07-17T17:13:45",
   "date_unixtime": "1721216625",
   "from": "Lior",
   "from_id": "user1107906140",
   "reply_to_message_id": 4312,
   "text": "gm , any dev here that can help me with integrating this scheme to an app we've build ? basically we need to allow users to create attestation from a form they submit in the previous step (thus i want to pass the parameters from that form to the attestation creation app",
   "text_entities": [
    {
     "type": "plain",
     "text": "gm , any dev here that can help me with integrating this scheme to an app we've build ? basically we need to allow users to create attestation from a form they submit in the previous step (thus i want to pass the parameters from that form to the attestation creation app"
    }
   ]
  },
  {
   "id": 4320,
   "type": "message",
   "date": "2024-07-17T17:15:14",
   "date_unixtime": "1721216714",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4312,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 342,
   "height": 118,
   "text": "Sorry, I meant to double click on the “New Attestation” title after filling in the details",
   "text_entities": [
    {
     "type": "plain",
     "text": "Sorry, I meant to double click on the “New Attestation” title after filling in the details"
    }
   ]
  },
  {
   "id": 4321,
   "type": "message",
   "date": "2024-07-17T17:16:29",
   "date_unixtime": "1721216789",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": [
    "oohh...ok so i got this - i can replace some of the 000 with content ?\n\n",
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0x5a902c935ca06d9a3ca1a7c07e598f13bca867a87ed99e1278ec69cb9b916307#template=::0:true:0x00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "oohh...ok so i got this - i can replace some of the 000 with content ?\n\n"
    },
    {
     "type": "link",
     "text": "https://sepolia.easscan.org/attestation/attestWithSchema/0x5a902c935ca06d9a3ca1a7c07e598f13bca867a87ed99e1278ec69cb9b916307#template=::0:true:0x00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    }
   ]
  },
  {
   "id": 4322,
   "type": "message",
   "date": "2024-07-17T17:20:58",
   "date_unixtime": "1721217058",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4321,
   "text": "Fill in the data first and then double click title",
   "text_entities": [
    {
     "type": "plain",
     "text": "Fill in the data first and then double click title"
    }
   ]
  },
  {
   "id": 4323,
   "type": "message",
   "date": "2024-07-17T17:22:46",
   "date_unixtime": "1721217166",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": "ok cool i see",
   "text_entities": [
    {
     "type": "plain",
     "text": "ok cool i see"
    }
   ]
  },
  {
   "id": 4324,
   "type": "message",
   "date": "2024-07-17T17:23:39",
   "date_unixtime": "1721217219",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": "so i need somehow to generate this BEFORE - i have the data already and i want to create  the attestation ready for the user just to Make Attestation",
   "text_entities": [
    {
     "type": "plain",
     "text": "so i need somehow to generate this BEFORE - i have the data already and i want to create  the attestation ready for the user just to Make Attestation"
    }
   ]
  },
  {
   "id": 4325,
   "type": "message",
   "date": "2024-07-18T00:46:01",
   "date_unixtime": "1721243761",
   "from": "Afo Wefa",
   "from_id": "user5700347535",
   "reply_to_message_id": 2,
   "text": "Is there a util to extract the values from decoded json data into a single object?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is there a util to extract the values from decoded json data into a single object?"
    }
   ]
  },
  {
   "id": 4326,
   "type": "message",
   "date": "2024-07-18T01:20:26",
   "date_unixtime": "1721245826",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4325,
   "text": "its just stringified JSON. You can use JSON.parse(decodedJsonObject)",
   "text_entities": [
    {
     "type": "plain",
     "text": "its just stringified JSON. You can use JSON.parse(decodedJsonObject)"
    }
   ]
  },
  {
   "id": 4327,
   "type": "message",
   "date": "2024-07-18T10:15:29",
   "date_unixtime": "1721277929",
   "from": "Afo Wefa",
   "from_id": "user5700347535",
   "reply_to_message_id": 4326,
   "text": "Yep using that and getting an an array of objects for each value, I then want to create a single object. I can do custom after parsing the json but was hoping there was some util to handle it.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yep using that and getting an an array of objects for each value, I then want to create a single object. I can do custom after parsing the json but was hoping there was some util to handle it."
    }
   ]
  },
  {
   "id": 4328,
   "type": "service",
   "date": "2024-07-19T01:55:31",
   "date_unixtime": "1721334331",
   "actor": "J P",
   "actor_id": "user1982640825",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4329,
   "type": "service",
   "date": "2024-07-19T10:16:21",
   "date_unixtime": "1721364381",
   "actor": "Sean Chen",
   "actor_id": "user6010949045",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4330,
   "type": "message",
   "date": "2024-07-19T12:52:43",
   "date_unixtime": "1721373763",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4311,
   "text": "🔥",
   "text_entities": [
    {
     "type": "plain",
     "text": "🔥"
    }
   ]
  },
  {
   "id": 4331,
   "type": "message",
   "date": "2024-07-19T13:54:00",
   "date_unixtime": "1721377440",
   "from": "J P",
   "from_id": "user1982640825",
   "reply_to_message_id": 2,
   "text": [
    "Hello everyone 🙂 One question: I've taking a look at the privateData schema. Anyone knows if is it possible to use such type in a custom schema? from my understanding you must go through that specific schema.. but if anyone has some resources apart from the sdk github or this tutorial: ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/private-data-attestations"
    },
    " it would be much appreciated. Thank you!!"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello everyone 🙂 One question: I've taking a look at the privateData schema. Anyone knows if is it possible to use such type in a custom schema? from my understanding you must go through that specific schema.. but if anyone has some resources apart from the sdk github or this tutorial: "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/private-data-attestations"
    },
    {
     "type": "plain",
     "text": " it would be much appreciated. Thank you!!"
    }
   ]
  },
  {
   "id": 4332,
   "type": "message",
   "date": "2024-07-19T17:56:05",
   "date_unixtime": "1721391965",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4327,
   "text": "You can definitely can still make the same style attestations in your own schemas by encoding them using the PrivateData class in the sdk. The only thing is the explorer UI will not display it automatically the same way the private data schema works. You would have to build your own interface around your custom schema.",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can definitely can still make the same style attestations in your own schemas by encoding them using the PrivateData class in the sdk. The only thing is the explorer UI will not display it automatically the same way the private data schema works. You would have to build your own interface around your custom schema."
    }
   ]
  },
  {
   "id": 4333,
   "type": "message",
   "date": "2024-07-20T02:30:40",
   "date_unixtime": "1721422840",
   "from": "Mahesh | karmahq.xyz",
   "from_id": "user549415227",
   "reply_to_message_id": 4317,
   "text": [
    "All our resolvers are upgradeable, here is one for example: ",
    {
     "type": "link",
     "text": "https://github.com/show-karma/gap-contracts/blob/main/contracts/ProjectResolver.sol"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "All our resolvers are upgradeable, here is one for example: "
    },
    {
     "type": "link",
     "text": "https://github.com/show-karma/gap-contracts/blob/main/contracts/ProjectResolver.sol"
    }
   ]
  },
  {
   "id": 4334,
   "type": "message",
   "date": "2024-07-20T02:47:39",
   "date_unixtime": "1721423859",
   "edited": "2024-07-20T02:47:51",
   "edited_unixtime": "1721423871",
   "from": "Mitch Oz",
   "from_id": "user546190199",
   "reply_to_message_id": 4333,
   "text": "This is perfect! Thanks Mahesh",
   "text_entities": [
    {
     "type": "plain",
     "text": "This is perfect! Thanks Mahesh"
    }
   ]
  },
  {
   "id": 4335,
   "type": "message",
   "date": "2024-07-20T02:50:29",
   "date_unixtime": "1721424029",
   "edited": "2024-07-20T06:25:14",
   "edited_unixtime": "1721436914",
   "from": "Mahesh | karmahq.xyz",
   "from_id": "user549415227",
   "reply_to_message_id": 2,
   "text": [
    "We want EAS deployed on Sei network. It's evm compatible. What is the process ",
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    "? Would you guys deploy? Or should I deploy and send a PR? What makes it a canonical deploy? Thanks!"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "We want EAS deployed on Sei network. It's evm compatible. What is the process "
    },
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    {
     "type": "plain",
     "text": "? Would you guys deploy? Or should I deploy and send a PR? What makes it a canonical deploy? Thanks!"
    }
   ]
  },
  {
   "id": 4336,
   "type": "message",
   "date": "2024-07-20T06:24:46",
   "date_unixtime": "1721436886",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4318,
   "text": "its pretty straight forward to use the sdk for attestations - you can copy the code almost right from the site then just pass in the form values from however your managing state",
   "text_entities": [
    {
     "type": "plain",
     "text": "its pretty straight forward to use the sdk for attestations - you can copy the code almost right from the site then just pass in the form values from however your managing state"
    }
   ]
  },
  {
   "id": 4337,
   "type": "message",
   "date": "2024-07-20T14:37:54",
   "date_unixtime": "1721466474",
   "from": "Lior",
   "from_id": "user1107906140",
   "text": "Thanks. sound simple. I'm not a dev so that's why i need help",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks. sound simple. I'm not a dev so that's why i need help"
    }
   ]
  },
  {
   "id": 4338,
   "type": "service",
   "date": "2024-07-20T16:47:42",
   "date_unixtime": "1721474262",
   "actor": "Rookie",
   "actor_id": "user5373031681",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4343,
   "type": "message",
   "date": "2024-07-20T19:45:43",
   "date_unixtime": "1721484943",
   "edited": "2024-07-20T20:11:16",
   "edited_unixtime": "1721486476",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4337,
   "text": "Are you on farcaster? Bet you could use bountycaster and get like 10 people willing to help that way\n\nAlternatively if it can wait till late next week dm me and i or my team will spend an hour to help 🙏",
   "text_entities": [
    {
     "type": "plain",
     "text": "Are you on farcaster? Bet you could use bountycaster and get like 10 people willing to help that way\n\nAlternatively if it can wait till late next week dm me and i or my team will spend an hour to help 🙏"
    }
   ]
  },
  {
   "id": 4344,
   "type": "message",
   "date": "2024-07-20T20:11:32",
   "date_unixtime": "1721486492",
   "from": "Lior",
   "from_id": "user1107906140",
   "reply_to_message_id": 4343,
   "text": "Thanks, appreciate it!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks, appreciate it!"
    }
   ]
  },
  {
   "id": 4345,
   "type": "message",
   "date": "2024-07-21T01:01:23",
   "date_unixtime": "1721503883",
   "from": "Sean Chen",
   "from_id": "user6010949045",
   "reply_to_message_id": 2,
   "text": [
    "Hi there, I try to create new schema on sepolia by running the code and use the sepolia 0.26 eas registry address, following the tutorial ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-sdk/blob/master/README.md#registering-a-schema"
    },
    "\n\n",
    {
     "type": "pre",
     "text": "\nconst schemaRegistryContractAddress = \"0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0\"; // Sepolia 0.26\n// const schemaRegistryContractAddress = '0xYourSchemaRegistryContractAddress';\nconst schemaRegistry = new SchemaRegistry(schemaRegistryContractAddress);\n\nschemaRegistry.connect(signer);\n\nconst schema = 'uint256 eventId, uint8 voteIndex';\nconst resolverAddress = '0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0'; // Sepolia 0.26\nconst revocable = true;\n\nconst transaction = await schemaRegistry.register({\n  schema,\n  resolverAddress,\n  revocable\n});\n\n// Optional: Wait for transaction to be validated\nawait transaction.wait();\n",
     "language": "javascript"
    },
    "\n\nbut then I got this error:\n\nfile:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/utils/errors.js:124\n            error = new Error(message);\n                    ^\n\nError: execution reverted (unknown custom error) (action=\"estimateGas\", data=\"0x23369fa6\", reason=null, transaction={ \"data\": \"0x60d7a27800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000a7e2ff54e76b8e6659aedc9103fb21c038050d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002075696e74323536206576656e7449642c2075696e743820766f7465496e646578\", \"from\": \"0x30eAbbA97A897D9de29b127162AfDA41619bDb98\", \"to\": \"0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0\" }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.13.1)\n    at makeError (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/utils/errors.js:124:21)\n    at getBuiltinCallException (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/abi/abi-coder.js:102:12)\n    at AbiCoder.getBuiltinCallException (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/abi/abi-coder.js:203:16)\n    at AlchemyProvider.getRpcError (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/providers/provider-jsonrpc.js:672:32)\n    at file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/providers/provider-jsonrpc.js:298:45\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  code: 'CALL_EXCEPTION',\n  action: 'estimateGas',\n  data: '0x23369fa6',\n  reason: null,\n  transaction: {\n    to: '0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0',\n    data: '0x60d7a27800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000a7e2ff54e76b8e6659aedc9103fb21c038050d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002075696e74323536206576656e7449642c2075696e743820766f7465496e646578',\n    from: '0x30eAbbA97A897D9de29b127162AfDA41619bDb98'\n  },\n  invocation: null,\n  revert: null,\n  shortMessage: 'execution reverted (unknown custom error)',\n  info: {\n    error: { code: 3, message: 'execution reverted', data: '0x23369fa6' },\n    payload: {\n      method: 'eth_estimateGas',\n      params: [\n        {\n          nonce: '0x4c',\n          from: '0x30eabba97a897d9de29b127162afda41619bdb98',\n          to: '0x0a7e2ff54e76b8e6659aedc9103fb21c038050d0',\n          data: '0x60d7a27800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000a7e2ff54e76b8e6659aedc9103fb21c038050d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002075696e74323536206576656e7449642c2075696e743820766f7465496e646578'\n        }\n      ],\n      id: 2,\n      jsonrpc: '2.0'\n    }\n  }\n}\n\nNeed some help"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi there, I try to create new schema on sepolia by running the code and use the sepolia 0.26 eas registry address, following the tutorial "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-sdk/blob/master/README.md#registering-a-schema"
    },
    {
     "type": "plain",
     "text": "\n\n"
    },
    {
     "type": "pre",
     "text": "\nconst schemaRegistryContractAddress = \"0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0\"; // Sepolia 0.26\n// const schemaRegistryContractAddress = '0xYourSchemaRegistryContractAddress';\nconst schemaRegistry = new SchemaRegistry(schemaRegistryContractAddress);\n\nschemaRegistry.connect(signer);\n\nconst schema = 'uint256 eventId, uint8 voteIndex';\nconst resolverAddress = '0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0'; // Sepolia 0.26\nconst revocable = true;\n\nconst transaction = await schemaRegistry.register({\n  schema,\n  resolverAddress,\n  revocable\n});\n\n// Optional: Wait for transaction to be validated\nawait transaction.wait();\n",
     "language": "javascript"
    },
    {
     "type": "plain",
     "text": "\n\nbut then I got this error:\n\nfile:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/utils/errors.js:124\n            error = new Error(message);\n                    ^\n\nError: execution reverted (unknown custom error) (action=\"estimateGas\", data=\"0x23369fa6\", reason=null, transaction={ \"data\": \"0x60d7a27800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000a7e2ff54e76b8e6659aedc9103fb21c038050d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002075696e74323536206576656e7449642c2075696e743820766f7465496e646578\", \"from\": \"0x30eAbbA97A897D9de29b127162AfDA41619bDb98\", \"to\": \"0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0\" }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.13.1)\n    at makeError (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/utils/errors.js:124:21)\n    at getBuiltinCallException (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/abi/abi-coder.js:102:12)\n    at AbiCoder.getBuiltinCallException (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/abi/abi-coder.js:203:16)\n    at AlchemyProvider.getRpcError (file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/providers/provider-jsonrpc.js:672:32)\n    at file:///Users/seanchen/Library/Mobile%20Documents/com~apple~CloudDocs/Contribute/eas-test/node_modules/ethers/lib.esm/providers/provider-jsonrpc.js:298:45\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  code: 'CALL_EXCEPTION',\n  action: 'estimateGas',\n  data: '0x23369fa6',\n  reason: null,\n  transaction: {\n    to: '0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0',\n    data: '0x60d7a27800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000a7e2ff54e76b8e6659aedc9103fb21c038050d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002075696e74323536206576656e7449642c2075696e743820766f7465496e646578',\n    from: '0x30eAbbA97A897D9de29b127162AfDA41619bDb98'\n  },\n  invocation: null,\n  revert: null,\n  shortMessage: 'execution reverted (unknown custom error)',\n  info: {\n    error: { code: 3, message: 'execution reverted', data: '0x23369fa6' },\n    payload: {\n      method: 'eth_estimateGas',\n      params: [\n        {\n          nonce: '0x4c',\n          from: '0x30eabba97a897d9de29b127162afda41619bdb98',\n          to: '0x0a7e2ff54e76b8e6659aedc9103fb21c038050d0',\n          data: '0x60d7a27800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000a7e2ff54e76b8e6659aedc9103fb21c038050d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002075696e74323536206576656e7449642c2075696e743820766f7465496e646578'\n        }\n      ],\n      id: 2,\n      jsonrpc: '2.0'\n    }\n  }\n}\n\nNeed some help"
    }
   ]
  },
  {
   "id": 4346,
   "type": "message",
   "date": "2024-07-21T01:47:25",
   "date_unixtime": "1721506645",
   "from": "Chris 168",
   "from_id": "user6083898594",
   "text": "Question for the group:\n\nOther than Coinbase's use of EAS, what do people consider to be the top 3 - 5 use cases of EAS currently in production?\n\nI'm asking, as I'm looking for references that I may not have seen to illustrate EAS value/adoption for a new platform we're starting to design.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Question for the group:\n\nOther than Coinbase's use of EAS, what do people consider to be the top 3 - 5 use cases of EAS currently in production?\n\nI'm asking, as I'm looking for references that I may not have seen to illustrate EAS value/adoption for a new platform we're starting to design."
    }
   ]
  },
  {
   "id": 4347,
   "type": "message",
   "date": "2024-07-21T02:00:12",
   "date_unixtime": "1721507412",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "It could be that you are trying to create the same schema (i.e., passing exactly the same parameters, including the optional resolver) twice",
   "text_entities": [
    {
     "type": "plain",
     "text": "It could be that you are trying to create the same schema (i.e., passing exactly the same parameters, including the optional resolver) twice"
    }
   ]
  },
  {
   "id": 4348,
   "type": "service",
   "date": "2024-07-21T04:30:12",
   "date_unixtime": "1721516412",
   "actor": "Patricio Worthalter",
   "actor_id": "user112176005",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4349,
   "type": "message",
   "date": "2024-07-21T06:17:40",
   "date_unixtime": "1721522860",
   "from": "Sean Chen",
   "from_id": "user6010949045",
   "reply_to_message_id": 4347,
   "text": "Thanks Leo, indeed its the cause.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks Leo, indeed its the cause."
    }
   ]
  },
  {
   "id": 4350,
   "type": "message",
   "date": "2024-07-21T06:20:16",
   "date_unixtime": "1721523016",
   "from": "Sean Chen",
   "from_id": "user6010949045",
   "reply_to_message_id": 2,
   "text": [
    "When I created the schema, the transaction receipt I got this\n\n",
    {
     "type": "pre",
     "text": "\nEAS SDK initialized and connected to provider.\nTransaction receipt: TransactionReceipt {\n  provider: AlchemyProvider { apiKey: 'XXXXXXXXXXXXXXXXXX' },\n  to: '0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0',\n  from: '0x30eAbbA97A897D9de29b127162AfDA41619bDb98',\n  contractAddress: null,\n  hash: '0x45840ed35729e8641ccd516de84f9cbeae3b7de7a70045b0989d1aeaf5b43171',\n  index: 115,\n  blockHash: '0x98abb76da05bbb03ba1ae95a401db43846632447b4c986d6153ed283b2067691',\n  blockNumber: 6347349,\n  logsBloom: '0xn  gasUsed: 139082n,\n  blobGasUsed: null,\n  cumulativeGasUsed: 13595401n,\n  gasPrice: 9999964n,\n  blobGasPrice: null,\n  type: 2,\n  status: 1,\n  root: undefined\n}\n",
     "language": "typescript"
    },
    "\nFrom the transaction hash is there a way in EASsdk or using other module to easily get the schema UID?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "When I created the schema, the transaction receipt I got this\n\n"
    },
    {
     "type": "pre",
     "text": "\nEAS SDK initialized and connected to provider.\nTransaction receipt: TransactionReceipt {\n  provider: AlchemyProvider { apiKey: 'XXXXXXXXXXXXXXXXXX' },\n  to: '0x0a7E2Ff54e76B8E6659aedc9103FB21c038050D0',\n  from: '0x30eAbbA97A897D9de29b127162AfDA41619bDb98',\n  contractAddress: null,\n  hash: '0x45840ed35729e8641ccd516de84f9cbeae3b7de7a70045b0989d1aeaf5b43171',\n  index: 115,\n  blockHash: '0x98abb76da05bbb03ba1ae95a401db43846632447b4c986d6153ed283b2067691',\n  blockNumber: 6347349,\n  logsBloom: '0xn  gasUsed: 139082n,\n  blobGasUsed: null,\n  cumulativeGasUsed: 13595401n,\n  gasPrice: 9999964n,\n  blobGasPrice: null,\n  type: 2,\n  status: 1,\n  root: undefined\n}\n",
     "language": "typescript"
    },
    {
     "type": "plain",
     "text": "\nFrom the transaction hash is there a way in EASsdk or using other module to easily get the schema UID?"
    }
   ]
  },
  {
   "id": 4351,
   "type": "message",
   "date": "2024-07-21T06:46:08",
   "date_unixtime": "1721524568",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "You can get it from the Registered event or use the SDK’s getSchemaUid function",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can get it from the Registered event or use the SDK’s getSchemaUid function"
    }
   ]
  },
  {
   "id": 4352,
   "type": "message",
   "date": "2024-07-21T07:34:51",
   "date_unixtime": "1721527491",
   "from": "Sean Chen",
   "from_id": "user6010949045",
   "reply_to_message_id": 4351,
   "text": [
    "Thanks, just realize ",
    {
     "type": "code",
     "text": "schemaRegistry.register()"
    },
    " is already return the UID"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks, just realize "
    },
    {
     "type": "code",
     "text": "schemaRegistry.register()"
    },
    {
     "type": "plain",
     "text": " is already return the UID"
    }
   ]
  },
  {
   "id": 4353,
   "type": "message",
   "date": "2024-07-21T20:26:57",
   "date_unixtime": "1721573817",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4346,
   "text": "identity + reputation + semi-private/private data sharing onchain/offchain it has too many use-cases to list but basically its a way to say something about anything with an EOA",
   "text_entities": [
    {
     "type": "plain",
     "text": "identity + reputation + semi-private/private data sharing onchain/offchain it has too many use-cases to list but basically its a way to say something about anything with an EOA"
    }
   ]
  },
  {
   "id": 4354,
   "type": "message",
   "date": "2024-07-21T20:29:56",
   "date_unixtime": "1721573996",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "text": "Excited to hear the results of the EAS Attestation Summer Hackathon! Is there any chance you guys will announce the winners earlier than aug 1st ? Also kudos to all the 20 projects that submitted!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Excited to hear the results of the EAS Attestation Summer Hackathon! Is there any chance you guys will announce the winners earlier than aug 1st ? Also kudos to all the 20 projects that submitted!"
    }
   ]
  },
  {
   "id": 4355,
   "type": "message",
   "date": "2024-07-21T21:49:06",
   "date_unixtime": "1721578746",
   "from": "Sean Chen",
   "from_id": "user6010949045",
   "reply_to_message_id": 2,
   "text": "GM",
   "text_entities": [
    {
     "type": "plain",
     "text": "GM"
    }
   ]
  },
  {
   "id": 4356,
   "type": "message",
   "date": "2024-07-21T21:49:40",
   "date_unixtime": "1721578780",
   "from": "Sean Chen",
   "from_id": "user6010949045",
   "reply_to_message_id": 2,
   "text": [
    "wondering if ",
    {
     "type": "code",
     "text": "refUID"
    },
    " can only reference attestation UID or can also reference schema UID as well?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "wondering if "
    },
    {
     "type": "code",
     "text": "refUID"
    },
    {
     "type": "plain",
     "text": " can only reference attestation UID or can also reference schema UID as well?"
    }
   ]
  },
  {
   "id": 4357,
   "type": "message",
   "date": "2024-07-21T21:57:11",
   "date_unixtime": "1721579231",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4356,
   "text": "Right now onchain attestations can only reference onchain attestation UIDs. You can create or use a schema that has an explicit schemaUID bytes32 field for that use case.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Right now onchain attestations can only reference onchain attestation UIDs. You can create or use a schema that has an explicit schemaUID bytes32 field for that use case."
    }
   ]
  },
  {
   "id": 4358,
   "type": "message",
   "date": "2024-07-22T09:41:00",
   "date_unixtime": "1721621460",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4335,
   "text": "Hey! Are you in touch with the SEI team? Would be great to connect with them and see how they could support EAS builders once deployed.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey! Are you in touch with the SEI team? Would be great to connect with them and see how they could support EAS builders once deployed."
    }
   ]
  },
  {
   "id": 4359,
   "type": "message",
   "date": "2024-07-22T09:42:04",
   "date_unixtime": "1721621524",
   "from": "Mahesh | karmahq.xyz",
   "from_id": "user549415227",
   "reply_to_message_id": 4358,
   "text": "I am, going to mesaage you, thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "I am, going to mesaage you, thanks!"
    }
   ]
  },
  {
   "id": 4360,
   "type": "service",
   "date": "2024-07-22T11:28:44",
   "date_unixtime": "1721627924",
   "actor": "Liso",
   "actor_id": "user5904028933",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4361,
   "type": "message",
   "date": "2024-07-22T18:28:25",
   "date_unixtime": "1721653105",
   "from": "Chris 168",
   "from_id": "user6083898594",
   "reply_to_message_id": 4353,
   "text": "My orginal request wasn't clear - sorry about that.  My meaning is, does anyone have a view on any ACTUAL PRODUCTION USES of EAS?  It is helpful to be able to point to production examples as some proof of adoption when utilizing any product - particularly new products.",
   "text_entities": [
    {
     "type": "plain",
     "text": "My orginal request wasn't clear - sorry about that.  My meaning is, does anyone have a view on any ACTUAL PRODUCTION USES of EAS?  It is helpful to be able to point to production examples as some proof of adoption when utilizing any product - particularly new products."
    }
   ]
  },
  {
   "id": 4362,
   "type": "message",
   "date": "2024-07-22T18:32:08",
   "date_unixtime": "1721653328",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4361,
   "text": "i see... is there a way to filter through schema data by total number of unique attestations? \nMaybe looking at the volume numbers will better answer that - not sure if theres a way to filter for 'top' schemas yet you could probably build a substream to do this",
   "text_entities": [
    {
     "type": "plain",
     "text": "i see... is there a way to filter through schema data by total number of unique attestations? \nMaybe looking at the volume numbers will better answer that - not sure if theres a way to filter for 'top' schemas yet you could probably build a substream to do this"
    }
   ]
  },
  {
   "id": 4363,
   "type": "message",
   "date": "2024-07-22T18:36:32",
   "date_unixtime": "1721653592",
   "from": "Chris 168",
   "from_id": "user6083898594",
   "text": "The real answer, if no people participating in the primary community comms channel for EAS have zero guidance on this topic, is that EAS likely has no meaningful adoption (other than some use by CoinBase).  That's unfortunate, as EAS has potential to be highly valuable tech for decentralized identity applications.",
   "text_entities": [
    {
     "type": "plain",
     "text": "The real answer, if no people participating in the primary community comms channel for EAS have zero guidance on this topic, is that EAS likely has no meaningful adoption (other than some use by CoinBase).  That's unfortunate, as EAS has potential to be highly valuable tech for decentralized identity applications."
    }
   ]
  },
  {
   "id": 4364,
   "type": "message",
   "date": "2024-07-22T18:47:26",
   "date_unixtime": "1721654246",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4363,
   "text": "Hey Chris! EAS adoption has been growing really quickly. Only a month ago we announced 1 million attestations and now it’s around 1.6m. Our biggest users are Coinbase, Gitcoin, Scroll, and Icebreaker, but there are MANY more entities that are attesting and learning about EAS every day. As EAS is a protocol that only came out last year and we aren’t paying users to attest, the growth curve starts slowly but I expect to see tremendous growth in use cases this year",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey Chris! EAS adoption has been growing really quickly. Only a month ago we announced 1 million attestations and now it’s around 1.6m. Our biggest users are Coinbase, Gitcoin, Scroll, and Icebreaker, but there are MANY more entities that are attesting and learning about EAS every day. As EAS is a protocol that only came out last year and we aren’t paying users to attest, the growth curve starts slowly but I expect to see tremendous growth in use cases this year"
    }
   ]
  },
  {
   "id": 4365,
   "type": "message",
   "date": "2024-07-22T18:52:33",
   "date_unixtime": "1721654553",
   "edited": "2024-07-22T18:55:53",
   "edited_unixtime": "1721654753",
   "from": "Chris 168",
   "from_id": "user6083898594",
   "text": [
    "Thanks, ",
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    " !  This is super helpful.  I think you already know my org is a huge supporter, and we're using EAS in production for small use cases.  --  Over the next two weeks, we may be starting new work to help build a logistics platform where human, org, and product identity tracking and verification using decentralized tech is desired.  Demonstrating to the client company growing success and implementations of EAS will be helpful - as we will propose EAS as part of their architecture."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks, "
    },
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    {
     "type": "plain",
     "text": " !  This is super helpful.  I think you already know my org is a huge supporter, and we're using EAS in production for small use cases.  --  Over the next two weeks, we may be starting new work to help build a logistics platform where human, org, and product identity tracking and verification using decentralized tech is desired.  Demonstrating to the client company growing success and implementations of EAS will be helpful - as we will propose EAS as part of their architecture."
    }
   ]
  },
  {
   "id": 4366,
   "type": "message",
   "date": "2024-07-22T18:57:36",
   "date_unixtime": "1721654856",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4365,
   "text": "That’s great to hear Chris! We are happy to help you with your integration when/if you need it",
   "text_entities": [
    {
     "type": "plain",
     "text": "That’s great to hear Chris! We are happy to help you with your integration when/if you need it"
    }
   ]
  },
  {
   "id": 4367,
   "type": "service",
   "date": "2024-07-22T23:48:54",
   "date_unixtime": "1721672334",
   "actor": "Blid",
   "actor_id": "user582481600",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4368,
   "type": "service",
   "date": "2024-07-23T14:55:22",
   "date_unixtime": "1721726722",
   "actor": "Elem",
   "actor_id": "user2061510822",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4369,
   "type": "message",
   "date": "2024-07-23T17:04:57",
   "date_unixtime": "1721734497",
   "edited": "2024-07-23T18:57:09",
   "edited_unixtime": "1721741229",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4344,
   "text": "Hello I have messaged you in DM to propose my help.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello I have messaged you in DM to propose my help."
    }
   ]
  },
  {
   "id": 4370,
   "type": "message",
   "date": "2024-07-23T17:53:38",
   "date_unixtime": "1721737418",
   "edited": "2024-07-25T16:37:32",
   "edited_unixtime": "1721905652",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4335,
   "text": "I'm wondering the same for the Arthera EVM chain where I deployed EAS contracts on the first testnet which has been replaced.\nIt's not only about having the contracts deployed but then also having the indexer and then integrated in the SDK if I understood well.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I'm wondering the same for the Arthera EVM chain where I deployed EAS contracts on the first testnet which has been replaced.\nIt's not only about having the contracts deployed but then also having the indexer and then integrated in the SDK if I understood well."
    }
   ]
  },
  {
   "id": 4371,
   "type": "message",
   "date": "2024-07-23T21:21:53",
   "date_unixtime": "1721749913",
   "edited": "2024-07-23T23:27:23",
   "edited_unixtime": "1721757443",
   "from": "Daniel Ospina",
   "from_id": "user551595722",
   "text": [
    "For anyone looking for extra funding for their project :)\n",
    {
     "type": "text_link",
     "text": "https://x.com/RnDAO__/status/1815764304504717728?t=qYDVFmxOlvfid0HxcBzX8g&s=19",
     "href": "https://x.com/RnDAO__/status/1815764304504717728?t=qYDVFmxOlvfid0HxcBzX8g&s=19"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "For anyone looking for extra funding for their project :)\n"
    },
    {
     "type": "text_link",
     "text": "https://x.com/RnDAO__/status/1815764304504717728?t=qYDVFmxOlvfid0HxcBzX8g&s=19",
     "href": "https://x.com/RnDAO__/status/1815764304504717728?t=qYDVFmxOlvfid0HxcBzX8g&s=19"
    }
   ]
  },
  {
   "id": 4372,
   "type": "service",
   "date": "2024-07-24T09:38:46",
   "date_unixtime": "1721794126",
   "actor": "Carl | Scroll",
   "actor_id": "user219439975",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4373,
   "type": "service",
   "date": "2024-07-24T16:22:37",
   "date_unixtime": "1721818357",
   "actor": "Doruk İşmen",
   "actor_id": "user432964515",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4374,
   "type": "message",
   "date": "2024-07-25T15:34:33",
   "date_unixtime": "1721901873",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Hi everyone,\nConcerning adoption, I am sometimes wondering if the project is dead. The explorer is missing some testnets, according the doc, you should use the the explorer URL to use qraphQL. So we can use EAS and do tests only on Ethereum (forget it, too expensive), Base, Optimism and Scroll.\nThe forum looks dead and nobody updates the doc...\nWhat's going on guys?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi everyone,\nConcerning adoption, I am sometimes wondering if the project is dead. The explorer is missing some testnets, according the doc, you should use the the explorer URL to use qraphQL. So we can use EAS and do tests only on Ethereum (forget it, too expensive), Base, Optimism and Scroll.\nThe forum looks dead and nobody updates the doc...\nWhat's going on guys?"
    }
   ]
  },
  {
   "id": 4375,
   "type": "message",
   "date": "2024-07-25T16:08:44",
   "date_unixtime": "1721903924",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4374,
   "text": [
    "The project is far from being dead. We are actually working around the clock on many initiatives (voluntarily with almost no funding, btw). \n\nYou can see all the available testnets here: ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts?tab=readme-ov-file#deployments"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "The project is far from being dead. We are actually working around the clock on many initiatives (voluntarily with almost no funding, btw). \n\nYou can see all the available testnets here: "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts?tab=readme-ov-file#deployments"
    }
   ]
  },
  {
   "id": 4376,
   "type": "message",
   "date": "2024-07-25T16:09:46",
   "date_unixtime": "1721903986",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "We aren’t rushing to deploy on every testnet and network since it’s very taxing and distracting, so we are trying to focus more on networks that promote adoption",
   "text_entities": [
    {
     "type": "plain",
     "text": "We aren’t rushing to deploy on every testnet and network since it’s very taxing and distracting, so we are trying to focus more on networks that promote adoption"
    }
   ]
  },
  {
   "id": 4377,
   "type": "message",
   "date": "2024-07-25T16:14:12",
   "date_unixtime": "1721904252",
   "edited": "2024-07-25T16:14:55",
   "edited_unixtime": "1721904295",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4376,
   "text": "I agree but then you can document how to deploy and let the community do it.\nThat's what I would like to do again on Arthera and Fuse for example.\nAnd I could record it also to make material for others to follow instead of waiting for you to document it.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I agree but then you can document how to deploy and let the community do it.\nThat's what I would like to do again on Arthera and Fuse for example.\nAnd I could record it also to make material for others to follow instead of waiting for you to document it."
    }
   ]
  },
  {
   "id": 4378,
   "type": "message",
   "date": "2024-07-25T16:14:54",
   "date_unixtime": "1721904294",
   "edited": "2024-07-25T16:15:05",
   "edited_unixtime": "1721904305",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4377,
   "text": "Deploying is the easiest part",
   "text_entities": [
    {
     "type": "plain",
     "text": "Deploying is the easiest part"
    }
   ]
  },
  {
   "id": 4379,
   "type": "message",
   "date": "2024-07-25T16:15:20",
   "date_unixtime": "1721904320",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4378,
   "text": "yes that's what I experienced with the contracts deployment.",
   "text_entities": [
    {
     "type": "plain",
     "text": "yes that's what I experienced with the contracts deployment."
    }
   ]
  },
  {
   "id": 4380,
   "type": "message",
   "date": "2024-07-25T16:16:30",
   "date_unixtime": "1721904390",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "Every deployment generates dozens of hours of support, frontend, backend, devops, helping out in hackathons, and so on. This is what we can’t afford.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Every deployment generates dozens of hours of support, frontend, backend, devops, helping out in hackathons, and so on. This is what we can’t afford."
    }
   ]
  },
  {
   "id": 4381,
   "type": "message",
   "date": "2024-07-25T16:16:40",
   "date_unixtime": "1721904400",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4376,
   "text": "That's why I promoted Celo where EAS is already officially fully deployed.",
   "text_entities": [
    {
     "type": "plain",
     "text": "That's why I promoted Celo where EAS is already officially fully deployed."
    }
   ]
  },
  {
   "id": 4382,
   "type": "message",
   "date": "2024-07-25T16:16:48",
   "date_unixtime": "1721904408",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "But everyone is more than welcome to deploy",
   "text_entities": [
    {
     "type": "plain",
     "text": "But everyone is more than welcome to deploy"
    }
   ]
  },
  {
   "id": 4383,
   "type": "message",
   "date": "2024-07-25T16:17:05",
   "date_unixtime": "1721904425",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "It’s just that we won’t be able to officially support every deployment as a team",
   "text_entities": [
    {
     "type": "plain",
     "text": "It’s just that we won’t be able to officially support every deployment as a team"
    }
   ]
  },
  {
   "id": 4384,
   "type": "message",
   "date": "2024-07-25T16:18:03",
   "date_unixtime": "1721904483",
   "edited": "2024-07-25T16:18:41",
   "edited_unixtime": "1721904521",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4381,
   "text": "And there is almost no activity on Celo, btw. So it’s a good example of a deployment we should’ve postponed until receiving support from the Celo team",
   "text_entities": [
    {
     "type": "plain",
     "text": "And there is almost no activity on Celo, btw. So it’s a good example of a deployment we should’ve postponed until receiving support from the Celo team"
    }
   ]
  },
  {
   "id": 4385,
   "type": "message",
   "date": "2024-07-25T16:19:01",
   "date_unixtime": "1721904541",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "In any case, these are my two cents",
   "text_entities": [
    {
     "type": "plain",
     "text": "In any case, these are my two cents"
    }
   ]
  },
  {
   "id": 4386,
   "type": "message",
   "date": "2024-07-25T16:19:05",
   "date_unixtime": "1721904545",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "Now back to work",
   "text_entities": [
    {
     "type": "plain",
     "text": "Now back to work"
    }
   ]
  },
  {
   "id": 4387,
   "type": "message",
   "date": "2024-07-25T16:19:29",
   "date_unixtime": "1721904569",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4380,
   "text": "thanks for explaining in more details your perspective.",
   "text_entities": [
    {
     "type": "plain",
     "text": "thanks for explaining in more details your perspective."
    }
   ]
  },
  {
   "id": 4388,
   "type": "message",
   "date": "2024-07-25T16:21:02",
   "date_unixtime": "1721904662",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4387,
   "text": "If Arthera or Fuse are interested for EAS to be officially deployed, maintained, and supported - please ask them to talk to us and plan this properly",
   "text_entities": [
    {
     "type": "plain",
     "text": "If Arthera or Fuse are interested for EAS to be officially deployed, maintained, and supported - please ask them to talk to us and plan this properly"
    }
   ]
  },
  {
   "id": 4389,
   "type": "message",
   "date": "2024-07-25T16:26:18",
   "date_unixtime": "1721904978",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4384,
   "text": "That's why I would like to help projects to integrate EAS on Celo to create activity there.",
   "text_entities": [
    {
     "type": "plain",
     "text": "That's why I would like to help projects to integrate EAS on Celo to create activity there."
    }
   ]
  },
  {
   "id": 4390,
   "type": "message",
   "date": "2024-07-25T16:26:47",
   "date_unixtime": "1721905007",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4389,
   "text": "This will be very appreciated",
   "text_entities": [
    {
     "type": "plain",
     "text": "This will be very appreciated"
    }
   ]
  },
  {
   "id": 4391,
   "type": "message",
   "date": "2024-07-25T16:27:25",
   "date_unixtime": "1721905045",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4388,
   "text": "that's what we tried from Arthera side but I would prefer first to deploy by myself and ask for support if needed.",
   "text_entities": [
    {
     "type": "plain",
     "text": "that's what we tried from Arthera side but I would prefer first to deploy by myself and ask for support if needed."
    }
   ]
  },
  {
   "id": 4392,
   "type": "message",
   "date": "2024-07-25T16:27:44",
   "date_unixtime": "1721905064",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "We should keep focusing on adoption and promotion. Only deploying on thousands of networks will kill the project",
   "text_entities": [
    {
     "type": "plain",
     "text": "We should keep focusing on adoption and promotion. Only deploying on thousands of networks will kill the project"
    }
   ]
  },
  {
   "id": 4393,
   "type": "message",
   "date": "2024-07-25T16:28:13",
   "date_unixtime": "1721905093",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4391,
   "text": "The contracts are fully open source and the SDK is robust, so everyone can deploy",
   "text_entities": [
    {
     "type": "plain",
     "text": "The contracts are fully open source and the SDK is robust, so everyone can deploy"
    }
   ]
  },
  {
   "id": 4394,
   "type": "message",
   "date": "2024-07-25T16:29:00",
   "date_unixtime": "1721905140",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "But we can’t fully support every deployment within a justifiable reason. In theory, we would love to. In practice, it’s just impossible",
   "text_entities": [
    {
     "type": "plain",
     "text": "But we can’t fully support every deployment within a justifiable reason. In theory, we would love to. In practice, it’s just impossible"
    }
   ]
  },
  {
   "id": 4395,
   "type": "message",
   "date": "2024-07-25T16:29:06",
   "date_unixtime": "1721905146",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4393,
   "text": "Cool, so I wll do again the deployment of contracts, this time on Arthera Mainnet as I recorded before on Arthera Testnet.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Cool, so I wll do again the deployment of contracts, this time on Arthera Mainnet as I recorded before on Arthera Testnet."
    }
   ]
  },
  {
   "id": 4396,
   "type": "message",
   "date": "2024-07-25T16:29:25",
   "date_unixtime": "1721905165",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "I’m sorry that this is how it is",
   "text_entities": [
    {
     "type": "plain",
     "text": "I’m sorry that this is how it is"
    }
   ]
  },
  {
   "id": 4397,
   "type": "message",
   "date": "2024-07-25T16:30:04",
   "date_unixtime": "1721905204",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4395,
   "text": "Go ahead, but please don’t expect us officiating supporting it",
   "text_entities": [
    {
     "type": "plain",
     "text": "Go ahead, but please don’t expect us officiating supporting it"
    }
   ]
  },
  {
   "id": 4398,
   "type": "message",
   "date": "2024-07-25T16:30:12",
   "date_unixtime": "1721905212",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "We are stretched too thin",
   "text_entities": [
    {
     "type": "plain",
     "text": "We are stretched too thin"
    }
   ]
  },
  {
   "id": 4399,
   "type": "message",
   "date": "2024-07-25T16:30:40",
   "date_unixtime": "1721905240",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "Please ask Arthera team to reach out and we will try to help",
   "text_entities": [
    {
     "type": "plain",
     "text": "Please ask Arthera team to reach out and we will try to help"
    }
   ]
  },
  {
   "id": 4400,
   "type": "message",
   "date": "2024-07-25T16:30:57",
   "date_unixtime": "1721905257",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "Only deploying the contracts is not as helpful as it sounds",
   "text_entities": [
    {
     "type": "plain",
     "text": "Only deploying the contracts is not as helpful as it sounds"
    }
   ]
  },
  {
   "id": 4401,
   "type": "message",
   "date": "2024-07-25T16:30:57",
   "date_unixtime": "1721905257",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4397,
   "text": "so it means I would have to fork the SDK and make a version specific to unsupported chains ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "so it means I would have to fork the SDK and make a version specific to unsupported chains ?"
    }
   ]
  },
  {
   "id": 4402,
   "type": "message",
   "date": "2024-07-25T16:31:23",
   "date_unixtime": "1721905283",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4401,
   "text": "The SDK already supports EVM chains",
   "text_entities": [
    {
     "type": "plain",
     "text": "The SDK already supports EVM chains"
    }
   ]
  },
  {
   "id": 4403,
   "type": "message",
   "date": "2024-07-25T16:31:51",
   "date_unixtime": "1721905311",
   "edited": "2024-07-25T16:32:23",
   "edited_unixtime": "1721905343",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "Anyway, good luck. I would still recommend asking them to reach out",
   "text_entities": [
    {
     "type": "plain",
     "text": "Anyway, good luck. I would still recommend asking them to reach out"
    }
   ]
  },
  {
   "id": 4404,
   "type": "message",
   "date": "2024-07-25T16:31:55",
   "date_unixtime": "1721905315",
   "edited": "2024-07-25T16:32:41",
   "edited_unixtime": "1721905361",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "I have to go back to work",
   "text_entities": [
    {
     "type": "plain",
     "text": "I have to go back to work"
    }
   ]
  },
  {
   "id": 4405,
   "type": "message",
   "date": "2024-07-25T16:32:07",
   "date_unixtime": "1721905327",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4399,
   "text": "I'm the Integration Engineer of Arthera team. It's me who integrates opensource projects on Arthera EVM chain as I've done before on Fuse EVM chain.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I'm the Integration Engineer of Arthera team. It's me who integrates opensource projects on Arthera EVM chain as I've done before on Fuse EVM chain."
    }
   ]
  },
  {
   "id": 4406,
   "type": "message",
   "date": "2024-07-25T16:32:51",
   "date_unixtime": "1721905371",
   "edited": "2024-07-25T16:33:03",
   "edited_unixtime": "1721905383",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Thanks a lot for explaining. I had the feeling it lacks funding. I guess it's too late, all the money goes to AI now 😅",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks a lot for explaining. I had the feeling it lacks funding. I guess it's too late, all the money goes to AI now 😅"
    }
   ]
  },
  {
   "id": 4407,
   "type": "message",
   "date": "2024-07-25T16:33:12",
   "date_unixtime": "1721905392",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4374,
   "text": "which testnet are you missing ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "which testnet are you missing ?"
    }
   ]
  },
  {
   "id": 4408,
   "type": "message",
   "date": "2024-07-25T16:33:16",
   "date_unixtime": "1721905396",
   "edited": "2024-07-25T16:33:42",
   "edited_unixtime": "1721905422",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Anyway, you are doing great. Congrats!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Anyway, you are doing great. Congrats!"
    }
   ]
  },
  {
   "id": 4409,
   "type": "message",
   "date": "2024-07-25T16:33:57",
   "date_unixtime": "1721905437",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "We have lots of interest and activities",
   "text_entities": [
    {
     "type": "plain",
     "text": "We have lots of interest and activities"
    }
   ]
  },
  {
   "id": 4410,
   "type": "message",
   "date": "2024-07-25T16:34:05",
   "date_unixtime": "1721905445",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 4407,
   "text": "I'd love the polygon explorer. Without it, can I use graphQL?",
   "text_entities": [
    {
     "type": "plain",
     "text": "I'd love the polygon explorer. Without it, can I use graphQL?"
    }
   ]
  },
  {
   "id": 4411,
   "type": "message",
   "date": "2024-07-25T16:34:28",
   "date_unixtime": "1721905468",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "I mean on amyo",
   "text_entities": [
    {
     "type": "plain",
     "text": "I mean on amyo"
    }
   ]
  },
  {
   "id": 4412,
   "type": "message",
   "date": "2024-07-25T16:34:41",
   "date_unixtime": "1721905481",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Amoy testnet",
   "text_entities": [
    {
     "type": "plain",
     "text": "Amoy testnet"
    }
   ]
  },
  {
   "id": 4413,
   "type": "message",
   "date": "2024-07-25T16:35:16",
   "date_unixtime": "1721905516",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4412,
   "text": "have you checked the GitHub deployments link to check if it's officially deployed there already ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "have you checked the GitHub deployments link to check if it's officially deployed there already ?"
    }
   ]
  },
  {
   "id": 4414,
   "type": "message",
   "date": "2024-07-25T16:36:08",
   "date_unixtime": "1721905568",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "I already searched a bit, but lost my way and didn't find",
   "text_entities": [
    {
     "type": "plain",
     "text": "I already searched a bit, but lost my way and didn't find"
    }
   ]
  },
  {
   "id": 4415,
   "type": "message",
   "date": "2024-07-25T16:36:15",
   "date_unixtime": "1721905575",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4414,
   "text": [
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts?tab=readme-ov-file#polygon-amoy"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts?tab=readme-ov-file#polygon-amoy"
    }
   ]
  },
  {
   "id": 4416,
   "type": "message",
   "date": "2024-07-25T16:36:44",
   "date_unixtime": "1721905604",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4415,
   "text": "thanks, that was I was going to send too",
   "text_entities": [
    {
     "type": "plain",
     "text": "thanks, that was I was going to send too"
    }
   ]
  },
  {
   "id": 4417,
   "type": "message",
   "date": "2024-07-25T16:36:45",
   "date_unixtime": "1721905605",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Yes, this is not the explorer",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes, this is not the explorer"
    }
   ]
  },
  {
   "id": 4418,
   "type": "message",
   "date": "2024-07-25T16:37:59",
   "date_unixtime": "1721905679",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": [
    "Here (",
    {
     "type": "link",
     "text": "https://easscan.org/"
    },
    ") I see polygon mumbai (",
    {
     "type": "link",
     "text": "https://polygon-mumbai.easscan.org/"
    },
    ") but that's deprecated."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Here ("
    },
    {
     "type": "link",
     "text": "https://easscan.org/"
    },
    {
     "type": "plain",
     "text": ") I see polygon mumbai ("
    },
    {
     "type": "link",
     "text": "https://polygon-mumbai.easscan.org/"
    },
    {
     "type": "plain",
     "text": ") but that's deprecated."
    }
   ]
  },
  {
   "id": 4419,
   "type": "message",
   "date": "2024-07-25T16:39:06",
   "date_unixtime": "1721905746",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": [
    "This URL doesn't exist: ",
    {
     "type": "link",
     "text": "polygon-amoy.easscan.org"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "This URL doesn't exist: "
    },
    {
     "type": "link",
     "text": "polygon-amoy.easscan.org"
    }
   ]
  },
  {
   "id": 4420,
   "type": "message",
   "date": "2024-07-25T16:39:57",
   "date_unixtime": "1721905797",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4419,
   "text": "Yeah, it’s not trivial to spin easscan for every chain. If you ate looking for a testnet with an explorer, you can use Sepolia",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yeah, it’s not trivial to spin easscan for every chain. If you ate looking for a testnet with an explorer, you can use Sepolia"
    }
   ]
  },
  {
   "id": 4421,
   "type": "message",
   "date": "2024-07-25T16:40:16",
   "date_unixtime": "1721905816",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4418,
   "text": [
    "Pinging ",
    {
     "type": "mention",
     "text": "@stevedakh"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Pinging "
    },
    {
     "type": "mention",
     "text": "@stevedakh"
    }
   ]
  },
  {
   "id": 4422,
   "type": "message",
   "date": "2024-07-25T16:40:16",
   "date_unixtime": "1721905816",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": [
    "Maybe you mean that I should understand that given that (",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts?tab=readme-ov-file#polygon-amoy"
    },
    ") I can still use the GraphQL API.\n🤔"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Maybe you mean that I should understand that given that ("
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts?tab=readme-ov-file#polygon-amoy"
    },
    {
     "type": "plain",
     "text": ") I can still use the GraphQL API.\n🤔"
    }
   ]
  },
  {
   "id": 4423,
   "type": "message",
   "date": "2024-07-25T16:40:23",
   "date_unixtime": "1721905823",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4420,
   "text": "is it documented somewhere how to do it ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "is it documented somewhere how to do it ?"
    }
   ]
  },
  {
   "id": 4424,
   "type": "message",
   "date": "2024-07-25T16:40:51",
   "date_unixtime": "1721905851",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4423,
   "text": "No, easscan isn’t open source. It’s an app we maintain ourselves.",
   "text_entities": [
    {
     "type": "plain",
     "text": "No, easscan isn’t open source. It’s an app we maintain ourselves."
    }
   ]
  },
  {
   "id": 4425,
   "type": "message",
   "date": "2024-07-25T16:41:42",
   "date_unixtime": "1721905902",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "reply_to_message_id": 4420,
   "text": "Sepolia! OMG, my customers are not millionaires",
   "text_entities": [
    {
     "type": "plain",
     "text": "Sepolia! OMG, my customers are not millionaires"
    }
   ]
  },
  {
   "id": 4426,
   "type": "message",
   "date": "2024-07-25T16:42:07",
   "date_unixtime": "1721905927",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4425,
   "text": "What do you mean? It’s a testnet",
   "text_entities": [
    {
     "type": "plain",
     "text": "What do you mean? It’s a testnet"
    }
   ]
  },
  {
   "id": 4427,
   "type": "message",
   "date": "2024-07-25T16:42:13",
   "date_unixtime": "1721905933",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "If you mean Ethereum Sepolia",
   "text_entities": [
    {
     "type": "plain",
     "text": "If you mean Ethereum Sepolia"
    }
   ]
  },
  {
   "id": 4428,
   "type": "message",
   "date": "2024-07-25T16:42:26",
   "date_unixtime": "1721905946",
   "edited": "2024-07-25T16:47:13",
   "edited_unixtime": "1721906233",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "You can get lots of free Sepolia ETH from faucets",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can get lots of free Sepolia ETH from faucets"
    }
   ]
  },
  {
   "id": 4429,
   "type": "message",
   "date": "2024-07-25T16:42:32",
   "date_unixtime": "1721905952",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4427,
   "text": "Of course",
   "text_entities": [
    {
     "type": "plain",
     "text": "Of course"
    }
   ]
  },
  {
   "id": 4430,
   "type": "message",
   "date": "2024-07-25T16:42:59",
   "date_unixtime": "1721905979",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "Like testing on Ethereum Sepolia and running on Polygon?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Like testing on Ethereum Sepolia and running on Polygon?"
    }
   ]
  },
  {
   "id": 4431,
   "type": "message",
   "date": "2024-07-25T16:43:29",
   "date_unixtime": "1721906009",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "I made  1schema on Eth Sepolia, it took so much of my fake ETH. Can't work like that",
   "text_entities": [
    {
     "type": "plain",
     "text": "I made  1schema on Eth Sepolia, it took so much of my fake ETH. Can't work like that"
    }
   ]
  },
  {
   "id": 4432,
   "type": "message",
   "date": "2024-07-25T16:43:36",
   "date_unixtime": "1721906016",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4430,
   "text": "Only for testing. If you need a testnet with an explorer, it’s a good option",
   "text_entities": [
    {
     "type": "plain",
     "text": "Only for testing. If you need a testnet with an explorer, it’s a good option"
    }
   ]
  },
  {
   "id": 4433,
   "type": "message",
   "date": "2024-07-25T16:43:50",
   "date_unixtime": "1721906030",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4431,
   "text": "It doesn’t make sense",
   "text_entities": [
    {
     "type": "plain",
     "text": "It doesn’t make sense"
    }
   ]
  },
  {
   "id": 4434,
   "type": "message",
   "date": "2024-07-25T16:44:05",
   "date_unixtime": "1721906045",
   "edited": "2024-07-25T16:44:44",
   "edited_unixtime": "1721906084",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "You can get lots of Sepolia ETH",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can get lots of Sepolia ETH"
    }
   ]
  },
  {
   "id": 4435,
   "type": "message",
   "date": "2024-07-25T16:44:11",
   "date_unixtime": "1721906051",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "To last you for years",
   "text_entities": [
    {
     "type": "plain",
     "text": "To last you for years"
    }
   ]
  },
  {
   "id": 4436,
   "type": "message",
   "date": "2024-07-25T16:44:16",
   "date_unixtime": "1721906056",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "It’s not Goerli",
   "text_entities": [
    {
     "type": "plain",
     "text": "It’s not Goerli"
    }
   ]
  },
  {
   "id": 4437,
   "type": "message",
   "date": "2024-07-25T16:44:21",
   "date_unixtime": "1721906061",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "ah... then I will try more and let you back to work...",
   "text_entities": [
    {
     "type": "plain",
     "text": "ah... then I will try more and let you back to work..."
    }
   ]
  },
  {
   "id": 4438,
   "type": "message",
   "date": "2024-07-25T16:44:31",
   "date_unixtime": "1721906071",
   "from": "Leo",
   "from_id": "user89303955",
   "text": "Anyway, I got to go. Please give it a shot",
   "text_entities": [
    {
     "type": "plain",
     "text": "Anyway, I got to go. Please give it a shot"
    }
   ]
  },
  {
   "id": 4439,
   "type": "message",
   "date": "2024-07-25T16:44:36",
   "date_unixtime": "1721906076",
   "edited": "2024-07-25T16:44:47",
   "edited_unixtime": "1721906087",
   "from": "80726 Vince",
   "from_id": "user989981110",
   "text": "I apreciate that you give a bit of your time. Thanks 1000 times!",
   "text_entities": [
    {
     "type": "plain",
     "text": "I apreciate that you give a bit of your time. Thanks 1000 times!"
    }
   ]
  },
  {
   "id": 4440,
   "type": "service",
   "date": "2024-07-26T06:24:56",
   "date_unixtime": "1721955296",
   "actor": "Marcos Más",
   "actor_id": "user415989445",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4441,
   "type": "message",
   "date": "2024-07-26T19:04:28",
   "date_unixtime": "1722000868",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "Scroll is hosting a twitter spaces about their new product Scroll Canvas! Come listen in 🙂 ",
    {
     "type": "link",
     "text": "https://x.com/i/spaces/1OyKAZwqyWrGb"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Scroll is hosting a twitter spaces about their new product Scroll Canvas! Come listen in 🙂 "
    },
    {
     "type": "link",
     "text": "https://x.com/i/spaces/1OyKAZwqyWrGb"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 4442,
   "type": "message",
   "date": "2024-07-26T21:08:11",
   "date_unixtime": "1722008291",
   "from": "Will T",
   "from_id": "user963364415",
   "reply_to_message_id": 4441,
   "text": "It was a great space, learned tons",
   "text_entities": [
    {
     "type": "plain",
     "text": "It was a great space, learned tons"
    }
   ]
  },
  {
   "id": 4443,
   "type": "service",
   "date": "2024-07-27T00:46:46",
   "date_unixtime": "1722021406",
   "actor": "Ishan Lakhwani",
   "actor_id": "user967674739",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4444,
   "type": "message",
   "date": "2024-07-27T13:23:19",
   "date_unixtime": "1722066799",
   "from": "Aniya✨",
   "from_id": "user6774630913",
   "text": "Hey everyone,\n\nIf you need PR services, I can help you out at great prices. Feel free to reach out!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey everyone,\n\nIf you need PR services, I can help you out at great prices. Feel free to reach out!"
    }
   ]
  },
  {
   "id": 4445,
   "type": "service",
   "date": "2024-07-29T16:31:17",
   "date_unixtime": "1722250877",
   "actor": "behkod",
   "actor_id": "user6543811020",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4446,
   "type": "service",
   "date": "2024-07-29T17:32:59",
   "date_unixtime": "1722254579",
   "actor": "Gautam",
   "actor_id": "user728300669",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4447,
   "type": "message",
   "date": "2024-07-30T23:03:10",
   "date_unixtime": "1722360790",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "ETHGlobal's Superhack starts August 2nd! Jump into this twitter spaces to learn more about it! ",
    {
     "type": "link",
     "text": "https://x.com/i/spaces/1kvKpbDZQrDJE"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "ETHGlobal's Superhack starts August 2nd! Jump into this twitter spaces to learn more about it! "
    },
    {
     "type": "link",
     "text": "https://x.com/i/spaces/1kvKpbDZQrDJE"
    }
   ]
  },
  {
   "id": 4450,
   "type": "service",
   "date": "2024-07-31T17:22:37",
   "date_unixtime": "1722426757",
   "actor": "Raj",
   "actor_id": "user732622651",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4451,
   "type": "service",
   "date": "2024-08-01T05:38:02",
   "date_unixtime": "1722470882",
   "actor": "Donna",
   "actor_id": "user1611688709",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4452,
   "type": "service",
   "date": "2024-08-01T12:53:49",
   "date_unixtime": "1722497029",
   "actor": "Enzo",
   "actor_id": "user5227220353",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4453,
   "type": "message",
   "date": "2024-08-01T23:31:29",
   "date_unixtime": "1722535289",
   "from": "Enzo",
   "from_id": "user5227220353",
   "text": [
    {
     "type": "mention",
     "text": "@lbeder"
    },
    " ",
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    " ",
    {
     "type": "mention",
     "text": "@brycealan"
    },
    " DM check please"
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@lbeder"
    },
    {
     "type": "plain",
     "text": " "
    },
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    {
     "type": "plain",
     "text": " "
    },
    {
     "type": "mention",
     "text": "@brycealan"
    },
    {
     "type": "plain",
     "text": " DM check please"
    }
   ]
  },
  {
   "id": 4454,
   "type": "service",
   "date": "2024-08-02T10:32:51",
   "date_unixtime": "1722574971",
   "actor": "diya Gupta",
   "actor_id": "user5494132231",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4455,
   "type": "service",
   "date": "2024-08-02T16:14:53",
   "date_unixtime": "1722595493",
   "actor": "Shivansh Chauhan",
   "actor_id": "user5426732793",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4456,
   "type": "service",
   "date": "2024-08-02T20:57:01",
   "date_unixtime": "1722612421",
   "actor": "Calvin",
   "actor_id": "user1091805218",
   "action": "invite_members",
   "members": [
    "Aryan"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4457,
   "type": "message",
   "date": "2024-08-02T22:00:48",
   "date_unixtime": "1722616248",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "text": "Hackathon winners announced today?\nExcited 😁",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hackathon winners announced today?\nExcited 😁"
    }
   ]
  },
  {
   "id": 4458,
   "type": "service",
   "date": "2024-08-03T00:00:19",
   "date_unixtime": "1722623419",
   "actor": "Aryan",
   "actor_id": "user2017810679",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4459,
   "type": "service",
   "date": "2024-08-03T01:20:18",
   "date_unixtime": "1722628218",
   "actor": "hfst 999",
   "actor_id": "user6387756674",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4460,
   "type": "message",
   "date": "2024-08-03T01:23:47",
   "date_unixtime": "1722628427",
   "edited": "2024-08-04T04:10:04",
   "edited_unixtime": "1722724804",
   "from": "Aryan",
   "from_id": "user2111328020",
   "text": [
    "Hey ",
    {
     "type": "mention",
     "text": "@brycealan"
    },
    ", I am a participant of Superhack and have some doubts/questions regarding my project. Can I DM you?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey "
    },
    {
     "type": "mention",
     "text": "@brycealan"
    },
    {
     "type": "plain",
     "text": ", I am a participant of Superhack and have some doubts/questions regarding my project. Can I DM you?"
    }
   ]
  },
  {
   "id": 4461,
   "type": "message",
   "date": "2024-08-03T12:35:03",
   "date_unixtime": "1722668703",
   "from": "Mr.Manav",
   "from_id": "user1374734517",
   "text": "When and where hackathon winners will announce?",
   "text_entities": [
    {
     "type": "plain",
     "text": "When and where hackathon winners will announce?"
    }
   ]
  },
  {
   "id": 4462,
   "type": "service",
   "date": "2024-08-03T13:04:49",
   "date_unixtime": "1722670489",
   "actor": "Koushith.eth",
   "actor_id": "user614575266",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4463,
   "type": "message",
   "date": "2024-08-03T13:32:17",
   "date_unixtime": "1722672137",
   "from": "diya Gupta",
   "from_id": "user5494132231",
   "text": "when will the result come???",
   "text_entities": [
    {
     "type": "plain",
     "text": "when will the result come???"
    }
   ]
  },
  {
   "id": 4464,
   "type": "message",
   "date": "2024-08-03T16:40:27",
   "date_unixtime": "1722683427",
   "from": "Shivansh Chauhan",
   "from_id": "user5426732793",
   "reply_to_message_id": 4463,
   "text": "Admins Reply ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Admins Reply ?"
    }
   ]
  },
  {
   "id": 4465,
   "type": "message",
   "date": "2024-08-03T18:17:41",
   "date_unixtime": "1722689261",
   "from": "Mr.Manav",
   "from_id": "user1374734517",
   "text": "Give us the update about the hackathon",
   "text_entities": [
    {
     "type": "plain",
     "text": "Give us the update about the hackathon"
    }
   ]
  },
  {
   "id": 4466,
   "type": "message",
   "date": "2024-08-03T18:51:54",
   "date_unixtime": "1722691314",
   "from": "diya Gupta",
   "from_id": "user5494132231",
   "reply_to_message_id": 4464,
   "text": "No",
   "text_entities": [
    {
     "type": "plain",
     "text": "No"
    }
   ]
  },
  {
   "id": 4467,
   "type": "message",
   "date": "2024-08-03T20:13:18",
   "date_unixtime": "1722696198",
   "edited": "2024-08-04T00:29:24",
   "edited_unixtime": "1722711564",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "text": "Guys, sorry for the delay but please don’t worry. Results will be available soon (most likely today). Team has been stretched really thin recently.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Guys, sorry for the delay but please don’t worry. Results will be available soon (most likely today). Team has been stretched really thin recently."
    }
   ]
  },
  {
   "id": 4468,
   "type": "message",
   "date": "2024-08-04T00:29:45",
   "date_unixtime": "1722711585",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4467,
   "text": "thanks for heads up! have a good weekend",
   "text_entities": [
    {
     "type": "plain",
     "text": "thanks for heads up! have a good weekend"
    }
   ]
  },
  {
   "id": 4469,
   "type": "service",
   "date": "2024-08-04T00:58:35",
   "date_unixtime": "1722713315",
   "actor": "Swaroop Reddy Basireddy",
   "actor_id": "user1672549403",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4470,
   "type": "service",
   "date": "2024-08-04T03:26:09",
   "date_unixtime": "1722722169",
   "actor": "𝕲𝖞𝖑𝖒𝖆𝖓 | 𝕽𝖆𝖉𝖎𝖚𝖘",
   "actor_id": "user830808670",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4471,
   "type": "message",
   "date": "2024-08-04T06:41:05",
   "date_unixtime": "1722733865",
   "from": "Koushith.eth",
   "from_id": "user614575266",
   "text": "Hello, quick question: is EAS scan is open sourced? I couldn’t find the repo.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello, quick question: is EAS scan is open sourced? I couldn’t find the repo."
    }
   ]
  },
  {
   "id": 4472,
   "type": "service",
   "date": "2024-08-04T06:57:23",
   "date_unixtime": "1722734843",
   "actor": "MG",
   "actor_id": "user1968916635",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4473,
   "type": "message",
   "date": "2024-08-04T07:15:20",
   "date_unixtime": "1722735920",
   "from": "MG",
   "from_id": "user1968916635",
   "reply_to_message_id": 2,
   "text": "Question about the privateData class: How do I generate a multiProof after I have already made an attestation? AFIAK the docs only mention creating the multiProof at the time of attestation.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Question about the privateData class: How do I generate a multiProof after I have already made an attestation? AFIAK the docs only mention creating the multiProof at the time of attestation."
    }
   ]
  },
  {
   "id": 4474,
   "type": "message",
   "date": "2024-08-04T07:15:33",
   "date_unixtime": "1722735933",
   "from": "MG",
   "from_id": "user1968916635",
   "reply_to_message_id": 2,
   "text": "I assume there has to be a way for the attestor to pass in the UID of the attestation to create the multiproof after the attestation has occurred.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I assume there has to be a way for the attestor to pass in the UID of the attestation to create the multiproof after the attestation has occurred."
    }
   ]
  },
  {
   "id": 4475,
   "type": "message",
   "date": "2024-08-04T07:16:12",
   "date_unixtime": "1722735972",
   "from": "MG",
   "from_id": "user1968916635",
   "reply_to_message_id": 2,
   "text": "Bonus points if you can elaborate on whether or not the recipient of an attestation w/ the privateData class is able to generate a multiproof themselves.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Bonus points if you can elaborate on whether or not the recipient of an attestation w/ the privateData class is able to generate a multiproof themselves."
    }
   ]
  },
  {
   "id": 4476,
   "type": "message",
   "date": "2024-08-04T07:17:16",
   "date_unixtime": "1722736036",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4471,
   "text": "Hey! It’s a private repo. Are you looking for support on something specific?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey! It’s a private repo. Are you looking for support on something specific?"
    }
   ]
  },
  {
   "id": 4477,
   "type": "message",
   "date": "2024-08-04T08:44:33",
   "date_unixtime": "1722741273",
   "from": "Rookie",
   "from_id": "user5373031681",
   "reply_to_message_id": 2,
   "text": "Hello",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello"
    }
   ]
  },
  {
   "id": 4478,
   "type": "message",
   "date": "2024-08-04T08:44:41",
   "date_unixtime": "1722741281",
   "from": "Rookie",
   "from_id": "user5373031681",
   "reply_to_message_id": 2,
   "text": "any plans to deploy in dango ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "any plans to deploy in dango ?"
    }
   ]
  },
  {
   "id": 4479,
   "type": "service",
   "date": "2024-08-04T10:14:48",
   "date_unixtime": "1722746688",
   "actor": "Lynn",
   "actor_id": "user1105417340",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4480,
   "type": "service",
   "date": "2024-08-04T10:15:03",
   "date_unixtime": "1722746703",
   "actor": "Lynn",
   "actor_id": "user1105417340",
   "action": "invite_members",
   "members": [
    "Alex Chen"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4481,
   "type": "service",
   "date": "2024-08-04T14:50:26",
   "date_unixtime": "1722763226",
   "actor": "Sweta Shaw 🥕",
   "actor_id": "user921462201",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4482,
   "type": "message",
   "date": "2024-08-04T15:48:57",
   "date_unixtime": "1722766737",
   "from": "Lynn",
   "from_id": "user1105417340",
   "reply_to_message_id": 4447,
   "text": [
    "building a product integrating EAS. superhack time doesn't work out w/ us. will u guys have bounty for ethonline 2024 one: ",
    {
     "type": "link",
     "text": "https://ethglobal.com/events/ethonline2024"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "building a product integrating EAS. superhack time doesn't work out w/ us. will u guys have bounty for ethonline 2024 one: "
    },
    {
     "type": "link",
     "text": "https://ethglobal.com/events/ethonline2024"
    }
   ]
  },
  {
   "id": 4483,
   "type": "message",
   "date": "2024-08-04T16:18:43",
   "date_unixtime": "1722768523",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4478,
   "text": "Hello, the contracts are opensourced and I have confirmed I have been able to deploy them on another testnet.\nAs Dango is an OpStack it may have EAS pre-deployed as for other Superchains.\nI can try to deploy the contracts on Dango if you want.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello, the contracts are opensourced and I have confirmed I have been able to deploy them on another testnet.\nAs Dango is an OpStack it may have EAS pre-deployed as for other Superchains.\nI can try to deploy the contracts on Dango if you want."
    }
   ]
  },
  {
   "id": 4484,
   "type": "message",
   "date": "2024-08-04T17:20:41",
   "date_unixtime": "1722772241",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4473,
   "text": [
    "Please look at the examples in the sdk readme. Generating a multiproof anytime is not a problem.  ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-sdk"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Please look at the examples in the sdk readme. Generating a multiproof anytime is not a problem.  "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-sdk"
    }
   ]
  },
  {
   "id": 4485,
   "type": "message",
   "date": "2024-08-04T17:21:44",
   "date_unixtime": "1722772304",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4483,
   "text": "Correct. If Dango is OP stack then no need to deploy EAS",
   "text_entities": [
    {
     "type": "plain",
     "text": "Correct. If Dango is OP stack then no need to deploy EAS"
    }
   ]
  },
  {
   "id": 4486,
   "type": "message",
   "date": "2024-08-04T17:23:25",
   "date_unixtime": "1722772405",
   "edited": "2024-08-04T20:06:29",
   "edited_unixtime": "1722782189",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4485,
   "text": "The main feature of Celo Dango testnet is to migrate Celo Alfajores testnet to OpStack.\nSo how can we use EAS there ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "The main feature of Celo Dango testnet is to migrate Celo Alfajores testnet to OpStack.\nSo how can we use EAS there ?"
    }
   ]
  },
  {
   "id": 4487,
   "type": "message",
   "date": "2024-08-04T20:07:03",
   "date_unixtime": "1722782223",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "Looking to be able to use dango and eas",
   "text_entities": [
    {
     "type": "plain",
     "text": "Looking to be able to use dango and eas"
    }
   ]
  },
  {
   "id": 4488,
   "type": "message",
   "date": "2024-08-04T20:07:06",
   "date_unixtime": "1722782226",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "Un súper hack",
   "text_entities": [
    {
     "type": "plain",
     "text": "Un súper hack"
    }
   ]
  },
  {
   "id": 4489,
   "type": "message",
   "date": "2024-08-04T20:07:28",
   "date_unixtime": "1722782248",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "I though about the deployment but just noticed the bounty is just for op and base",
   "text_entities": [
    {
     "type": "plain",
     "text": "I though about the deployment but just noticed the bounty is just for op and base"
    }
   ]
  },
  {
   "id": 4490,
   "type": "message",
   "date": "2024-08-04T20:12:42",
   "date_unixtime": "1722782562",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    "how to use this for viem or wagmi ",
    {
     "type": "pre",
     "text": "export const EASContractAddress = '0xC2679fBD37d54388Ce493F1DB75320D236e1815e'; // Sepolia v0.26\n// Initialize the sdk with the address of the EAS Schema contract address\nconst eas = new EAS(EASContractAddress);\n// Gets a default provider (in production use something else like infura/alchemy)const provider = ethers.getDefaultProvider('sepolia');\n// Connects an ethers style provider/signingProvider to perform read/write functions.\n// MUST be a signer to do write operations!eas.connect(provider);",
     "language": "import { EAS, Offchain, SchemaEncoder, SchemaRegistry } from &#3"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "how to use this for viem or wagmi "
    },
    {
     "type": "pre",
     "text": "export const EASContractAddress = '0xC2679fBD37d54388Ce493F1DB75320D236e1815e'; // Sepolia v0.26\n// Initialize the sdk with the address of the EAS Schema contract address\nconst eas = new EAS(EASContractAddress);\n// Gets a default provider (in production use something else like infura/alchemy)const provider = ethers.getDefaultProvider('sepolia');\n// Connects an ethers style provider/signingProvider to perform read/write functions.\n// MUST be a signer to do write operations!eas.connect(provider);",
     "language": "import { EAS, Offchain, SchemaEncoder, SchemaRegistry } from &#3"
    }
   ]
  },
  {
   "id": 4491,
   "type": "message",
   "date": "2024-08-04T20:32:24",
   "date_unixtime": "1722783744",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    "i am getting error while using viem ",
    {
     "type": "pre",
     "text": "import { EAS, Offchain, SchemaEncoder, SchemaRegistry } from '@ethereum-attestation-service/eas-sdk'; \n \nimport { createPublicClient, http } from 'viem' \nimport { sepolia } from 'viem/chains' \n \nexport const EASContractAddress = '0xC2679fBD37d54388Ce493F1DB75320D236e1815e'; // Sepolia v0.26 \n \n// Initialize the sdk with the address of the EAS Schema contract address \nconst eas = new EAS(EASContractAddress); \n \nconst client = createPublicClient({  \n    chain: sepolia,  \n    transport: http(), \n  }) \n \neas.connect(client); \n \nconst uid = '0xff08bbf3d3e6e0992fc70ab9b9370416be59e87897c3d42b20549901d2cccc3e'; \n \nconst attestation = await eas.getAttestation(uid); \n \nconsole.log(attestation);",
     "language": "typescript"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "i am getting error while using viem "
    },
    {
     "type": "pre",
     "text": "import { EAS, Offchain, SchemaEncoder, SchemaRegistry } from '@ethereum-attestation-service/eas-sdk'; \n \nimport { createPublicClient, http } from 'viem' \nimport { sepolia } from 'viem/chains' \n \nexport const EASContractAddress = '0xC2679fBD37d54388Ce493F1DB75320D236e1815e'; // Sepolia v0.26 \n \n// Initialize the sdk with the address of the EAS Schema contract address \nconst eas = new EAS(EASContractAddress); \n \nconst client = createPublicClient({  \n    chain: sepolia,  \n    transport: http(), \n  }) \n \neas.connect(client); \n \nconst uid = '0xff08bbf3d3e6e0992fc70ab9b9370416be59e87897c3d42b20549901d2cccc3e'; \n \nconst attestation = await eas.getAttestation(uid); \n \nconsole.log(attestation);",
     "language": "typescript"
    }
   ]
  },
  {
   "id": 4492,
   "type": "message",
   "date": "2024-08-04T20:43:41",
   "date_unixtime": "1722784421",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "mention",
     "text": "@brycealan"
    }
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@brycealan"
    }
   ]
  },
  {
   "id": 4493,
   "type": "message",
   "date": "2024-08-04T20:45:56",
   "date_unixtime": "1722784556",
   "edited": "2024-08-22T10:05:05",
   "edited_unixtime": "1724301305",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4491,
   "text": [
    "This is because you are using a viem style provider. You can use an adapter to convert the public client to a provider using an adapter. ",
    {
     "type": "link",
     "text": "https://wagmi.sh/react/guides/ethers"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "This is because you are using a viem style provider. You can use an adapter to convert the public client to a provider using an adapter. "
    },
    {
     "type": "link",
     "text": "https://wagmi.sh/react/guides/ethers"
    }
   ]
  },
  {
   "id": 4494,
   "type": "message",
   "date": "2024-08-04T20:48:27",
   "date_unixtime": "1722784707",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 4493,
   "text": "Thanks",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks"
    }
   ]
  },
  {
   "id": 4495,
   "type": "message",
   "date": "2024-08-04T20:49:29",
   "date_unixtime": "1722784769",
   "edited": "2024-08-04T20:56:03",
   "edited_unixtime": "1722785163",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4489,
   "text": "On Discord EAS confirmed it's not strictly limited to these 2 chains but to any where EAS is officially deployed.",
   "text_entities": [
    {
     "type": "plain",
     "text": "On Discord EAS confirmed it's not strictly limited to these 2 chains but to any where EAS is officially deployed."
    }
   ]
  },
  {
   "id": 4496,
   "type": "message",
   "date": "2024-08-04T20:52:15",
   "date_unixtime": "1722784935",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "text": "Suppose that using OP Stack I fork a new chain, do I need to deploy the EAS smart contracts there? How would I be able to use EAS there?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Suppose that using OP Stack I fork a new chain, do I need to deploy the EAS smart contracts there? How would I be able to use EAS there?"
    }
   ]
  },
  {
   "id": 4497,
   "type": "message",
   "date": "2024-08-04T21:04:00",
   "date_unixtime": "1722785640",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": [
    {
     "type": "mention",
     "text": "@gonzalomelov"
    },
    "  I will try to deploy it in dango"
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@gonzalomelov"
    },
    {
     "type": "plain",
     "text": "  I will try to deploy it in dango"
    }
   ]
  },
  {
   "id": 4498,
   "type": "message",
   "date": "2024-08-04T21:04:02",
   "date_unixtime": "1722785642",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "if it works",
   "text_entities": [
    {
     "type": "plain",
     "text": "if it works"
    }
   ]
  },
  {
   "id": 4499,
   "type": "message",
   "date": "2024-08-04T21:04:08",
   "date_unixtime": "1722785648",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "we could use the same deployment",
   "text_entities": [
    {
     "type": "plain",
     "text": "we could use the same deployment"
    }
   ]
  },
  {
   "id": 4500,
   "type": "message",
   "date": "2024-08-04T21:04:18",
   "date_unixtime": "1722785658",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "if that works 4 u",
   "text_entities": [
    {
     "type": "plain",
     "text": "if that works 4 u"
    }
   ]
  },
  {
   "id": 4501,
   "type": "message",
   "date": "2024-08-04T21:05:22",
   "date_unixtime": "1722785722",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "text": "Sure!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Sure!"
    }
   ]
  },
  {
   "id": 4502,
   "type": "message",
   "date": "2024-08-04T21:05:41",
   "date_unixtime": "1722785741",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "reply_to_message_id": 4497,
   "text": "Thanks for that!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks for that!"
    }
   ]
  },
  {
   "id": 4503,
   "type": "message",
   "date": "2024-08-04T21:05:50",
   "date_unixtime": "1722785750",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": "how to add sepolia as a provider?",
   "text_entities": [
    {
     "type": "plain",
     "text": "how to add sepolia as a provider?"
    }
   ]
  },
  {
   "id": 4504,
   "type": "message",
   "date": "2024-08-04T21:06:09",
   "date_unixtime": "1722785769",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "text": "Are you just going to just deploy the contracts or something else?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Are you just going to just deploy the contracts or something else?"
    }
   ]
  },
  {
   "id": 4505,
   "type": "message",
   "date": "2024-08-04T21:06:16",
   "date_unixtime": "1722785776",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "text": "Just to understand what is needed",
   "text_entities": [
    {
     "type": "plain",
     "text": "Just to understand what is needed"
    }
   ]
  },
  {
   "id": 4506,
   "type": "message",
   "date": "2024-08-04T21:06:58",
   "date_unixtime": "1722785818",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "we just need the contract deployed in dango",
   "text_entities": [
    {
     "type": "plain",
     "text": "we just need the contract deployed in dango"
    }
   ]
  },
  {
   "id": 4507,
   "type": "message",
   "date": "2024-08-04T21:06:59",
   "date_unixtime": "1722785819",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "the eas",
   "text_entities": [
    {
     "type": "plain",
     "text": "the eas"
    }
   ]
  },
  {
   "id": 4508,
   "type": "message",
   "date": "2024-08-04T21:07:02",
   "date_unixtime": "1722785822",
   "from": "Rookie",
   "from_id": "user5373031681",
   "text": "and the schema",
   "text_entities": [
    {
     "type": "plain",
     "text": "and the schema"
    }
   ]
  },
  {
   "id": 4509,
   "type": "message",
   "date": "2024-08-04T21:10:50",
   "date_unixtime": "1722786050",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    "i am getting this error ",
    {
     "type": "pre",
     "text": "Argument of type 'JsonRpcProvider | FallbackProvider | undefined' is not assignable to parameter of type 'TransactionSigner'. \n  Type 'undefined' is not assignable to type 'TransactionSigner'.ts(2345)",
     "language": ""
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "i am getting this error "
    },
    {
     "type": "pre",
     "text": "Argument of type 'JsonRpcProvider | FallbackProvider | undefined' is not assignable to parameter of type 'TransactionSigner'. \n  Type 'undefined' is not assignable to type 'TransactionSigner'.ts(2345)",
     "language": ""
    }
   ]
  },
  {
   "id": 4510,
   "type": "message",
   "date": "2024-08-04T21:11:01",
   "date_unixtime": "1722786061",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    "this is the code ",
    {
     "type": "pre",
     "text": "import { EAS } from '@ethereum-attestation-service/eas-sdk'; \nimport { useEthersProvider } from './client_to_provider' \n \n \nexport const EASContractAddress = '0xC2679fBD37d54388Ce493F1DB75320D236e1815e'; // Sepolia v0.26 \nconst eas = new EAS(EASContractAddress); \n \nconst provider = useEthersProvider({chainId:11155111});    \n \neas.connect(provider); \n \nconst uid = '0xff08bbf3d3e6e0992fc70ab9b9370416be59e87897c3d42b20549901d2cccc3e'; \n \nconst attestation = await eas.getAttestation(uid); \n \nconsole.log(attestation);",
     "language": "typescript"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "this is the code "
    },
    {
     "type": "pre",
     "text": "import { EAS } from '@ethereum-attestation-service/eas-sdk'; \nimport { useEthersProvider } from './client_to_provider' \n \n \nexport const EASContractAddress = '0xC2679fBD37d54388Ce493F1DB75320D236e1815e'; // Sepolia v0.26 \nconst eas = new EAS(EASContractAddress); \n \nconst provider = useEthersProvider({chainId:11155111});    \n \neas.connect(provider); \n \nconst uid = '0xff08bbf3d3e6e0992fc70ab9b9370416be59e87897c3d42b20549901d2cccc3e'; \n \nconst attestation = await eas.getAttestation(uid); \n \nconsole.log(attestation);",
     "language": "typescript"
    }
   ]
  },
  {
   "id": 4511,
   "type": "message",
   "date": "2024-08-04T21:11:17",
   "date_unixtime": "1722786077",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 4509,
   "text": "this is the error in the provider",
   "text_entities": [
    {
     "type": "plain",
     "text": "this is the error in the provider"
    }
   ]
  },
  {
   "id": 4512,
   "type": "message",
   "date": "2024-08-04T21:15:19",
   "date_unixtime": "1722786319",
   "from": "Gonzalo Melo",
   "from_id": "user6693036121",
   "text": "Exactly. That should be it",
   "text_entities": [
    {
     "type": "plain",
     "text": "Exactly. That should be it"
    }
   ]
  },
  {
   "id": 4513,
   "type": "message",
   "date": "2024-08-04T21:28:56",
   "date_unixtime": "1722787136",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4496,
   "text": "It depends on which block you fork it, because it has to be after the EAS deployment was done.",
   "text_entities": [
    {
     "type": "plain",
     "text": "It depends on which block you fork it, because it has to be after the EAS deployment was done."
    }
   ]
  },
  {
   "id": 4514,
   "type": "message",
   "date": "2024-08-04T21:29:46",
   "date_unixtime": "1722787186",
   "edited": "2024-08-04T23:02:34",
   "edited_unixtime": "1722792754",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4497,
   "text": "It should not be needed if the fork included the EAS deployment done before on Superchain.",
   "text_entities": [
    {
     "type": "plain",
     "text": "It should not be needed if the fork included the EAS deployment done before on Superchain."
    }
   ]
  },
  {
   "id": 4515,
   "type": "message",
   "date": "2024-08-04T21:30:14",
   "date_unixtime": "1722787214",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "mention",
     "text": "@stevedakh"
    }
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@stevedakh"
    }
   ]
  },
  {
   "id": 4516,
   "type": "message",
   "date": "2024-08-04T21:30:25",
   "date_unixtime": "1722787225",
   "from": "Rookie",
   "from_id": "user5373031681",
   "reply_to_message_id": 4514,
   "text": "👀",
   "text_entities": [
    {
     "type": "plain",
     "text": "👀"
    }
   ]
  },
  {
   "id": 4517,
   "type": "message",
   "date": "2024-08-04T21:30:56",
   "date_unixtime": "1722787256",
   "edited": "2024-08-04T21:31:20",
   "edited_unixtime": "1722787280",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4514,
   "text": "It was already confirmed by EAS.\nSo ask Celo how they made the OpStack fork.",
   "text_entities": [
    {
     "type": "plain",
     "text": "It was already confirmed by EAS.\nSo ask Celo how they made the OpStack fork."
    }
   ]
  },
  {
   "id": 4518,
   "type": "message",
   "date": "2024-08-04T21:31:59",
   "date_unixtime": "1722787319",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "text": "But you can just look first if the contract is visible or not in the block explorer.",
   "text_entities": [
    {
     "type": "plain",
     "text": "But you can just look first if the contract is visible or not in the block explorer."
    }
   ]
  },
  {
   "id": 4519,
   "type": "message",
   "date": "2024-08-04T21:33:48",
   "date_unixtime": "1722787428",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4510,
   "text": "What’s the code for useethersprovider?",
   "text_entities": [
    {
     "type": "plain",
     "text": "What’s the code for useethersprovider?"
    }
   ]
  },
  {
   "id": 4520,
   "type": "message",
   "date": "2024-08-04T21:34:07",
   "date_unixtime": "1722787447",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "pre",
     "text": "import { FallbackProvider, JsonRpcProvider } from 'ethers' \nimport { useMemo } from 'react' \nimport type { Chain, Client, Transport } from 'viem' \nimport { type Config, useClient } from 'wagmi' \n \nexport function clientToProvider(client: Client<Transport, Chain>) { \n  const { chain, transport } = client \n  const network = { \n    chainId: chain.id, \n    name: chain.name, \n    ensAddress: chain.contracts?.ensRegistry?.address, \n  } \n  if (transport.type === 'fallback') { \n    const providers = (transport.transports as ReturnType<Transport>[]).map( \n      ({ value }) => new JsonRpcProvider(value?.url, network), \n    ) \n    if (providers.length === 1) return providers[0] \n    return new FallbackProvider(providers) \n  } \n  return new JsonRpcProvider(transport.url, network) \n} \n \n/** Action to convert a viem Client to an ethers.js Provider. */ \nexport function useEthersProvider({ chainId }: { chainId?: number } = {}) { \n  const client = useClient<Config>({ chainId }) \n  return useMemo(() => (client ? clientToProvider(client) : undefined), [client]) \n}",
     "language": "typescript"
    }
   ],
   "text_entities": [
    {
     "type": "pre",
     "text": "import { FallbackProvider, JsonRpcProvider } from 'ethers' \nimport { useMemo } from 'react' \nimport type { Chain, Client, Transport } from 'viem' \nimport { type Config, useClient } from 'wagmi' \n \nexport function clientToProvider(client: Client<Transport, Chain>) { \n  const { chain, transport } = client \n  const network = { \n    chainId: chain.id, \n    name: chain.name, \n    ensAddress: chain.contracts?.ensRegistry?.address, \n  } \n  if (transport.type === 'fallback') { \n    const providers = (transport.transports as ReturnType<Transport>[]).map( \n      ({ value }) => new JsonRpcProvider(value?.url, network), \n    ) \n    if (providers.length === 1) return providers[0] \n    return new FallbackProvider(providers) \n  } \n  return new JsonRpcProvider(transport.url, network) \n} \n \n/** Action to convert a viem Client to an ethers.js Provider. */ \nexport function useEthersProvider({ chainId }: { chainId?: number } = {}) { \n  const client = useClient<Config>({ chainId }) \n  return useMemo(() => (client ? clientToProvider(client) : undefined), [client]) \n}",
     "language": "typescript"
    }
   ]
  },
  {
   "id": 4521,
   "type": "message",
   "date": "2024-08-04T21:34:54",
   "date_unixtime": "1722787494",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 4493,
   "text": "it is basically the code given here",
   "text_entities": [
    {
     "type": "plain",
     "text": "it is basically the code given here"
    }
   ]
  },
  {
   "id": 4522,
   "type": "message",
   "date": "2024-08-04T21:36:16",
   "date_unixtime": "1722787576",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": "I am AFK right now. For now Try forcing it to be the correct signer and see if that works",
   "text_entities": [
    {
     "type": "plain",
     "text": "I am AFK right now. For now Try forcing it to be the correct signer and see if that works"
    }
   ]
  },
  {
   "id": 4523,
   "type": "message",
   "date": "2024-08-04T23:01:28",
   "date_unixtime": "1722792688",
   "from": "Shivansh Chauhan",
   "from_id": "user5426732793",
   "text": "Hackathon update ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hackathon update ?"
    }
   ]
  },
  {
   "id": 4524,
   "type": "message",
   "date": "2024-08-04T23:06:27",
   "date_unixtime": "1722792987",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Announcing today!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Announcing today!"
    }
   ]
  },
  {
   "id": 4525,
   "type": "message",
   "date": "2024-08-04T23:06:49",
   "date_unixtime": "1722793009",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Make sure you sign up for the Superhack if you haven’t!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Make sure you sign up for the Superhack if you haven’t!"
    }
   ]
  },
  {
   "id": 4526,
   "type": "message",
   "date": "2024-08-04T23:10:00",
   "date_unixtime": "1722793200",
   "from": "luniacllama",
   "from_id": "user968910673",
   "reply_to_message_id": 4524,
   "text": "does that include the onchain summer bounties too , or just the EAS summer hack?",
   "text_entities": [
    {
     "type": "plain",
     "text": "does that include the onchain summer bounties too , or just the EAS summer hack?"
    }
   ]
  },
  {
   "id": 4527,
   "type": "message",
   "date": "2024-08-04T23:12:00",
   "date_unixtime": "1722793320",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "It considers projects who submitted  to Devfolio during the Onchain Summer Buildathon and EAS Attestation Summer.",
   "text_entities": [
    {
     "type": "plain",
     "text": "It considers projects who submitted  to Devfolio during the Onchain Summer Buildathon and EAS Attestation Summer."
    }
   ]
  },
  {
   "id": 4528,
   "type": "message",
   "date": "2024-08-04T23:14:30",
   "date_unixtime": "1722793470",
   "edited": "2024-08-04T23:46:39",
   "edited_unixtime": "1722795399",
   "from": "luniacllama",
   "from_id": "user968910673",
   "reply_to_message_id": 4527,
   "text": "oh sounds good",
   "text_entities": [
    {
     "type": "plain",
     "text": "oh sounds good"
    }
   ]
  },
  {
   "id": 4529,
   "type": "message",
   "date": "2024-08-04T23:36:24",
   "date_unixtime": "1722794784",
   "from": "luniacllama",
   "from_id": "user968910673",
   "reply_to_message_id": 4527,
   "text": "was just wondering if replying on the warpcast bountycaster post w the devfolio link was sufficient to be considered as a submission for EAS? 😅",
   "text_entities": [
    {
     "type": "plain",
     "text": "was just wondering if replying on the warpcast bountycaster post w the devfolio link was sufficient to be considered as a submission for EAS? 😅"
    }
   ]
  },
  {
   "id": 4530,
   "type": "message",
   "date": "2024-08-04T23:44:38",
   "date_unixtime": "1722795278",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4529,
   "text": "Projects needed to submit on Devfolio! You submitted properly 👍😊",
   "text_entities": [
    {
     "type": "plain",
     "text": "Projects needed to submit on Devfolio! You submitted properly 👍😊"
    }
   ]
  },
  {
   "id": 4531,
   "type": "message",
   "date": "2024-08-04T23:45:20",
   "date_unixtime": "1722795320",
   "edited": "2024-08-04T23:46:16",
   "edited_unixtime": "1722795376",
   "from": "luniacllama",
   "from_id": "user968910673",
   "reply_to_message_id": 4530,
   "text": "oh cool was just worried as we didnt add it as a technology used on devfolio but mentioned in description and the core part of our project is attesations :'D",
   "text_entities": [
    {
     "type": "plain",
     "text": "oh cool was just worried as we didnt add it as a technology used on devfolio but mentioned in description and the core part of our project is attesations :'D"
    }
   ]
  },
  {
   "id": 4532,
   "type": "message",
   "date": "2024-08-04T23:46:12",
   "date_unixtime": "1722795372",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Bountycaster helped us capture it :)",
   "text_entities": [
    {
     "type": "plain",
     "text": "Bountycaster helped us capture it :)"
    }
   ]
  },
  {
   "id": 4533,
   "type": "message",
   "date": "2024-08-04T23:46:27",
   "date_unixtime": "1722795387",
   "from": "luniacllama",
   "from_id": "user968910673",
   "reply_to_message_id": 4532,
   "text": "great , thanks!",
   "text_entities": [
    {
     "type": "plain",
     "text": "great , thanks!"
    }
   ]
  },
  {
   "id": 4534,
   "type": "message",
   "date": "2024-08-05T02:33:53",
   "date_unixtime": "1722805433",
   "edited": "2024-08-05T02:42:51",
   "edited_unixtime": "1722805971",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Winner's announced! Thank you to all the builders who participated this summer. If you're continuing to build your projects and want specific feedback, feel free to DM!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Winner's announced! Thank you to all the builders who participated this summer. If you're continuing to build your projects and want specific feedback, feel free to DM!"
    }
   ]
  },
  {
   "id": 4535,
   "type": "message",
   "date": "2024-08-05T02:33:55",
   "date_unixtime": "1722805435",
   "edited": "2024-08-05T02:42:54",
   "edited_unixtime": "1722805974",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1820203561432813933"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1820203561432813933"
    }
   ]
  },
  {
   "id": 4536,
   "type": "message",
   "date": "2024-08-05T02:43:53",
   "date_unixtime": "1722806033",
   "edited": "2024-08-05T03:07:02",
   "edited_unixtime": "1722807422",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "text": [
    "Thank you ",
    {
     "type": "mention",
     "text": "@brycealan"
    },
    " and EAS team!\nCongrats to all the winners!\n🚀"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you "
    },
    {
     "type": "mention",
     "text": "@brycealan"
    },
    {
     "type": "plain",
     "text": " and EAS team!\nCongrats to all the winners!\n🚀"
    }
   ]
  },
  {
   "id": 4538,
   "type": "service",
   "date": "2024-08-05T11:03:20",
   "date_unixtime": "1722836000",
   "actor": "Jithin Raj",
   "actor_id": "user64194385",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4539,
   "type": "message",
   "date": "2024-08-05T20:50:59",
   "date_unixtime": "1722871259",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4520,
   "text": "DId that work?",
   "text_entities": [
    {
     "type": "plain",
     "text": "DId that work?"
    }
   ]
  },
  {
   "id": 4540,
   "type": "message",
   "date": "2024-08-05T20:51:22",
   "date_unixtime": "1722871282",
   "from": "Gautam",
   "from_id": "user728300669",
   "reply_to_message_id": 4539,
   "text": "Yes",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes"
    }
   ]
  },
  {
   "id": 4541,
   "type": "message",
   "date": "2024-08-05T20:52:01",
   "date_unixtime": "1722871321",
   "edited": "2024-08-05T20:52:08",
   "edited_unixtime": "1722871328",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4540,
   "text": "Okay great. Must be a type issue. We will fix in a newer SDK version",
   "text_entities": [
    {
     "type": "plain",
     "text": "Okay great. Must be a type issue. We will fix in a newer SDK version"
    }
   ]
  },
  {
   "id": 4542,
   "type": "message",
   "date": "2024-08-05T20:54:55",
   "date_unixtime": "1722871495",
   "edited": "2024-08-05T20:55:06",
   "edited_unixtime": "1722871506",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "mention",
     "text": "@whoisgautxm"
    },
    " Actually the issue has to do with your code when the client is undefined it causes an error. Not an SDK issue"
   ],
   "text_entities": [
    {
     "type": "mention",
     "text": "@whoisgautxm"
    },
    {
     "type": "plain",
     "text": " Actually the issue has to do with your code when the client is undefined it causes an error. Not an SDK issue"
    }
   ]
  },
  {
   "id": 4543,
   "type": "service",
   "date": "2024-08-05T20:59:02",
   "date_unixtime": "1722871742",
   "actor": "BytesBuster",
   "actor_id": "user5895116469",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4544,
   "type": "message",
   "date": "2024-08-06T03:42:41",
   "date_unixtime": "1722895961",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "Gm, is possible to deploy EAS on Celo Dango testnet by my own for hackathon purposses?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Gm, is possible to deploy EAS on Celo Dango testnet by my own for hackathon purposses?"
    }
   ]
  },
  {
   "id": 4545,
   "type": "message",
   "date": "2024-08-06T03:45:01",
   "date_unixtime": "1722896101",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 2,
   "text": "If yes, someone can provide to me a little documentation to do that :)",
   "text_entities": [
    {
     "type": "plain",
     "text": "If yes, someone can provide to me a little documentation to do that :)"
    }
   ]
  },
  {
   "id": 4546,
   "type": "service",
   "date": "2024-08-06T03:56:33",
   "date_unixtime": "1722896793",
   "actor": "Andrew",
   "actor_id": "user357109137",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4547,
   "type": "message",
   "date": "2024-08-06T04:05:45",
   "date_unixtime": "1722897345",
   "from": "MG",
   "from_id": "user1968916635",
   "reply_to_message_id": 4484,
   "text": [
    "Thanks for this reply!\n\nAfter reviewing the readme and the ",
    {
     "type": "code",
     "text": "private-data.ts"
    },
    " code I still don't see how I can regenerate a multiproof from a previous attestation w/o re-entering the data being attested to. What am I missing? I thought I would be able to regenerate the multiproof from a previously submitted attestation if I was the attestor?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks for this reply!\n\nAfter reviewing the readme and the "
    },
    {
     "type": "code",
     "text": "private-data.ts"
    },
    {
     "type": "plain",
     "text": " code I still don't see how I can regenerate a multiproof from a previous attestation w/o re-entering the data being attested to. What am I missing? I thought I would be able to regenerate the multiproof from a previously submitted attestation if I was the attestor?"
    }
   ]
  },
  {
   "id": 4548,
   "type": "message",
   "date": "2024-08-06T05:17:56",
   "date_unixtime": "1722901676",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4547,
   "text": "In order to create any type of proof, it requires that you store the full merkle tree. The proof verifies that any given leaves are part of a root merkle hash",
   "text_entities": [
    {
     "type": "plain",
     "text": "In order to create any type of proof, it requires that you store the full merkle tree. The proof verifies that any given leaves are part of a root merkle hash"
    }
   ]
  },
  {
   "id": 4549,
   "type": "message",
   "date": "2024-08-06T05:35:20",
   "date_unixtime": "1722902720",
   "from": "𝕲𝖞𝖑𝖒𝖆𝖓 | 𝕽𝖆𝖉𝖎𝖚𝖘",
   "from_id": "user830808670",
   "reply_to_message_id": 2,
   "text": "Is it possible to make nested properties in the schema or does it only have one dimension?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is it possible to make nested properties in the schema or does it only have one dimension?"
    }
   ]
  },
  {
   "id": 4550,
   "type": "message",
   "date": "2024-08-06T05:57:00",
   "date_unixtime": "1722904020",
   "edited": "2024-08-06T05:58:37",
   "edited_unixtime": "1722904117",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4549,
   "text": "You can have arrays of tuples as one example",
   "text_entities": [
    {
     "type": "plain",
     "text": "You can have arrays of tuples as one example"
    }
   ]
  },
  {
   "id": 4551,
   "type": "service",
   "date": "2024-08-06T12:03:12",
   "date_unixtime": "1722925992",
   "actor": "Vid Kersic",
   "actor_id": "user810742125",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4552,
   "type": "service",
   "date": "2024-08-06T13:36:19",
   "date_unixtime": "1722931579",
   "actor": "Cem",
   "actor_id": "user748678966",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4553,
   "type": "message",
   "date": "2024-08-07T01:54:10",
   "date_unixtime": "1722975850",
   "from": "Mark | Ceramic Network",
   "from_id": "user5204467385",
   "reply_to_message_id": 2,
   "text": [
    "hi ",
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    "  - wondering if there are any known current issues with the .getOffchain() method at the moment? I'm circling back to code that previously ran as expected but is now throwing when this method is invoked"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "hi "
    },
    {
     "type": "mention",
     "text": "@stevedakh"
    },
    {
     "type": "plain",
     "text": "  - wondering if there are any known current issues with the .getOffchain() method at the moment? I'm circling back to code that previously ran as expected but is now throwing when this method is invoked"
    }
   ]
  },
  {
   "id": 4554,
   "type": "message",
   "date": "2024-08-07T02:40:10",
   "date_unixtime": "1722978610",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4553,
   "text": "Not that I know of. What error are you getting and on what chain?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Not that I know of. What error are you getting and on what chain?"
    }
   ]
  },
  {
   "id": 4555,
   "type": "message",
   "date": "2024-08-07T02:40:36",
   "date_unixtime": "1722978636",
   "from": "Mark | Ceramic Network",
   "from_id": "user5204467385",
   "reply_to_message_id": 4554,
   "text": "that's odd. I've tried sepolia, mainnet, and base mainnet",
   "text_entities": [
    {
     "type": "plain",
     "text": "that's odd. I've tried sepolia, mainnet, and base mainnet"
    }
   ]
  },
  {
   "id": 4557,
   "type": "message",
   "date": "2024-08-07T03:14:31",
   "date_unixtime": "1722980671",
   "from": "Koushith.eth",
   "from_id": "user614575266",
   "reply_to_message_id": 2,
   "text": "Could anyone please provide guidance on how to retrieve all the schemas created by a user/wallet address? Any references to the SDK documentation or examples would be greatly appreciated.\n\nThank you!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Could anyone please provide guidance on how to retrieve all the schemas created by a user/wallet address? Any references to the SDK documentation or examples would be greatly appreciated.\n\nThank you!"
    }
   ]
  },
  {
   "id": 4558,
   "type": "message",
   "date": "2024-08-07T03:39:53",
   "date_unixtime": "1722982193",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4557,
   "text": [
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/developer-tools/api"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/developer-tools/api"
    }
   ]
  },
  {
   "id": 4559,
   "type": "message",
   "date": "2024-08-07T04:20:50",
   "date_unixtime": "1722984650",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4555,
   "text": "What errors are you getting?",
   "text_entities": [
    {
     "type": "plain",
     "text": "What errors are you getting?"
    }
   ]
  },
  {
   "id": 4560,
   "type": "message",
   "date": "2024-08-07T11:58:06",
   "date_unixtime": "1723012086",
   "from": "Giovanni Mazzeo",
   "from_id": "user1014095008",
   "reply_to_message_id": 2,
   "text": "Hi all. We are working on setting up EAS on the Flow blockchain. I wanted to ask if there is an open source repo of the EASscan web ui. Or, how should we setup a flow.easscan page? Thanks in advance",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi all. We are working on setting up EAS on the Flow blockchain. I wanted to ask if there is an open source repo of the EASscan web ui. Or, how should we setup a flow.easscan page? Thanks in advance"
    }
   ]
  },
  {
   "id": 4561,
   "type": "service",
   "date": "2024-08-07T12:59:33",
   "date_unixtime": "1723015773",
   "actor": "Clément | omniscia.io",
   "actor_id": "user1444924334",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4562,
   "type": "service",
   "date": "2024-08-07T23:41:01",
   "date_unixtime": "1723054261",
   "actor": "Sharfy",
   "actor_id": "user1504218422",
   "action": "invite_members",
   "members": [
    "Zach"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4563,
   "type": "message",
   "date": "2024-08-07T23:51:40",
   "date_unixtime": "1723054900",
   "from": "Zach",
   "from_id": "user6544547065",
   "text": "Hello! I'm trying to search for some attestations by recipient, and I'm not able to pull some up",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello! I'm trying to search for some attestations by recipient, and I'm not able to pull some up"
    }
   ]
  },
  {
   "id": 4564,
   "type": "message",
   "date": "2024-08-07T23:51:57",
   "date_unixtime": "1723054917",
   "from": "Zach",
   "from_id": "user6544547065",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 1099,
   "text": "I tried this with both \"default\" and \"insensitive\", still no luck",
   "text_entities": [
    {
     "type": "plain",
     "text": "I tried this with both \"default\" and \"insensitive\", still no luck"
    }
   ]
  },
  {
   "id": 4565,
   "type": "message",
   "date": "2024-08-07T23:52:22",
   "date_unixtime": "1723054942",
   "from": "Zach",
   "from_id": "user6544547065",
   "text": [
    "but the address is correct: ",
    {
     "type": "link",
     "text": "https://celo.easscan.org/address/0xC896D28991269A11eF2cf81B6724f6bd7DEFc61B"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "but the address is correct: "
    },
    {
     "type": "link",
     "text": "https://celo.easscan.org/address/0xC896D28991269A11eF2cf81B6724f6bd7DEFc61B"
    }
   ]
  },
  {
   "id": 4566,
   "type": "message",
   "date": "2024-08-07T23:52:34",
   "date_unixtime": "1723054954",
   "from": "Zach",
   "from_id": "user6544547065",
   "text": "I tried the same thing using CURL, same result",
   "text_entities": [
    {
     "type": "plain",
     "text": "I tried the same thing using CURL, same result"
    }
   ]
  },
  {
   "id": 4567,
   "type": "message",
   "date": "2024-08-07T23:52:43",
   "date_unixtime": "1723054963",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4564,
   "text": "You are searching by attestation ID instead of recipient",
   "text_entities": [
    {
     "type": "plain",
     "text": "You are searching by attestation ID instead of recipient"
    }
   ]
  },
  {
   "id": 4568,
   "type": "message",
   "date": "2024-08-07T23:52:58",
   "date_unixtime": "1723054978",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "text": "change “id” with “recipient” in the bottom panel",
   "text_entities": [
    {
     "type": "plain",
     "text": "change “id” with “recipient” in the bottom panel"
    }
   ]
  },
  {
   "id": 4569,
   "type": "message",
   "date": "2024-08-07T23:53:12",
   "date_unixtime": "1723054992",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "text": "and you dont need insensitive",
   "text_entities": [
    {
     "type": "plain",
     "text": "and you dont need insensitive"
    }
   ]
  },
  {
   "id": 4570,
   "type": "message",
   "date": "2024-08-07T23:55:46",
   "date_unixtime": "1723055146",
   "from": "Zach",
   "from_id": "user6544547065",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 1258,
   "text": "whoops, you're right, in that screenshot my query was wrong. however, with the correct query, i'm getting the same thing",
   "text_entities": [
    {
     "type": "plain",
     "text": "whoops, you're right, in that screenshot my query was wrong. however, with the correct query, i'm getting the same thing"
    }
   ]
  },
  {
   "id": 4571,
   "type": "message",
   "date": "2024-08-08T00:27:29",
   "date_unixtime": "1723057049",
   "from": "Zach",
   "from_id": "user6544547065",
   "text": "if anyone has any advice, i'd be grateful",
   "text_entities": [
    {
     "type": "plain",
     "text": "if anyone has any advice, i'd be grateful"
    }
   ]
  },
  {
   "id": 4572,
   "type": "message",
   "date": "2024-08-08T00:29:11",
   "date_unixtime": "1723057151",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "text": "Are you on the right chains graphql? Its working for me",
   "text_entities": [
    {
     "type": "plain",
     "text": "Are you on the right chains graphql? Its working for me"
    }
   ]
  },
  {
   "id": 4573,
   "type": "message",
   "date": "2024-08-08T00:29:31",
   "date_unixtime": "1723057171",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1160,
   "height": 1280,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4575,
   "type": "message",
   "date": "2024-08-08T00:37:59",
   "date_unixtime": "1723057679",
   "edited": "2024-08-08T00:38:11",
   "edited_unixtime": "1723057691",
   "from": "Zach",
   "from_id": "user6544547065",
   "text": "that was it! I must have copied the wrong link over at some point. Thank you!",
   "text_entities": [
    {
     "type": "plain",
     "text": "that was it! I must have copied the wrong link over at some point. Thank you!"
    }
   ]
  },
  {
   "id": 4576,
   "type": "message",
   "date": "2024-08-08T07:53:26",
   "date_unixtime": "1723083806",
   "from": "Shuhei Tanaka | Fracton",
   "from_id": "user5156449118",
   "reply_to_message_id": 2,
   "text": "Any differences when using privateData schema on smartcontract?\n\nSeems the schema has only bytes32 privateData field. Then just encode the input data when attest using this schema, or needed some process to attest?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Any differences when using privateData schema on smartcontract?\n\nSeems the schema has only bytes32 privateData field. Then just encode the input data when attest using this schema, or needed some process to attest?"
    }
   ]
  },
  {
   "id": 4577,
   "type": "message",
   "date": "2024-08-08T08:15:40",
   "date_unixtime": "1723085140",
   "edited": "2024-08-08T08:15:53",
   "edited_unixtime": "1723085153",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4576,
   "text": "If you want to verify merkle proofs made with the private data mechanism you can use OpenZeppelins contracts for merkle proof verification",
   "text_entities": [
    {
     "type": "plain",
     "text": "If you want to verify merkle proofs made with the private data mechanism you can use OpenZeppelins contracts for merkle proof verification"
    }
   ]
  },
  {
   "id": 4578,
   "type": "service",
   "date": "2024-08-08T22:33:08",
   "date_unixtime": "1723136588",
   "actor": "Sudeep",
   "actor_id": "user935228195",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4579,
   "type": "service",
   "date": "2024-08-09T00:01:56",
   "date_unixtime": "1723141916",
   "actor": "Hema",
   "actor_id": "user747661101",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4580,
   "type": "service",
   "date": "2024-08-09T03:19:32",
   "date_unixtime": "1723153772",
   "actor": "gbrx",
   "actor_id": "user459514238",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4581,
   "type": "service",
   "date": "2024-08-09T13:56:41",
   "date_unixtime": "1723192001",
   "actor": "Ivan Grachev",
   "actor_id": "user17258150",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4582,
   "type": "service",
   "date": "2024-08-09T14:47:18",
   "date_unixtime": "1723195038",
   "actor": "Star",
   "actor_id": "user1705406202",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4583,
   "type": "message",
   "date": "2024-08-09T15:21:53",
   "date_unixtime": "1723197113",
   "edited": "2024-08-09T15:23:30",
   "edited_unixtime": "1723197210",
   "from": "Star",
   "from_id": "user1705406202",
   "text": "Hello guys , can everyone help me how I can deploy an EAS for Scroll canvas with their codes? thanks",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello guys , can everyone help me how I can deploy an EAS for Scroll canvas with their codes? thanks"
    }
   ]
  },
  {
   "id": 4584,
   "type": "message",
   "date": "2024-08-10T02:03:25",
   "date_unixtime": "1723235605",
   "edited": "2024-08-10T05:08:33",
   "edited_unixtime": "1723246713",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4583,
   "text": [
    "Hey! Can you be more specific in what you're trying to achieve? Have you looked at the integration guide yet? ",
    {
     "type": "link",
     "text": "https://scrollzkp.notion.site/Introducing-Scroll-Canvas-Badge-Integration-Guide-8656463ab63b42e8baf924763ed8c9d5"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey! Can you be more specific in what you're trying to achieve? Have you looked at the integration guide yet? "
    },
    {
     "type": "link",
     "text": "https://scrollzkp.notion.site/Introducing-Scroll-Canvas-Badge-Integration-Guide-8656463ab63b42e8baf924763ed8c9d5"
    }
   ]
  },
  {
   "id": 4585,
   "type": "service",
   "date": "2024-08-10T05:02:07",
   "date_unixtime": "1723246327",
   "actor": "Phillip Kemper",
   "actor_id": "user484842417",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4586,
   "type": "message",
   "date": "2024-08-10T05:07:45",
   "date_unixtime": "1723246665",
   "from": "Phillip Kemper",
   "from_id": "user484842417",
   "text": "hello all,\nis there any predefined steps to bring a new rollup to EAS and the Scanner as well? \nHappy to help on this but need to know what we have to do in order to achieve this 🤠",
   "text_entities": [
    {
     "type": "plain",
     "text": "hello all,\nis there any predefined steps to bring a new rollup to EAS and the Scanner as well? \nHappy to help on this but need to know what we have to do in order to achieve this 🤠"
    }
   ]
  },
  {
   "id": 4588,
   "type": "message",
   "date": "2024-08-10T23:52:20",
   "date_unixtime": "1723314140",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4586,
   "text": "If it’s an OP stack rollup then it will have EAS built in. Otherwise we manually deploy L2s on a case by case basis depending on whether it makes sense to deploy resources for the indexer/explorer (mostly depending on how much developer activity the L2 has)",
   "text_entities": [
    {
     "type": "plain",
     "text": "If it’s an OP stack rollup then it will have EAS built in. Otherwise we manually deploy L2s on a case by case basis depending on whether it makes sense to deploy resources for the indexer/explorer (mostly depending on how much developer activity the L2 has)"
    }
   ]
  },
  {
   "id": 4589,
   "type": "message",
   "date": "2024-08-11T00:18:25",
   "date_unixtime": "1723315705",
   "from": "Phillip Kemper",
   "from_id": "user484842417",
   "text": "it is OP Stack but I would also like it to be featured on EAS Scan! thx for the info already.",
   "text_entities": [
    {
     "type": "plain",
     "text": "it is OP Stack but I would also like it to be featured on EAS Scan! thx for the info already."
    }
   ]
  },
  {
   "id": 4590,
   "type": "service",
   "date": "2024-08-11T04:33:14",
   "date_unixtime": "1723330994",
   "actor": "Kara Howard @ SI<3>",
   "actor_id": "user6575539159",
   "action": "invite_members",
   "members": [
    "Zeya Metsapuu"
   ],
   "text": "",
   "text_entities": []
  },
  {
   "id": 4591,
   "type": "message",
   "date": "2024-08-11T09:05:51",
   "date_unixtime": "1723347351",
   "from": "Star",
   "from_id": "user1705406202",
   "reply_to_message_id": 4584,
   "text": "Yes sir.  I try to deploy my badge with scroll code but I have a problem. wen I compile the codes I get this error : [{\n \n \"message\": \"Source \\\"@eas/contracts/IEAS.sol\\\" not found: File import callback not supported\",\n \nHow I can install this, I cloned the @eas/contracts code but its not working yet",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes sir.  I try to deploy my badge with scroll code but I have a problem. wen I compile the codes I get this error : [{\n \n \"message\": \"Source \\\"@eas/contracts/IEAS.sol\\\" not found: File import callback not supported\",\n \nHow I can install this, I cloned the @eas/contracts code but its not working yet"
    }
   ]
  },
  {
   "id": 4592,
   "type": "service",
   "date": "2024-08-11T18:54:21",
   "date_unixtime": "1723382661",
   "actor": "xalzz e",
   "actor_id": "user1386377752",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4593,
   "type": "message",
   "date": "2024-08-11T20:26:21",
   "date_unixtime": "1723388181",
   "from": "xalzz e",
   "from_id": "user1386377752",
   "text": "GM",
   "text_entities": [
    {
     "type": "plain",
     "text": "GM"
    }
   ]
  },
  {
   "id": 4594,
   "type": "message",
   "date": "2024-08-12T06:51:47",
   "date_unixtime": "1723425707",
   "from": "Rookie",
   "from_id": "user5373031681",
   "reply_to_message_id": 2,
   "text": "Hey folks, I'm developing a frame for attestations and we're looking to reward attesters with reputation tokens. I'm weighing our options here - wondering if a multicall frame is feasible (if that's even a thing?), or if we should create a dedicated contract that holds the token balance for transfers and interfaces with EAS. Any insights or recommendations would be greatly appreciated!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey folks, I'm developing a frame for attestations and we're looking to reward attesters with reputation tokens. I'm weighing our options here - wondering if a multicall frame is feasible (if that's even a thing?), or if we should create a dedicated contract that holds the token balance for transfers and interfaces with EAS. Any insights or recommendations would be greatly appreciated!"
    }
   ]
  },
  {
   "id": 4595,
   "type": "message",
   "date": "2024-08-12T15:28:42",
   "date_unixtime": "1723456722",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "text": "Hey, anyone knows if it's possible to work with Boost (formerly rabbithole) to incentivize people to issue attestations through EAS?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey, anyone knows if it's possible to work with Boost (formerly rabbithole) to incentivize people to issue attestations through EAS?"
    }
   ]
  },
  {
   "id": 4596,
   "type": "service",
   "date": "2024-08-12T17:10:46",
   "date_unixtime": "1723462846",
   "actor": "yg planet",
   "actor_id": "user6258253568",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4597,
   "type": "message",
   "date": "2024-08-12T17:11:19",
   "date_unixtime": "1723462879",
   "from": "yg planet",
   "from_id": "user6258253568",
   "text": "How to check how many SCROLL badges were minted at a specific address?",
   "text_entities": [
    {
     "type": "plain",
     "text": "How to check how many SCROLL badges were minted at a specific address?"
    }
   ]
  },
  {
   "id": 4598,
   "type": "message",
   "date": "2024-08-12T17:11:26",
   "date_unixtime": "1723462886",
   "from": "yg planet",
   "from_id": "user6258253568",
   "text": "🥹",
   "text_entities": [
    {
     "type": "plain",
     "text": "🥹"
    }
   ]
  },
  {
   "id": 4599,
   "type": "message",
   "date": "2024-08-12T21:43:32",
   "date_unixtime": "1723479212",
   "from": "Rookie",
   "from_id": "user5373031681",
   "reply_to_message_id": 1848,
   "text": "Im working with an L1 called rootstock and they would like to have this protocol running there",
   "text_entities": [
    {
     "type": "plain",
     "text": "Im working with an L1 called rootstock and they would like to have this protocol running there"
    }
   ]
  },
  {
   "id": 4600,
   "type": "message",
   "date": "2024-08-12T21:43:48",
   "date_unixtime": "1723479228",
   "from": "Rookie",
   "from_id": "user5373031681",
   "reply_to_message_id": 1848,
   "text": "There is any possibility of an official deoloy?",
   "text_entities": [
    {
     "type": "plain",
     "text": "There is any possibility of an official deoloy?"
    }
   ]
  },
  {
   "id": 4601,
   "type": "message",
   "date": "2024-08-12T21:46:22",
   "date_unixtime": "1723479382",
   "edited": "2024-08-13T14:05:56",
   "edited_unixtime": "1723538156",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 2,
   "text": [
    "this ethglobal submission for superhack is awesome! - a developer dashboard and eas-react SDK with front-end components 🚀 ",
    {
     "type": "link",
     "text": "https://ethglobal.com/showcase/eas-developer-kit-wwh1o"
    },
    " congrats to the team!"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "this ethglobal submission for superhack is awesome! - a developer dashboard and eas-react SDK with front-end components 🚀 "
    },
    {
     "type": "link",
     "text": "https://ethglobal.com/showcase/eas-developer-kit-wwh1o"
    },
    {
     "type": "plain",
     "text": " congrats to the team!"
    }
   ]
  },
  {
   "id": 4602,
   "type": "message",
   "date": "2024-08-13T01:25:54",
   "date_unixtime": "1723492554",
   "edited": "2024-08-13T01:48:26",
   "edited_unixtime": "1723493906",
   "from": "Gattman | Sherlock",
   "from_id": "user5347013711",
   "text": [
    "It is Gitcoin season again. Placing an unsolicited shill for EAS. Please consider donating if you can. \n\n",
    {
     "type": "bold",
     "text": "EAS"
    },
    ":\n",
    {
     "type": "text_link",
     "text": "https://explorer.gitcoin.co/#/round/42220/11/90",
     "href": "https://explorer.gitcoin.co/#/round/42220/11/90"
    },
    "\n",
    {
     "type": "text_link",
     "text": "https://explorer.gitcoin.co/#/round/42161/389/114",
     "href": "https://explorer.gitcoin.co/#/round/42161/389/114"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "It is Gitcoin season again. Placing an unsolicited shill for EAS. Please consider donating if you can. \n\n"
    },
    {
     "type": "bold",
     "text": "EAS"
    },
    {
     "type": "plain",
     "text": ":\n"
    },
    {
     "type": "text_link",
     "text": "https://explorer.gitcoin.co/#/round/42220/11/90",
     "href": "https://explorer.gitcoin.co/#/round/42220/11/90"
    },
    {
     "type": "plain",
     "text": "\n"
    },
    {
     "type": "text_link",
     "text": "https://explorer.gitcoin.co/#/round/42161/389/114",
     "href": "https://explorer.gitcoin.co/#/round/42161/389/114"
    }
   ]
  },
  {
   "id": 4603,
   "type": "message",
   "date": "2024-08-13T04:38:40",
   "date_unixtime": "1723504120",
   "from": "Mitch Oz",
   "from_id": "user546190199",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 340,
   "text": "hey guys! I'm querying the graphQL endpoint on optimism, trying to get some info about a particular schema and it looks like it is either timing out or broken.. maybe I'm not formatting my query right?",
   "text_entities": [
    {
     "type": "plain",
     "text": "hey guys! I'm querying the graphQL endpoint on optimism, trying to get some info about a particular schema and it looks like it is either timing out or broken.. maybe I'm not formatting my query right?"
    }
   ]
  },
  {
   "id": 4604,
   "type": "message",
   "date": "2024-08-13T14:13:53",
   "date_unixtime": "1723538633",
   "edited": "2024-08-13T14:21:03",
   "edited_unixtime": "1723539063",
   "from": "Koushith.eth",
   "from_id": "user614575266",
   "reply_to_message_id": 4603,
   "text": [
    {
     "type": "pre",
     "text": "export const GET_SCHEMA_BY_ID = gql`\n  query GetSchema($where: SchemaWhereUniqueInput!) {\n    getSchema(where: $where) {\n      id\n      schema\n      creator\n      resolver\n      revocable\n      index\n      txid\n      time\n      attestations {\n        id\n        data\n        decodedDataJson\n        recipient\n        attester\n        time\n        timeCreated\n        expirationTime\n        revocationTime\n        refUID\n        revocable\n        revoked\n        txid\n        schemaId\n        ipfsHash\n        isOffchain\n        schema {\n          id\n          index\n          creator\n        }\n      }\n    }\n  }\n`;\n\n",
     "language": "javascript"
    },
    "\n\n",
    {
     "type": "pre",
     "text": "\n\n\n const { loading, error, data } = useQuery(GET_SCHEMA_BY_ID, {\n    variables: {\n      where: {\n        id: schemaId,\n      },\n    },\n  });\n",
     "language": "javascript"
    },
    "\n\nhere iam trying to get the schema info by id. feel free to filter by creator, id, index  and change the structure accordingly🙂"
   ],
   "text_entities": [
    {
     "type": "pre",
     "text": "export const GET_SCHEMA_BY_ID = gql`\n  query GetSchema($where: SchemaWhereUniqueInput!) {\n    getSchema(where: $where) {\n      id\n      schema\n      creator\n      resolver\n      revocable\n      index\n      txid\n      time\n      attestations {\n        id\n        data\n        decodedDataJson\n        recipient\n        attester\n        time\n        timeCreated\n        expirationTime\n        revocationTime\n        refUID\n        revocable\n        revoked\n        txid\n        schemaId\n        ipfsHash\n        isOffchain\n        schema {\n          id\n          index\n          creator\n        }\n      }\n    }\n  }\n`;\n\n",
     "language": "javascript"
    },
    {
     "type": "plain",
     "text": "\n\n"
    },
    {
     "type": "pre",
     "text": "\n\n\n const { loading, error, data } = useQuery(GET_SCHEMA_BY_ID, {\n    variables: {\n      where: {\n        id: schemaId,\n      },\n    },\n  });\n",
     "language": "javascript"
    },
    {
     "type": "plain",
     "text": "\n\nhere iam trying to get the schema info by id. feel free to filter by creator, id, index  and change the structure accordingly🙂"
    }
   ]
  },
  {
   "id": 4605,
   "type": "message",
   "date": "2024-08-13T14:18:05",
   "date_unixtime": "1723538885",
   "edited": "2024-08-13T14:20:09",
   "edited_unixtime": "1723539009",
   "from": "Koushith.eth",
   "from_id": "user614575266",
   "reply_to_message_id": 4601,
   "text": [
    "Thanks for the  shout-out, ",
    {
     "type": "mention",
     "text": "@Tantodefi"
    },
    " . Have you tried the application yet? We'd love to hear your thoughts!"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks for the  shout-out, "
    },
    {
     "type": "mention",
     "text": "@Tantodefi"
    },
    {
     "type": "plain",
     "text": " . Have you tried the application yet? We'd love to hear your thoughts!"
    }
   ]
  },
  {
   "id": 4606,
   "type": "message",
   "date": "2024-08-13T14:20:24",
   "date_unixtime": "1723539024",
   "from": "Sweta Shaw 🥕",
   "from_id": "user921462201",
   "reply_to_message_id": 4601,
   "text": [
    "Thank you for the shoutout here ",
    {
     "type": "mention",
     "text": "@Tantodefi"
    },
    " 🙏"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thank you for the shoutout here "
    },
    {
     "type": "mention",
     "text": "@Tantodefi"
    },
    {
     "type": "plain",
     "text": " 🙏"
    }
   ]
  },
  {
   "id": 4607,
   "type": "service",
   "date": "2024-08-13T18:18:49",
   "date_unixtime": "1723553329",
   "actor": "Ivan Grachev",
   "actor_id": "user17258150",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4608,
   "type": "message",
   "date": "2024-08-13T18:24:43",
   "date_unixtime": "1723553683",
   "from": "Ivan Grachev",
   "from_id": "user17258150",
   "reply_to_message_id": 2,
   "text": [
    {
     "type": "link",
     "text": "https://base.easscan.org/attestation/attestWithSchema/0x8c138d949f94e74f6503a8633bb25982946709fddc196764e26c9325b8c04f73#template=0xE26067c76fdbe877F48b0a8400cf5Db8B47aF0fE::0:false:0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000fcde41b2000000000000000000000000000000000000000000000000000000000000003b6261666b7265696663356c766b326d686932767474336c65786d343333786e377577646461646c7773766e356e33376b7776367370326b6f6170610000000000"
    },
    "\n\ni use these urls to redirect from the native app in order to attest\n\nis there a way to construct a url for a batch attest tx?"
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://base.easscan.org/attestation/attestWithSchema/0x8c138d949f94e74f6503a8633bb25982946709fddc196764e26c9325b8c04f73#template=0xE26067c76fdbe877F48b0a8400cf5Db8B47aF0fE::0:false:0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000fcde41b2000000000000000000000000000000000000000000000000000000000000003b6261666b7265696663356c766b326d686932767474336c65786d343333786e377577646461646c7773766e356e33376b7776367370326b6f6170610000000000"
    },
    {
     "type": "plain",
     "text": "\n\ni use these urls to redirect from the native app in order to attest\n\nis there a way to construct a url for a batch attest tx?"
    }
   ]
  },
  {
   "id": 4609,
   "type": "message",
   "date": "2024-08-13T18:48:59",
   "date_unixtime": "1723555139",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 4063,
   "text": [
    "I think this is good to sit at this page ",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/create-a-schema"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "I think this is good to sit at this page "
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/tutorials/create-a-schema"
    }
   ]
  },
  {
   "id": 4610,
   "type": "message",
   "date": "2024-08-13T18:55:03",
   "date_unixtime": "1723555503",
   "edited": "2024-08-13T18:56:31",
   "edited_unixtime": "1723555591",
   "from": "José Luis",
   "from_id": "user760641807",
   "reply_to_message_id": 4609,
   "text": "I can do a PR if you want",
   "text_entities": [
    {
     "type": "plain",
     "text": "I can do a PR if you want"
    }
   ]
  },
  {
   "id": 4611,
   "type": "message",
   "date": "2024-08-13T18:55:57",
   "date_unixtime": "1723555557",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 4610,
   "text": "That would be awesome!",
   "text_entities": [
    {
     "type": "plain",
     "text": "That would be awesome!"
    }
   ]
  },
  {
   "id": 4612,
   "type": "message",
   "date": "2024-08-13T20:22:35",
   "date_unixtime": "1723560755",
   "edited": "2024-08-14T10:29:59",
   "edited_unixtime": "1723611599",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4605,
   "text": "I played with the vite front-end quickly\nmade a note to play with the sdk later / gonna see if the react components play nice with se2",
   "text_entities": [
    {
     "type": "plain",
     "text": "I played with the vite front-end quickly\nmade a note to play with the sdk later / gonna see if the react components play nice with se2"
    }
   ]
  },
  {
   "id": 4613,
   "type": "service",
   "date": "2024-08-14T05:31:17",
   "date_unixtime": "1723593677",
   "actor": "Nestor Bonilla",
   "actor_id": "user1703734354",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4614,
   "type": "message",
   "date": "2024-08-14T10:29:56",
   "date_unixtime": "1723611596",
   "edited": "2024-08-14T17:00:23",
   "edited_unixtime": "1723635023",
   "from": "Sweta Shaw 🥕",
   "from_id": "user921462201",
   "reply_to_message_id": 4612,
   "text": "That's great, the vite frontend uses the react components, so if you played with vite frontend you already played with react components exposed by the library - create schema and make attestations button",
   "text_entities": [
    {
     "type": "plain",
     "text": "That's great, the vite frontend uses the react components, so if you played with vite frontend you already played with react components exposed by the library - create schema and make attestations button"
    }
   ]
  },
  {
   "id": 4615,
   "type": "service",
   "date": "2024-08-14T14:38:04",
   "date_unixtime": "1723626484",
   "actor": "Behzad Rabiei",
   "actor_id": "user203678862",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4616,
   "type": "message",
   "date": "2024-08-14T16:18:51",
   "date_unixtime": "1723632531",
   "from": "Ivan Grachev",
   "from_id": "user17258150",
   "reply_to_message_id": 2,
   "text": "can you add new attestations and revoke some existing ones in a single transaction?",
   "text_entities": [
    {
     "type": "plain",
     "text": "can you add new attestations and revoke some existing ones in a single transaction?"
    }
   ]
  },
  {
   "id": 4617,
   "type": "service",
   "date": "2024-08-14T19:56:25",
   "date_unixtime": "1723645585",
   "actor": "ponyjackal",
   "actor_id": "user771313291",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4618,
   "type": "message",
   "date": "2024-08-15T00:22:30",
   "date_unixtime": "1723661550",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 4616,
   "text": "I think you can use multicall3",
   "text_entities": [
    {
     "type": "plain",
     "text": "I think you can use multicall3"
    }
   ]
  },
  {
   "id": 4619,
   "type": "message",
   "date": "2024-08-15T00:25:16",
   "date_unixtime": "1723661716",
   "edited": "2024-08-15T00:29:40",
   "edited_unixtime": "1723661980",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 2,
   "text": "I wish there could be some mutability as an attestation schema, otherwise the best way I found to create mutability is to revocle the original attestation, then attesting a new one with the refUID pointing to the revoked one. But this method creates a streamline of data that drains to much gas. \nThe team obviously have considered something like this before or the communtiy must have debated about it, could someone fill me in?",
   "text_entities": [
    {
     "type": "plain",
     "text": "I wish there could be some mutability as an attestation schema, otherwise the best way I found to create mutability is to revocle the original attestation, then attesting a new one with the refUID pointing to the revoked one. But this method creates a streamline of data that drains to much gas. \nThe team obviously have considered something like this before or the communtiy must have debated about it, could someone fill me in?"
    }
   ]
  },
  {
   "id": 4620,
   "type": "service",
   "date": "2024-08-15T00:50:59",
   "date_unixtime": "1723663259",
   "actor": "Paul Grey 🔑",
   "actor_id": "user318555061",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4621,
   "type": "message",
   "date": "2024-08-15T00:51:09",
   "date_unixtime": "1723663269",
   "edited": "2024-08-16T00:42:23",
   "edited_unixtime": "1723749143",
   "from": "Paul Grey 🔑",
   "from_id": "user318555061",
   "text": "Hi all, Paul Grey from Metal L2 here!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi all, Paul Grey from Metal L2 here!"
    }
   ]
  },
  {
   "id": 4622,
   "type": "message",
   "date": "2024-08-15T10:17:00",
   "date_unixtime": "1723697220",
   "from": "Sweta Shaw 🥕",
   "from_id": "user921462201",
   "text": "Hello Paul 👋",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello Paul 👋"
    }
   ]
  },
  {
   "id": 4623,
   "type": "message",
   "date": "2024-08-15T19:15:52",
   "date_unixtime": "1723729552",
   "from": "Jamey Canterbury",
   "from_id": "user6241008340",
   "reply_to_message_id": 2,
   "text": "Hi - I'm playing with an idea to use EAS to help fight live streaming deep fakes.  I'm looking for a template/tutorial that can help with the wallet integration for making attestations directly from my site.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi - I'm playing with an idea to use EAS to help fight live streaming deep fakes.  I'm looking for a template/tutorial that can help with the wallet integration for making attestations directly from my site."
    }
   ]
  },
  {
   "id": 4624,
   "type": "message",
   "date": "2024-08-16T00:12:35",
   "date_unixtime": "1723747355",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4619,
   "text": "We have thought about this and we believe that modifying a schema creates backward compatibility issues and could potentially invalidate previous attestations.",
   "text_entities": [
    {
     "type": "plain",
     "text": "We have thought about this and we believe that modifying a schema creates backward compatibility issues and could potentially invalidate previous attestations."
    }
   ]
  },
  {
   "id": 4625,
   "type": "message",
   "date": "2024-08-16T00:13:28",
   "date_unixtime": "1723747408",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4623,
   "text": [
    "Yes that’s a great idea. You can use ",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/met-irl"
    },
    " as a starting point"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes that’s a great idea. You can use "
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/met-irl"
    },
    {
     "type": "plain",
     "text": " as a starting point"
    }
   ]
  },
  {
   "id": 4626,
   "type": "message",
   "date": "2024-08-16T00:42:46",
   "date_unixtime": "1723749166",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": "Hey Paul! Welcome in 👋",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey Paul! Welcome in 👋"
    }
   ]
  },
  {
   "id": 4627,
   "type": "message",
   "date": "2024-08-16T01:04:32",
   "date_unixtime": "1723750472",
   "from": "Bertrand Juglas | Arthera Integration Engineer",
   "from_id": "user548814145",
   "reply_to_message_id": 4625,
   "text": "Yes it helped me during EthGlobal SuperHack online hackathon 😁\nI have managed to upgrade it to Base Sepolia after switching chains list from wagmi package to viem.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Yes it helped me during EthGlobal SuperHack online hackathon 😁\nI have managed to upgrade it to Base Sepolia after switching chains list from wagmi package to viem."
    }
   ]
  },
  {
   "id": 4628,
   "type": "message",
   "date": "2024-08-16T01:06:39",
   "date_unixtime": "1723750599",
   "edited": "2024-08-17T01:40:03",
   "edited_unixtime": "1723839003",
   "from": "Jamey Canterbury",
   "from_id": "user6241008340",
   "reply_to_message_id": 2,
   "text": "Nice!  looking at it now will keep you posted.  If you want to see what it looks like I should have somethign shareable in a day or two",
   "text_entities": [
    {
     "type": "plain",
     "text": "Nice!  looking at it now will keep you posted.  If you want to see what it looks like I should have somethign shareable in a day or two"
    }
   ]
  },
  {
   "id": 4629,
   "type": "message",
   "date": "2024-08-16T01:22:37",
   "date_unixtime": "1723751557",
   "from": "Paul Grey 🔑",
   "from_id": "user318555061",
   "reply_to_message_id": 1848,
   "text": "Hi team, Paul Grey from Metallicus / Metal L2 here, developers have asked us about EAS on Metal L2. \n\nPlease contact me in regards to deployment.\n\nMetal L2 - The Banking Layer on Superchain",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi team, Paul Grey from Metallicus / Metal L2 here, developers have asked us about EAS on Metal L2. \n\nPlease contact me in regards to deployment.\n\nMetal L2 - The Banking Layer on Superchain"
    }
   ]
  },
  {
   "id": 4630,
   "type": "message",
   "date": "2024-08-16T18:47:53",
   "date_unixtime": "1723814273",
   "edited": "2024-08-16T23:02:31",
   "edited_unixtime": "1723829551",
   "from": "johnx",
   "from_id": "user1032403098",
   "text": [
    "Hey EAS — we just launched our new Location Proof Protocol on Arbitrum mainnet 😎\n\nYou can read a bit about the schema we built, and why, here: ",
    {
     "type": "link",
     "text": "https://x.com/AstralProtocol/status/1824421706313678955"
    },
    "\n\nAnd if you want to go more in depth, we've got it all documented: ",
    {
     "type": "link",
     "text": "https://docs.astral.global/docs/location-proof-protocol/introduction"
    },
    "\n\nMost importantly — if anyone is working with location data on EAS, we'd love to meet you. This is meant to be a generalized protocol for any location-based services, and we'd love to see / adapt to fit your use case so we can all realize the interoperability benefits that come from alignment around a common data model ...\n\n❤️"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey EAS — we just launched our new Location Proof Protocol on Arbitrum mainnet 😎\n\nYou can read a bit about the schema we built, and why, here: "
    },
    {
     "type": "link",
     "text": "https://x.com/AstralProtocol/status/1824421706313678955"
    },
    {
     "type": "plain",
     "text": "\n\nAnd if you want to go more in depth, we've got it all documented: "
    },
    {
     "type": "link",
     "text": "https://docs.astral.global/docs/location-proof-protocol/introduction"
    },
    {
     "type": "plain",
     "text": "\n\nMost importantly — if anyone is working with location data on EAS, we'd love to meet you. This is meant to be a generalized protocol for any location-based services, and we'd love to see / adapt to fit your use case so we can all realize the interoperability benefits that come from alignment around a common data model ...\n\n❤️"
    }
   ]
  },
  {
   "id": 4631,
   "type": "message",
   "date": "2024-08-16T18:48:27",
   "date_unixtime": "1723814307",
   "from": "johnx",
   "from_id": "user1032403098",
   "text": [
    "(Also — if anyone is donating on Gitcoin, consider showing us some love there! 🙏)\n\n",
    {
     "type": "link",
     "text": "https://x.com/AstralProtocol/status/1824434189380227357"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "(Also — if anyone is donating on Gitcoin, consider showing us some love there! 🙏)\n\n"
    },
    {
     "type": "link",
     "text": "https://x.com/AstralProtocol/status/1824434189380227357"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 4632,
   "type": "service",
   "date": "2024-08-16T22:17:57",
   "date_unixtime": "1723826877",
   "actor": "Ramana",
   "actor_id": "user863664208",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4633,
   "type": "message",
   "date": "2024-08-16T22:19:14",
   "date_unixtime": "1723826954",
   "from": "Ramana",
   "from_id": "user863664208",
   "text": "Is anyone using EAS for signing terms of service? Is that a reasonable use?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is anyone using EAS for signing terms of service? Is that a reasonable use?"
    }
   ]
  },
  {
   "id": 4634,
   "type": "message",
   "date": "2024-08-16T22:19:47",
   "date_unixtime": "1723826987",
   "from": "Ramana",
   "from_id": "user863664208",
   "text": "also for a mostly/entirely offchain approach, is EAS worthwhile? I am already doing EIP-712 signatures but with a custom type, and considering whether to fit it into EAS instead...",
   "text_entities": [
    {
     "type": "plain",
     "text": "also for a mostly/entirely offchain approach, is EAS worthwhile? I am already doing EIP-712 signatures but with a custom type, and considering whether to fit it into EAS instead..."
    }
   ]
  },
  {
   "id": 4635,
   "type": "message",
   "date": "2024-08-16T23:07:42",
   "date_unixtime": "1723829862",
   "edited": "2024-08-16T23:08:04",
   "edited_unixtime": "1723829884",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4633,
   "text": "SIWE usually covers agreeing to TOS from what i've seen in the wild\n\nUsually where dapps link them",
   "text_entities": [
    {
     "type": "plain",
     "text": "SIWE usually covers agreeing to TOS from what i've seen in the wild\n\nUsually where dapps link them"
    }
   ]
  },
  {
   "id": 4636,
   "type": "message",
   "date": "2024-08-17T00:09:20",
   "date_unixtime": "1723833560",
   "edited": "2024-08-17T00:53:27",
   "edited_unixtime": "1723836207",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4633,
   "text": "I haven’t seen it but I think it’s a great use case since it can be stored and proven at any time in the future to anyone as well as retaining a timestamp and other attestation features",
   "text_entities": [
    {
     "type": "plain",
     "text": "I haven’t seen it but I think it’s a great use case since it can be stored and proven at any time in the future to anyone as well as retaining a timestamp and other attestation features"
    }
   ]
  },
  {
   "id": 4637,
   "type": "message",
   "date": "2024-08-17T00:10:43",
   "date_unixtime": "1723833643",
   "from": "Ramana",
   "from_id": "user863664208",
   "text": "would it still make sense if only off chain though?",
   "text_entities": [
    {
     "type": "plain",
     "text": "would it still make sense if only off chain though?"
    }
   ]
  },
  {
   "id": 4638,
   "type": "message",
   "date": "2024-08-17T00:19:15",
   "date_unixtime": "1723834155",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "ETHGlobal Superhack just ended and finalists were announced! Congrats to all the winners and special thanks to everyone who built on EAS! \n\n",
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1824514902792499484"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "ETHGlobal Superhack just ended and finalists were announced! Congrats to all the winners and special thanks to everyone who built on EAS! \n\n"
    },
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1824514902792499484"
    }
   ]
  },
  {
   "id": 4639,
   "type": "message",
   "date": "2024-08-17T00:57:56",
   "date_unixtime": "1723836476",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4637,
   "text": "Sure. If you’re company X and user Y signs the TOS as an offchain attestation from their address, you can store it and later reveal it to any entity that would want to verify it",
   "text_entities": [
    {
     "type": "plain",
     "text": "Sure. If you’re company X and user Y signs the TOS as an offchain attestation from their address, you can store it and later reveal it to any entity that would want to verify it"
    }
   ]
  },
  {
   "id": 4640,
   "type": "message",
   "date": "2024-08-17T00:58:56",
   "date_unixtime": "1723836536",
   "edited": "2024-08-17T00:59:06",
   "edited_unixtime": "1723836546",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "text": "also user can get some privacy since no one will know that they signed a TOS",
   "text_entities": [
    {
     "type": "plain",
     "text": "also user can get some privacy since no one will know that they signed a TOS"
    }
   ]
  },
  {
   "id": 4641,
   "type": "message",
   "date": "2024-08-17T01:28:36",
   "date_unixtime": "1723838316",
   "from": "Kristofer",
   "from_id": "user478406226",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1236,
   "height": 1280,
   "text": "New version of C–ATTS soon ready to be shipped. Attest to *any* onchain data, provided you can query it using GraphQL. That means, EAS attestations, any query on The Graph etc. \n\nBut I am thinking.. maybe add support for REST queries as well? That would open the door to easily creating attestations on tokens, NFT, transactions, etc. Most of those query apis are REST only. Any thoughts, would this be a good feature to add?",
   "text_entities": [
    {
     "type": "plain",
     "text": "New version of C–ATTS soon ready to be shipped. Attest to *any* onchain data, provided you can query it using GraphQL. That means, EAS attestations, any query on The Graph etc. \n\nBut I am thinking.. maybe add support for REST queries as well? That would open the door to easily creating attestations on tokens, NFT, transactions, etc. Most of those query apis are REST only. Any thoughts, would this be a good feature to add?"
    }
   ]
  },
  {
   "id": 4642,
   "type": "message",
   "date": "2024-08-17T01:28:37",
   "date_unixtime": "1723838317",
   "from": "Kristofer",
   "from_id": "user478406226",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 952,
   "height": 1280,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4643,
   "type": "message",
   "date": "2024-08-17T01:28:37",
   "date_unixtime": "1723838317",
   "from": "Kristofer",
   "from_id": "user478406226",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 1131,
   "text": "",
   "text_entities": []
  },
  {
   "id": 4644,
   "type": "message",
   "date": "2024-08-17T01:36:44",
   "date_unixtime": "1723838804",
   "edited": "2024-08-17T01:39:17",
   "edited_unixtime": "1723838957",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4643,
   "text": "whats c-atts ? Looks cool",
   "text_entities": [
    {
     "type": "plain",
     "text": "whats c-atts ? Looks cool"
    }
   ]
  },
  {
   "id": 4645,
   "type": "message",
   "date": "2024-08-17T01:41:00",
   "date_unixtime": "1723839060",
   "edited": "2024-08-17T01:41:25",
   "edited_unixtime": "1723839085",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 4644,
   "text": [
    "C–ATTS is an engine that allows you to clone, migrate, combine, transform attestations. I launched a PoC late spring and am about to ship the real deal soon. Here is a slightly outdated article describing the setup: ",
    {
     "type": "link",
     "text": "https://kristoferlund.se/blog/240214-catts"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "C–ATTS is an engine that allows you to clone, migrate, combine, transform attestations. I launched a PoC late spring and am about to ship the real deal soon. Here is a slightly outdated article describing the setup: "
    },
    {
     "type": "link",
     "text": "https://kristoferlund.se/blog/240214-catts"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 4646,
   "type": "message",
   "date": "2024-08-17T01:44:01",
   "date_unixtime": "1723839241",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4645,
   "text": "Very cool stuff!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Very cool stuff!"
    }
   ]
  },
  {
   "id": 4647,
   "type": "message",
   "date": "2024-08-17T01:44:04",
   "date_unixtime": "1723839244",
   "from": "Tantodefi.eth",
   "from_id": "user6688616177",
   "reply_to_message_id": 4623,
   "text": [
    "If you check eas x account there was a tweet about the ethglobal superhack and i saw several new react component libraries built that might help you with your mvp\n\n",
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1824514902792499484?t=jJhDuOD5JaMsmOhzg7DMDA&s=19"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "If you check eas x account there was a tweet about the ethglobal superhack and i saw several new react component libraries built that might help you with your mvp\n\n"
    },
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1824514902792499484?t=jJhDuOD5JaMsmOhzg7DMDA&s=19"
    }
   ]
  },
  {
   "id": 4648,
   "type": "message",
   "date": "2024-08-17T02:36:50",
   "date_unixtime": "1723842410",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "It's going to be a great dev tool! Excited for the official launch ",
    {
     "type": "mention",
     "text": "@kristoferkristofer"
    },
    ". What type of feedback would be most helpful to you at this stage?"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "It's going to be a great dev tool! Excited for the official launch "
    },
    {
     "type": "mention",
     "text": "@kristoferkristofer"
    },
    {
     "type": "plain",
     "text": ". What type of feedback would be most helpful to you at this stage?"
    }
   ]
  },
  {
   "id": 4649,
   "type": "message",
   "date": "2024-08-17T03:02:32",
   "date_unixtime": "1723843952",
   "from": "Kristofer",
   "from_id": "user478406226",
   "reply_to_message_id": 4648,
   "text": "Thanks! For starters, just clicking around and creating some attestations would be great, commenting on any weirdness discovered. Hope to soft launch during next week, currently I am stuck on an IC deployment issue I can’t recreate locally.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks! For starters, just clicking around and creating some attestations would be great, commenting on any weirdness discovered. Hope to soft launch during next week, currently I am stuck on an IC deployment issue I can’t recreate locally."
    }
   ]
  },
  {
   "id": 4650,
   "type": "message",
   "date": "2024-08-17T03:18:39",
   "date_unixtime": "1723844919",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4649,
   "text": "Happy to poke around and encourage others to also!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Happy to poke around and encourage others to also!"
    }
   ]
  },
  {
   "id": 4651,
   "type": "service",
   "date": "2024-08-17T08:45:31",
   "date_unixtime": "1723864531",
   "actor": "Angel Say",
   "actor_id": "user1998140265",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4652,
   "type": "message",
   "date": "2024-08-17T21:21:58",
   "date_unixtime": "1723909918",
   "from": "Alejandro Jaramillo",
   "from_id": "user243058386",
   "text": "hey guys! I am planning to deploy an app on the Lisk network (an L2 superchain of optimism) is there any difference between the versions or how does this work ?",
   "text_entities": [
    {
     "type": "plain",
     "text": "hey guys! I am planning to deploy an app on the Lisk network (an L2 superchain of optimism) is there any difference between the versions or how does this work ?"
    }
   ]
  },
  {
   "id": 4653,
   "type": "message",
   "date": "2024-08-17T21:27:06",
   "date_unixtime": "1723910226",
   "from": "Alejandro Jaramillo",
   "from_id": "user243058386",
   "text": "As long as I understand the chain should have the same eas address contract as the one in optimism because it is a superchain",
   "text_entities": [
    {
     "type": "plain",
     "text": "As long as I understand the chain should have the same eas address contract as the one in optimism because it is a superchain"
    }
   ]
  },
  {
   "id": 4654,
   "type": "message",
   "date": "2024-08-18T17:12:09",
   "date_unixtime": "1723981329",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4653,
   "text": "This is correct",
   "text_entities": [
    {
     "type": "plain",
     "text": "This is correct"
    }
   ]
  },
  {
   "id": 4655,
   "type": "message",
   "date": "2024-08-18T17:20:01",
   "date_unixtime": "1723981801",
   "edited": "2024-08-18T17:37:38",
   "edited_unixtime": "1723982858",
   "from": "Alejandro Jaramillo",
   "from_id": "user243058386",
   "reply_to_message_id": 4654,
   "text": "But I see that the versions between chains are super different. Any reason why?",
   "text_entities": [
    {
     "type": "plain",
     "text": "But I see that the versions between chains are super different. Any reason why?"
    }
   ]
  },
  {
   "id": 4656,
   "type": "message",
   "date": "2024-08-19T03:07:49",
   "date_unixtime": "1724017069",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4655,
   "text": "They aren’t very different between chains.",
   "text_entities": [
    {
     "type": "plain",
     "text": "They aren’t very different between chains."
    }
   ]
  },
  {
   "id": 4657,
   "type": "message",
   "date": "2024-08-19T06:07:20",
   "date_unixtime": "1724027840",
   "from": "Jamey Canterbury",
   "from_id": "user6241008340",
   "reply_to_message_id": 4647,
   "text": [
    "Thanks!  that is superhelpful.  I realized after looing at ",
    {
     "type": "link",
     "text": "metirl.org"
    },
    " - and these projects reconfirmed it - that it's way easier to get the wallet connected if you are using react which I wasnt too familiar with.  so that was my weekend rabbit hole... but I got it working now.  just cleaning up the other half of the project..."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks!  that is superhelpful.  I realized after looing at "
    },
    {
     "type": "link",
     "text": "metirl.org"
    },
    {
     "type": "plain",
     "text": " - and these projects reconfirmed it - that it's way easier to get the wallet connected if you are using react which I wasnt too familiar with.  so that was my weekend rabbit hole... but I got it working now.  just cleaning up the other half of the project..."
    }
   ]
  },
  {
   "id": 4658,
   "type": "message",
   "date": "2024-08-19T16:10:58",
   "date_unixtime": "1724064058",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "reply_to_message_id": 4595,
   "text": "Anyone know of a questing platform that supports EAS actions (e.g. \"attest\") to incentize people to do stuff onchain?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Anyone know of a questing platform that supports EAS actions (e.g. \"attest\") to incentize people to do stuff onchain?"
    }
   ]
  },
  {
   "id": 4659,
   "type": "message",
   "date": "2024-08-19T19:14:59",
   "date_unixtime": "1724075099",
   "from": "Giovanni Mazzeo",
   "from_id": "user1014095008",
   "reply_to_message_id": 1848,
   "text": "Hi guys. This is Giovanni from the Credora company. I am wondering how we can setup a dedicated easscan for a blockchain where we have deployed the EAS contracts.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi guys. This is Giovanni from the Credora company. I am wondering how we can setup a dedicated easscan for a blockchain where we have deployed the EAS contracts."
    }
   ]
  },
  {
   "id": 4660,
   "type": "message",
   "date": "2024-08-19T19:24:05",
   "date_unixtime": "1724075645",
   "from": "Sweta Shaw 🥕",
   "from_id": "user921462201",
   "reply_to_message_id": 4659,
   "text": [
    "Hello ",
    {
     "type": "mention",
     "text": "@gi0maz"
    },
    " , I can help. Have DMed you 🙌"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hello "
    },
    {
     "type": "mention",
     "text": "@gi0maz"
    },
    {
     "type": "plain",
     "text": " , I can help. Have DMed you 🙌"
    }
   ]
  },
  {
   "id": 4661,
   "type": "message",
   "date": "2024-08-19T19:55:52",
   "date_unixtime": "1724077552",
   "edited": "2024-08-19T20:12:10",
   "edited_unixtime": "1724078530",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4658,
   "text": [
    "Closest one that’s top of mind is scrolls new Canvas product. \n\n",
    {
     "type": "link",
     "text": "https://scroll.io/blog/scroll-canvas-build-your-onchain-story#"
    },
    ""
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Closest one that’s top of mind is scrolls new Canvas product. \n\n"
    },
    {
     "type": "link",
     "text": "https://scroll.io/blog/scroll-canvas-build-your-onchain-story#"
    },
    {
     "type": "plain",
     "text": ""
    }
   ]
  },
  {
   "id": 4662,
   "type": "message",
   "date": "2024-08-19T21:19:42",
   "date_unixtime": "1724082582",
   "edited": "2024-08-19T21:21:00",
   "edited_unixtime": "1724082660",
   "from": "Angel Say",
   "from_id": "user1998140265",
   "text": [
    "hey there! I've been working a farcaster cast action/frame that analyzes people's cast activity to classify them as bots and summarize what they cast about so you can choose who you engage with.\n\ni've been wanting to put the results on chain for a while and finally got around to adding EAS support entirely in frame: ",
    {
     "type": "link",
     "text": "https://warpcast.com/sayangel/0x4ecbb58e"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "hey there! I've been working a farcaster cast action/frame that analyzes people's cast activity to classify them as bots and summarize what they cast about so you can choose who you engage with.\n\ni've been wanting to put the results on chain for a while and finally got around to adding EAS support entirely in frame: "
    },
    {
     "type": "link",
     "text": "https://warpcast.com/sayangel/0x4ecbb58e"
    }
   ]
  },
  {
   "id": 4663,
   "type": "message",
   "date": "2024-08-20T02:48:04",
   "date_unixtime": "1724102284",
   "from": "Koushith.eth",
   "from_id": "user614575266",
   "reply_to_message_id": 2,
   "file": "(File not included. Change data exporting settings to download.)",
   "file_name": "tg_image_3909198235.png",
   "thumbnail": "(File not included. Change data exporting settings to download.)",
   "mime_type": "image/png",
   "width": 2200,
   "height": 204,
   "text": "i was trying to install the packages inside test. is this has anything to do with the node version? \n\nps- iam on node 20.16.0",
   "text_entities": [
    {
     "type": "plain",
     "text": "i was trying to install the packages inside test. is this has anything to do with the node version? \n\nps- iam on node 20.16.0"
    }
   ]
  },
  {
   "id": 4664,
   "type": "message",
   "date": "2024-08-20T05:28:46",
   "date_unixtime": "1724111926",
   "from": "Afo Wefa",
   "from_id": "user5700347535",
   "reply_to_message_id": 2,
   "file": "(File not included. Change data exporting settings to download.)",
   "file_name": "WorkResolver.t.sol",
   "text": [
    "Is there an test example for resolvers?\n \nI'm running into an error of ",
    {
     "type": "code",
     "text": "[FAIL. Reason: setup failed: InvalidEntryPoint()] setUp() (gas: 0)"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Is there an test example for resolvers?\n \nI'm running into an error of "
    },
    {
     "type": "code",
     "text": "[FAIL. Reason: setup failed: InvalidEntryPoint()] setUp() (gas: 0)"
    }
   ]
  },
  {
   "id": 4665,
   "type": "message",
   "date": "2024-08-20T08:50:19",
   "date_unixtime": "1724124019",
   "edited": "2024-08-20T08:53:43",
   "edited_unixtime": "1724124223",
   "from": "Afo Wefa",
   "from_id": "user5700347535",
   "text": [
    "Gm everyone, I'm participating in the Web3 Grants Ecosystem Grant Round on Gitcoin with the Greenpill Dev Guild and would love the support of the community.\n\nPlease reply with your grant project if also participating in a round and I'll support you as well, thanks!\n\n",
    {
     "type": "link",
     "text": "https://explorer.gitcoin.co/#/round/42161/385/70"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Gm everyone, I'm participating in the Web3 Grants Ecosystem Grant Round on Gitcoin with the Greenpill Dev Guild and would love the support of the community.\n\nPlease reply with your grant project if also participating in a round and I'll support you as well, thanks!\n\n"
    },
    {
     "type": "link",
     "text": "https://explorer.gitcoin.co/#/round/42161/385/70"
    }
   ]
  },
  {
   "id": 4666,
   "type": "message",
   "date": "2024-08-20T14:07:31",
   "date_unixtime": "1724143051",
   "edited": "2024-08-20T20:27:53",
   "edited_unixtime": "1724165873",
   "from": "Maxime Servais",
   "from_id": "user1287077609",
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 611,
   "height": 758,
   "text": [
    "Hey everyone,\n\njust wanted to let you know my first bountycaster bounty is up - 5 people will be randomly selected and each will get 20 USDC. \n\nAll you need to do is leave at least 5 reviews for dApps/tools you like/dislike  on ",
    {
     "type": "link",
     "text": "https://www.ethereum-ecosystem.com/new-review"
    },
    " .\n\nUnder the hood, when you leave a review, an onchain EAS attestation is issued :)\n\nWould also love to get your feedback on what I could improve in terms of UX"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey everyone,\n\njust wanted to let you know my first bountycaster bounty is up - 5 people will be randomly selected and each will get 20 USDC. \n\nAll you need to do is leave at least 5 reviews for dApps/tools you like/dislike  on "
    },
    {
     "type": "link",
     "text": "https://www.ethereum-ecosystem.com/new-review"
    },
    {
     "type": "plain",
     "text": " .\n\nUnder the hood, when you leave a review, an onchain EAS attestation is issued :)\n\nWould also love to get your feedback on what I could improve in terms of UX"
    }
   ]
  },
  {
   "id": 4669,
   "type": "service",
   "date": "2024-08-20T22:20:15",
   "date_unixtime": "1724172615",
   "actor": "Sandyagu R 🦴",
   "actor_id": "user1781245790",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4670,
   "type": "service",
   "date": "2024-08-21T01:24:46",
   "date_unixtime": "1724183686",
   "actor": "Jonathan",
   "actor_id": "user607154163",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4671,
   "type": "message",
   "date": "2024-08-21T20:37:49",
   "date_unixtime": "1724252869",
   "edited": "2024-08-22T16:08:31",
   "edited_unixtime": "1724323111",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 2,
   "text": [
    "Hey there! Which is the best steps in order to deploy de EAS contract a new chain? I tried to follow the documentation (",
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/quick--start/contracts#deploying"
    },
    ")  what I didn't have luck. \n\nTo avoid re invent the wheel I want to double check with you.\n\nThanks"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey there! Which is the best steps in order to deploy de EAS contract a new chain? I tried to follow the documentation ("
    },
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/quick--start/contracts#deploying"
    },
    {
     "type": "plain",
     "text": ")  what I didn't have luck. \n\nTo avoid re invent the wheel I want to double check with you.\n\nThanks"
    }
   ]
  },
  {
   "id": 4672,
   "type": "service",
   "date": "2024-08-21T22:35:17",
   "date_unixtime": "1724259917",
   "actor": "Amanda Schwartz Ramirez",
   "actor_id": "user1906591603",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4673,
   "type": "message",
   "date": "2024-08-22T00:04:50",
   "date_unixtime": "1724265290",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 4671,
   "text": "I think I found the way to do it. As soon as I can, I will share the result here, maybe with a PR.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I think I found the way to do it. As soon as I can, I will share the result here, maybe with a PR."
    }
   ]
  },
  {
   "id": 4674,
   "type": "service",
   "date": "2024-08-22T16:07:37",
   "date_unixtime": "1724323057",
   "actor": "José | bleu",
   "actor_id": "user703917865",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4675,
   "type": "message",
   "date": "2024-08-22T16:19:00",
   "date_unixtime": "1724323740",
   "from": "José | bleu",
   "from_id": "user703917865",
   "reply_to_message_id": 2,
   "text": "hey there! Is there a good example of using foundry to spin up a local EAS env for local development?",
   "text_entities": [
    {
     "type": "plain",
     "text": "hey there! Is there a good example of using foundry to spin up a local EAS env for local development?"
    }
   ]
  },
  {
   "id": 4676,
   "type": "message",
   "date": "2024-08-22T16:19:27",
   "date_unixtime": "1724323767",
   "from": "José | bleu",
   "from_id": "user703917865",
   "reply_to_message_id": 2,
   "text": "wondering how to build when being sometimes offline 😬not really practical to use sepolia every time",
   "text_entities": [
    {
     "type": "plain",
     "text": "wondering how to build when being sometimes offline 😬not really practical to use sepolia every time"
    }
   ]
  },
  {
   "id": 4677,
   "type": "message",
   "date": "2024-08-22T17:50:41",
   "date_unixtime": "1724329241",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Currently, Foundry is only configured such that the repo can used as dependency, while the development is using hardhat, but you could use hardhat node for that",
   "text_entities": [
    {
     "type": "plain",
     "text": "Currently, Foundry is only configured such that the repo can used as dependency, while the development is using hardhat, but you could use hardhat node for that"
    }
   ]
  },
  {
   "id": 4678,
   "type": "service",
   "date": "2024-08-22T22:56:33",
   "date_unixtime": "1724347593",
   "actor": "TravCrypto",
   "actor_id": "user1107959811",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4679,
   "type": "message",
   "date": "2024-08-22T23:00:11",
   "date_unixtime": "1724347811",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 2,
   "text": "Is there a public repo for the explorer?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Is there a public repo for the explorer?"
    }
   ]
  },
  {
   "id": 4680,
   "type": "message",
   "date": "2024-08-22T23:21:52",
   "date_unixtime": "1724349112",
   "edited": "2024-08-22T23:24:56",
   "edited_unixtime": "1724349296",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4679,
   "text": "It’s a private repo built on top of EAS! If you’re looking to do something custom, I’d use the OS indexer and create a custom explorer/experience based on the attestations that matter to your use case.",
   "text_entities": [
    {
     "type": "plain",
     "text": "It’s a private repo built on top of EAS! If you’re looking to do something custom, I’d use the OS indexer and create a custom explorer/experience based on the attestations that matter to your use case."
    }
   ]
  },
  {
   "id": 4681,
   "type": "message",
   "date": "2024-08-23T00:56:12",
   "date_unixtime": "1724354772",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 2,
   "text": [
    "Hey! I'm following this example:\n\n",
    {
     "type": "pre",
     "text": "import { EAS, SchemaEncoder } from '@ethereum-attestation-service/eas-sdk';\nconst eas = new EAS(EASContractAddress);\neas.connect(signer);\n\n// Initialize SchemaEncoder with the schema string\nconst schemaEncoder = new SchemaEncoder('uint256 eventId, uint8 voteIndex');\nconst encodedData = schemaEncoder.encodeData([\n  { name: 'eventId', value: 1, type: 'uint256' },\n  { name: 'voteIndex', value: 1, type: 'uint8' }\n]);\n\nconst schemaUID = '0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995';\n\nconst transaction = await eas.attest({\n  schema: schemaUID,\n  data: {\n    recipient: '0xFD50b031E778fAb33DfD2Fc3Ca66a1EeF0652165',\n    expirationTime: 0,\n    revocable: true, // Be aware that if your schema is not revocable, this MUST be false\n    data: encodedData\n  }\n});\n\nconst newAttestationUID = await transaction.wait();\n\nconsole.log('New attestation UID:', newAttestationUID);\n\nconsole.log('Transaction receipt:', transaction.receipt);\n",
     "language": "javascript"
    },
    "\n\nBut the tx is reverted ",
    {
     "type": "code",
     "text": "'transaction execution reverted'"
    },
    " \n\nAny thought? The EAS address and signer are correct. I don't know what I'm doing wrong."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey! I'm following this example:\n\n"
    },
    {
     "type": "pre",
     "text": "import { EAS, SchemaEncoder } from '@ethereum-attestation-service/eas-sdk';\nconst eas = new EAS(EASContractAddress);\neas.connect(signer);\n\n// Initialize SchemaEncoder with the schema string\nconst schemaEncoder = new SchemaEncoder('uint256 eventId, uint8 voteIndex');\nconst encodedData = schemaEncoder.encodeData([\n  { name: 'eventId', value: 1, type: 'uint256' },\n  { name: 'voteIndex', value: 1, type: 'uint8' }\n]);\n\nconst schemaUID = '0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995';\n\nconst transaction = await eas.attest({\n  schema: schemaUID,\n  data: {\n    recipient: '0xFD50b031E778fAb33DfD2Fc3Ca66a1EeF0652165',\n    expirationTime: 0,\n    revocable: true, // Be aware that if your schema is not revocable, this MUST be false\n    data: encodedData\n  }\n});\n\nconst newAttestationUID = await transaction.wait();\n\nconsole.log('New attestation UID:', newAttestationUID);\n\nconsole.log('Transaction receipt:', transaction.receipt);\n",
     "language": "javascript"
    },
    {
     "type": "plain",
     "text": "\n\nBut the tx is reverted "
    },
    {
     "type": "code",
     "text": "'transaction execution reverted'"
    },
    {
     "type": "plain",
     "text": " \n\nAny thought? The EAS address and signer are correct. I don't know what I'm doing wrong."
    }
   ]
  },
  {
   "id": 4682,
   "type": "message",
   "date": "2024-08-23T00:56:36",
   "date_unixtime": "1724354796",
   "from": "Nestor Bonilla",
   "from_id": "user1703734354",
   "reply_to_message_id": 2,
   "text": "Hi folks is there an example using EAS attestations with Smart Accounts? (I'd assume not using the SDK)",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi folks is there an example using EAS attestations with Smart Accounts? (I'd assume not using the SDK)"
    }
   ]
  },
  {
   "id": 4683,
   "type": "message",
   "date": "2024-08-23T01:04:21",
   "date_unixtime": "1724355261",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4681,
   "text": "Are you attesting on a chain where this schema exists? You should also check if this schema has a resolver with custom logic. It might be rejecting it.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Are you attesting on a chain where this schema exists? You should also check if this schema has a resolver with custom logic. It might be rejecting it."
    }
   ]
  },
  {
   "id": 4684,
   "type": "message",
   "date": "2024-08-23T01:05:06",
   "date_unixtime": "1724355306",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": "Also, if the schema is non-revocable, you can set the revocable param to true",
   "text_entities": [
    {
     "type": "plain",
     "text": "Also, if the schema is non-revocable, you can set the revocable param to true"
    }
   ]
  },
  {
   "id": 4685,
   "type": "message",
   "date": "2024-08-23T01:10:45",
   "date_unixtime": "1724355645",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 4684,
   "text": "Thanks! I will review your ideas!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Thanks! I will review your ideas!"
    }
   ]
  },
  {
   "id": 4686,
   "type": "message",
   "date": "2024-08-23T01:21:33",
   "date_unixtime": "1724356293",
   "edited": "2024-08-23T01:21:43",
   "edited_unixtime": "1724356303",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 4683,
   "text": "Finally, it worked, thanks so much for helping me to unblock.",
   "text_entities": [
    {
     "type": "plain",
     "text": "Finally, it worked, thanks so much for helping me to unblock."
    }
   ]
  },
  {
   "id": 4687,
   "type": "service",
   "date": "2024-08-23T13:46:30",
   "date_unixtime": "1724400990",
   "actor": "Iweta | vlayer.xyz",
   "actor_id": "user6216397233",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4688,
   "type": "message",
   "date": "2024-08-23T13:47:10",
   "date_unixtime": "1724401030",
   "edited": "2024-08-23T13:56:34",
   "edited_unixtime": "1724401594",
   "from": "Billy191 | Catalyzt",
   "from_id": "user6264463713",
   "reply_to_message_id": 2,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 1280,
   "height": 736,
   "text": "Hi, which method I can get whole UID that attest with this schema with EAS SDK in Typescript?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Hi, which method I can get whole UID that attest with this schema with EAS SDK in Typescript?"
    }
   ]
  },
  {
   "id": 4689,
   "type": "message",
   "date": "2024-08-23T18:53:27",
   "date_unixtime": "1724419407",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4688,
   "text": "Not sure what you mean. Can you rephrase the question?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Not sure what you mean. Can you rephrase the question?"
    }
   ]
  },
  {
   "id": 4690,
   "type": "message",
   "date": "2024-08-23T19:15:25",
   "date_unixtime": "1724420725",
   "edited": "2024-08-23T19:17:24",
   "edited_unixtime": "1724420844",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 2,
   "text": [
    "Hey guys, where can I find the testnets scanners for EAS? A list/link on the ",
    {
     "type": "code",
     "text": "EAS Contracts"
    },
    " page on the docs would be very much of an assistance \nAlso, Arbitrum Goerli is unusable, can we migrate to Arbitrum Sepolia? I can deploy the contracts if anything"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey guys, where can I find the testnets scanners for EAS? A list/link on the "
    },
    {
     "type": "code",
     "text": "EAS Contracts"
    },
    {
     "type": "plain",
     "text": " page on the docs would be very much of an assistance \nAlso, Arbitrum Goerli is unusable, can we migrate to Arbitrum Sepolia? I can deploy the contracts if anything"
    }
   ]
  },
  {
   "id": 4691,
   "type": "message",
   "date": "2024-08-23T19:18:16",
   "date_unixtime": "1724420896",
   "edited": "2024-08-23T19:19:43",
   "edited_unixtime": "1724420983",
   "from": "Steve Dakh | EAS",
   "from_id": "user1573279043",
   "reply_to_message_id": 4690,
   "text": [
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/easscan/overview#available-chains"
    }
   ],
   "text_entities": [
    {
     "type": "link",
     "text": "https://docs.attest.org/docs/easscan/overview#available-chains"
    }
   ]
  },
  {
   "id": 4692,
   "type": "message",
   "date": "2024-08-23T19:19:13",
   "date_unixtime": "1724420953",
   "from": "0xneves",
   "from_id": "user864188388",
   "reply_to_message_id": 4691,
   "text": "GOD",
   "text_entities": [
    {
     "type": "plain",
     "text": "GOD"
    }
   ]
  },
  {
   "id": 4693,
   "type": "message",
   "date": "2024-08-23T20:10:07",
   "date_unixtime": "1724424007",
   "edited": "2024-08-23T20:10:18",
   "edited_unixtime": "1724424018",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 2,
   "text": [
    "Hey ,I found a small bug in the indexer project. Some env variables are not passing, indeed the only one is CHAIN_ID. \n\nLooks at this:\n.env\n",
    {
     "type": "pre",
     "text": "DATABASE_URL=postgresql://user:password@localhost:5432/eas-sepolia\nINFURA_API_KEY=\nINFURA_IPFS_USER=\nINFURA_IPFS_PASS=\nALCHEMY_ARBITRUM_API_KEY=\nALCHEMY_SEPOLIA_API_KEY=\nALCHEMY_OPTIMISM_GOERLI_API_KEY=\n#POLLING_INTERVAL=60000\n#DISABLE_LISTENER=true\n#REQUEST_DELAY=500 # How many ms to wait before making a request to RPC (useful for free plans)\nBATCH_SIZE=2000 # How many blocks to fetch at once (some providers have limits)\n\n# Sepolia\nCHAIN_ID=11155111\n",
     "language": "shell"
    },
    "\n\nbut in the docker-compoe.yml file the only one that is set is the chain id:\n\n",
    {
     "type": "pre",
     "text": " eas-indexer:\n    build: .\n    container_name: eas_indexer_container\n    environment:\n      CHAIN_ID: ${CHAIN_ID}\n      DATABASE_URL: \"postgresql://postgres:postgresPassword@eas-postgres:5432/eas-index\"\n    depends_on:\n      - eas-postgres\n    ports:\n      - \"4000:4000\"",
     "language": ""
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey ,I found a small bug in the indexer project. Some env variables are not passing, indeed the only one is CHAIN_ID. \n\nLooks at this:\n.env\n"
    },
    {
     "type": "pre",
     "text": "DATABASE_URL=postgresql://user:password@localhost:5432/eas-sepolia\nINFURA_API_KEY=\nINFURA_IPFS_USER=\nINFURA_IPFS_PASS=\nALCHEMY_ARBITRUM_API_KEY=\nALCHEMY_SEPOLIA_API_KEY=\nALCHEMY_OPTIMISM_GOERLI_API_KEY=\n#POLLING_INTERVAL=60000\n#DISABLE_LISTENER=true\n#REQUEST_DELAY=500 # How many ms to wait before making a request to RPC (useful for free plans)\nBATCH_SIZE=2000 # How many blocks to fetch at once (some providers have limits)\n\n# Sepolia\nCHAIN_ID=11155111\n",
     "language": "shell"
    },
    {
     "type": "plain",
     "text": "\n\nbut in the docker-compoe.yml file the only one that is set is the chain id:\n\n"
    },
    {
     "type": "pre",
     "text": " eas-indexer:\n    build: .\n    container_name: eas_indexer_container\n    environment:\n      CHAIN_ID: ${CHAIN_ID}\n      DATABASE_URL: \"postgresql://postgres:postgresPassword@eas-postgres:5432/eas-index\"\n    depends_on:\n      - eas-postgres\n    ports:\n      - \"4000:4000\"",
     "language": ""
    }
   ]
  },
  {
   "id": 4694,
   "type": "message",
   "date": "2024-08-23T20:10:57",
   "date_unixtime": "1724424057",
   "edited": "2024-08-23T20:11:29",
   "edited_unixtime": "1724424089",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 2,
   "text": "I fixed it locally, but I'm not an expert on docker, so maybe there is something that I'm missing.",
   "text_entities": [
    {
     "type": "plain",
     "text": "I fixed it locally, but I'm not an expert on docker, so maybe there is something that I'm missing."
    }
   ]
  },
  {
   "id": 4695,
   "type": "message",
   "date": "2024-08-23T20:26:59",
   "date_unixtime": "1724425019",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 4694,
   "text": [
    "docker-composer automatically passes ",
    {
     "type": "code",
     "text": ".env"
    },
    " variables, so perhaps it was something else"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "docker-composer automatically passes "
    },
    {
     "type": "code",
     "text": ".env"
    },
    {
     "type": "plain",
     "text": " variables, so perhaps it was something else"
    }
   ]
  },
  {
   "id": 4696,
   "type": "message",
   "date": "2024-08-23T20:27:06",
   "date_unixtime": "1724425026",
   "edited": "2024-08-23T20:33:36",
   "edited_unixtime": "1724425416",
   "from": "Billy191 | Catalyzt",
   "from_id": "user6264463713",
   "reply_to_message_id": 4689,
   "text": "I mean how solution to get all attestation that use this scheme via Typescript SDK?",
   "text_entities": [
    {
     "type": "plain",
     "text": "I mean how solution to get all attestation that use this scheme via Typescript SDK?"
    }
   ]
  },
  {
   "id": 4697,
   "type": "message",
   "date": "2024-08-23T20:27:13",
   "date_unixtime": "1724425033",
   "from": "Leo",
   "from_id": "user89303955",
   "reply_to_message_id": 2,
   "text": [
    "Maybe you have an outdated ",
    {
     "type": "code",
     "text": "docker-composer"
    },
    " version"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Maybe you have an outdated "
    },
    {
     "type": "code",
     "text": "docker-composer"
    },
    {
     "type": "plain",
     "text": " version"
    }
   ]
  },
  {
   "id": 4698,
   "type": "message",
   "date": "2024-08-23T20:34:03",
   "date_unixtime": "1724425443",
   "from": "Billy191 | Catalyzt",
   "from_id": "user6264463713",
   "reply_to_message_id": 4696,
   "text": "Like .getAllAttestation() or something",
   "text_entities": [
    {
     "type": "plain",
     "text": "Like .getAllAttestation() or something"
    }
   ]
  },
  {
   "id": 4699,
   "type": "message",
   "date": "2024-08-23T20:48:11",
   "date_unixtime": "1724426291",
   "edited": "2024-08-23T20:54:06",
   "edited_unixtime": "1724426646",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 4697,
   "text": "It is possible that I did something wrong because I'm forking it to integrate into another chain. But I tested with sepolia and I have the same issue.\nI'll review it again. Also, I have the intention to share the PR so you can double-check it.\n\nAgain thanks",
   "text_entities": [
    {
     "type": "plain",
     "text": "It is possible that I did something wrong because I'm forking it to integrate into another chain. But I tested with sepolia and I have the same issue.\nI'll review it again. Also, I have the intention to share the PR so you can double-check it.\n\nAgain thanks"
    }
   ]
  },
  {
   "id": 4700,
   "type": "message",
   "date": "2024-08-23T22:43:34",
   "date_unixtime": "1724433214",
   "edited": "2024-08-23T23:42:05",
   "edited_unixtime": "1724436725",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "text": [
    "Hey everyone! We're excited to introduce a new algorithm for computing and propagating trust in p2p reputations systems! It builds off a few limitations we believe exist with EigenTrust and other existing systems. \n\nWould appreciate any feedback on it!\n\nHere's the post!\n",
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1827031015640256955"
    }
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey everyone! We're excited to introduce a new algorithm for computing and propagating trust in p2p reputations systems! It builds off a few limitations we believe exist with EigenTrust and other existing systems. \n\nWould appreciate any feedback on it!\n\nHere's the post!\n"
    },
    {
     "type": "link",
     "text": "https://x.com/eas_eth/status/1827031015640256955"
    }
   ]
  },
  {
   "id": 4701,
   "type": "message",
   "date": "2024-08-24T10:32:29",
   "date_unixtime": "1724475749",
   "from": "Lynn",
   "from_id": "user1105417340",
   "text": "Nice! Yeah been digging into eigentrust & it’s limits",
   "text_entities": [
    {
     "type": "plain",
     "text": "Nice! Yeah been digging into eigentrust & it’s limits"
    }
   ]
  },
  {
   "id": 4702,
   "type": "service",
   "date": "2024-08-24T21:58:13",
   "date_unixtime": "1724516893",
   "actor": "Elijah",
   "actor_id": "user6543145151",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4703,
   "type": "service",
   "date": "2024-08-26T06:35:48",
   "date_unixtime": "1724634348",
   "actor": "Nixon Joshy",
   "actor_id": "user7346481821",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4704,
   "type": "message",
   "date": "2024-08-26T19:59:43",
   "date_unixtime": "1724682583",
   "from": "Daniel Ospina",
   "from_id": "user551595722",
   "text": [
    "For those who are interested in brainstorming and hacking on collaborative tech in the blockchain/web3 space Arbitrum and RnDAO is hosting the CollabTech Hackathon in October: ",
    {
     "type": "text_link",
     "text": "https://www.rndao.io/collabtech",
     "href": "https://www.rndao.io/collabtech"
    },
    "."
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "For those who are interested in brainstorming and hacking on collaborative tech in the blockchain/web3 space Arbitrum and RnDAO is hosting the CollabTech Hackathon in October: "
    },
    {
     "type": "text_link",
     "text": "https://www.rndao.io/collabtech",
     "href": "https://www.rndao.io/collabtech"
    },
    {
     "type": "plain",
     "text": "."
    }
   ]
  },
  {
   "id": 4705,
   "type": "message",
   "date": "2024-08-26T20:03:42",
   "date_unixtime": "1724682822",
   "from": "Lynn",
   "from_id": "user1105417340",
   "text": "Does it have to be on arb/particular tech stack?",
   "text_entities": [
    {
     "type": "plain",
     "text": "Does it have to be on arb/particular tech stack?"
    }
   ]
  },
  {
   "id": 4706,
   "type": "message",
   "date": "2024-08-26T21:33:48",
   "date_unixtime": "1724688228",
   "edited": "2024-08-26T21:49:35",
   "edited_unixtime": "1724689175",
   "from": "Jonathan",
   "from_id": "user607154163",
   "reply_to_message_id": 1848,
   "text": [
    "Hey there! We are happy that we created the PRs to integrate EAS to Rootstock. We would love to have this integration. Could you let us know what you think?\n\n",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts/pull/151"
    },
    "\n",
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-indexing-service/pull/5"
    },
    "\n\nThanks!"
   ],
   "text_entities": [
    {
     "type": "plain",
     "text": "Hey there! We are happy that we created the PRs to integrate EAS to Rootstock. We would love to have this integration. Could you let us know what you think?\n\n"
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-contracts/pull/151"
    },
    {
     "type": "plain",
     "text": "\n"
    },
    {
     "type": "link",
     "text": "https://github.com/ethereum-attestation-service/eas-indexing-service/pull/5"
    },
    {
     "type": "plain",
     "text": "\n\nThanks!"
    }
   ]
  },
  {
   "id": 4707,
   "type": "message",
   "date": "2024-08-26T21:50:01",
   "date_unixtime": "1724689201",
   "edited": "2024-08-26T22:59:42",
   "edited_unixtime": "1724693382",
   "from": "Bryce | EAS",
   "from_id": "user2034320790",
   "reply_to_message_id": 4706,
   "text": "Congrats on the deployment! I'd be curious to learn how you all are thinking about attestations in general. Shoot me a DM!",
   "text_entities": [
    {
     "type": "plain",
     "text": "Congrats on the deployment! I'd be curious to learn how you all are thinking about attestations in general. Shoot me a DM!"
    }
   ]
  },
  {
   "id": 4708,
   "type": "service",
   "date": "2024-08-27T02:16:15",
   "date_unixtime": "1724705175",
   "actor": "anson parker",
   "actor_id": "user1640466919",
   "action": "join_group_by_link",
   "inviter": "Group",
   "text": "",
   "text_entities": []
  },
  {
   "id": 4709,
   "type": "message",
   "date": "2024-08-27T02:20:59",
   "date_unixtime": "1724705459",
   "edited": "2024-08-27T02:49:37",
   "edited_unixtime": "1724707177",
   "from": "anson parker",
   "from_id": "user1640466919",
   "reply_to_message_id": 1848,
   "photo": "(File not included. Change data exporting settings to download.)",
   "width": 960,
   "height": 1280,
   "text": "Got the foundry running again and testing a new ingot mold (needs some improvements) but got a sweet copper bronze attestation piece cast = keep up the great work yall :)",
   "text_entities": [
    {
     "type": "plain",
     "text": "Got the foundry running again and testing a new ingot mold (needs some improvements) but got a sweet copper bronze attestation piece cast = keep up the great work yall :)"
    }
   ]
  }
 ]
}